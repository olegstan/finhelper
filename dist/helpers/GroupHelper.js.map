{"version":3,"file":"GroupHelper.js","names":["ActiveConstants","ActiveModel","AccountConstants","ActiveValuer","CurrencyConstants","ActiveValueCalculator","GroupHelper","prepareArchiveActives","actives","groupType","modelClass","activeSortedItems","sortedItems","activeSubIndex","map","item","subkey","item_id","item_type","name_text","indexOf","push","keyId","attributes","create","buy_trades","sell_trades","trade","BY_TYPE","BY_GROUP","BY_ACCOUNT","activeIndex","isPackage","type_id","account","getAccountBySubAccountId","from_account_id","key","id","CURRENCY","to_account_id","buy_account_id","buy_account_idd","setValuation","setPaidSum","group","e","console","log","groupByAccount","accountId","name","subName","getActiveNameByType","getActiveNameByGroup","trades","prepareActives","groups","subGroup","sort","c1","c2","valuation1","valuation","valuation2","combineTrades","mainTrade","items","obj","getValuation","sum","index","subIndex","getAccountNameByActive","nameIndex","nameSubIndex","paid_sum","paidSum","getSum","prepareAccounts","accounts","filter","BROKER_ACCOUNT","TEMP","subAccount","currency","getCurrencyById","currency_id","code","sign","prepareLogs","logs","indexCurrency","pairs","income","outcome","keyItem","error","pair","user_account"],"sources":["../../src/helpers/GroupHelper.js"],"sourcesContent":["import ActiveConstants from \"../constants/ActiveConstants\"\r\nimport ActiveModel from \"../models/Active\"\r\nimport AccountConstants from \"../constants/AccountConstants\"\r\nimport ActiveValuer from \"./Active/ActiveValuer\";\r\nimport CurrencyConstants from \"./../constants/CurrencyConstants\";\r\nimport ActiveValueCalculator from \"./Active/ActiveValueCalculator\";\r\n\r\nclass GroupHelper\r\n{\r\n  /**\r\n   *\r\n   * @param actives\r\n   * @param groupType\r\n   * @param modelClass\r\n   * @returns {*[]}\r\n   */\r\n  static prepareArchiveActives(actives, groupType, modelClass = ActiveModel)\r\n  {\r\n    try\r\n    {\r\n      let activeSortedItems = [];\r\n\r\n      let sortedItems = [];\r\n      let activeSubIndex = [];\r\n\r\n      actives.map((item) =>\r\n      {\r\n        let subkey = item.item_id ? item.item_type + '.' + item.item_id : item.name_text;\r\n\r\n        if (activeSubIndex.indexOf(subkey) === -1)\r\n        {\r\n          activeSubIndex.push(subkey);\r\n        }\r\n\r\n        let keyId = activeSubIndex.indexOf(subkey)\r\n        item.keyId = keyId;\r\n        item.attributes.keyId = keyId;\r\n\r\n        if (typeof activeSortedItems[keyId] === 'undefined')\r\n        {\r\n          activeSortedItems[keyId] = modelClass.create({...item.attributes});\r\n\r\n          activeSortedItems[keyId].attributes.buy_trades = [];\r\n          activeSortedItems[keyId].attributes.sell_trades = [];\r\n        }\r\n\r\n        item.attributes?.buy_trades?.map((trade) =>\r\n        {\r\n          activeSortedItems[keyId].attributes.buy_trades.push({...trade})\r\n        })\r\n\r\n        item.attributes?.sell_trades?.map((trade) =>\r\n        {\r\n          activeSortedItems[keyId].attributes.sell_trades.push({...trade})\r\n        })\r\n      });\r\n\r\n      if (groupType === ActiveConstants.BY_TYPE)\r\n      {\r\n        sortedItems = activeSortedItems;\r\n      } else if (groupType === ActiveConstants.BY_GROUP)\r\n      {\r\n        sortedItems = activeSortedItems;\r\n      } else if (groupType === ActiveConstants.BY_ACCOUNT)\r\n      {\r\n        let activeIndex = [];\r\n\r\n        activeSortedItems.map((item) =>\r\n        {\r\n          if (ActiveConstants.isPackage(item.type_id))\r\n          {\r\n            item.attributes?.buy_trades?.map((trade) =>\r\n            {\r\n              let account = AccountConstants.getAccountBySubAccountId(trade.from_account_id);\r\n\r\n              let key = item.id + (account ? account.id : 'none');\r\n\r\n              if (activeIndex.indexOf(key) === -1)\r\n              {\r\n                activeIndex.push(key);\r\n              }\r\n\r\n              let keyId = activeIndex.indexOf(key)\r\n              item.keyId = keyId;\r\n              item.attributes.keyId = keyId;\r\n\r\n              if (typeof sortedItems[keyId] === 'undefined')\r\n              {\r\n                sortedItems[keyId] = modelClass.create({...item.attributes});\r\n\r\n                sortedItems[keyId].attributes.buy_trades = [];\r\n                sortedItems[keyId].attributes.sell_trades = [];\r\n              }\r\n            });\r\n\r\n            item.attributes?.sell_trades?.map((trade) =>\r\n            {\r\n              let account;\r\n\r\n              if (item.type_id === ActiveConstants.CURRENCY)\r\n              {\r\n                account = AccountConstants.getAccountBySubAccountId(trade.to_account_id);\r\n              } else\r\n              {\r\n                account = AccountConstants.getAccountBySubAccountId(trade.from_account_id);\r\n              }\r\n\r\n\r\n              let key = item.id + (account ? account.id : 'none');\r\n\r\n              if (activeIndex.indexOf(key) === -1)\r\n              {\r\n                activeIndex.push(key);\r\n              }\r\n\r\n              let keyId = activeIndex.indexOf(key)\r\n              item.keyId = keyId;\r\n              item.attributes.keyId = keyId;\r\n\r\n              if (typeof sortedItems[keyId] === 'undefined')\r\n              {\r\n                sortedItems[keyId] = modelClass.create({...item.attributes});\r\n\r\n                sortedItems[keyId].attributes.buy_trades = [];\r\n                sortedItems[keyId].attributes.sell_trades = [];\r\n              }\r\n            });\r\n\r\n            item.attributes?.buy_trades?.map((trade) =>\r\n            {\r\n              let account = AccountConstants.getAccountBySubAccountId(trade.from_account_id);\r\n\r\n              let key = item.id + (account ? account.id : 'none');\r\n\r\n              let keyId = activeIndex.indexOf(key)\r\n\r\n              sortedItems[keyId].attributes.buy_trades.push({...trade});\r\n            });\r\n\r\n\r\n            item.attributes?.sell_trades?.map((trade) =>\r\n            {\r\n              let account;\r\n\r\n              if (item.type_id === ActiveConstants.CURRENCY)\r\n              {\r\n                account = AccountConstants.getAccountBySubAccountId(trade.to_account_id);\r\n              } else\r\n              {\r\n                account = AccountConstants.getAccountBySubAccountId(trade.from_account_id);\r\n              }\r\n\r\n              let key = item.id + (account ? account.id : 'none');\r\n\r\n              let keyId = activeIndex.indexOf(key)\r\n\r\n              sortedItems[keyId].attributes.sell_trades.push({...trade});\r\n\r\n\r\n            });\r\n          } else\r\n          {\r\n            let key = item.id + 'none';\r\n\r\n            if (item.buy_account_id)\r\n            {\r\n              let account = AccountConstants.getAccountBySubAccountId(item.buy_account_idd);\r\n\r\n              key = item.id + (account ? account.id : 'none');\r\n            }\r\n\r\n            if (activeIndex.indexOf(key) === -1)\r\n            {\r\n              activeIndex.push(key);\r\n            }\r\n\r\n            let keyId = activeIndex.indexOf(key)\r\n            item.keyId = keyId;\r\n            item.attributes.keyId = keyId;\r\n\r\n            if (typeof sortedItems[keyId] === 'undefined')\r\n            {\r\n              sortedItems[keyId] = modelClass.create({...item.attributes});\r\n\r\n              sortedItems[keyId].attributes.buy_trades = [];\r\n              sortedItems[keyId].attributes.sell_trades = [];\r\n            }\r\n          }\r\n\r\n\r\n        });\r\n\r\n        GroupHelper.setValuation(sortedItems);\r\n        GroupHelper.setPaidSum(sortedItems);\r\n      }\r\n\r\n      return GroupHelper.group(sortedItems, groupType);\r\n    } catch (e)\r\n    {\r\n      console.log(e)\r\n      return []\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param item\r\n   * @param accountId\r\n   * @param sortedItems\r\n   * @param activeIndex\r\n   * @param groupType\r\n   * @param modelClass\r\n   * @returns {string}\r\n   */\r\n  static groupByAccount(item, accountId, sortedItems, activeIndex, groupType, modelClass = ActiveModel)\r\n  {\r\n    let name = '';\r\n    let subName = '';\r\n    let account = null;\r\n\r\n    if (groupType === ActiveConstants.BY_TYPE)\r\n    {\r\n      name = ActiveConstants.getActiveNameByType(item);\r\n      account = AccountConstants.getAccountBySubAccountId(accountId);\r\n      subName = account ? account.name : 'Без названия';\r\n    } else if (groupType === ActiveConstants.BY_GROUP)\r\n    {\r\n      name = ActiveConstants.getActiveNameByGroup(item);\r\n      account = AccountConstants.getAccountBySubAccountId(accountId);\r\n      subName = account ? account.name : 'Без названия';\r\n    } else if (groupType === ActiveConstants.BY_ACCOUNT)\r\n    {\r\n      account = AccountConstants.getAccountBySubAccountId(accountId);\r\n\r\n      name = account ? account.name : 'Без названия';\r\n      subName = ActiveConstants.getActiveNameByType(item);\r\n    }\r\n\r\n    let key = item.id + name + subName + 'none';\r\n\r\n    if (activeIndex.indexOf(key) === -1)\r\n    {\r\n      activeIndex.push(key);\r\n    }\r\n\r\n\r\n    if (typeof sortedItems[activeIndex.indexOf(key)] === 'undefined')\r\n    {\r\n      sortedItems[activeIndex.indexOf(key)] = modelClass.create({...item.attributes});\r\n\r\n      sortedItems[activeIndex.indexOf(key)].attributes.trades = [];\r\n      sortedItems[activeIndex.indexOf(key)].attributes.buy_trades = [];\r\n      sortedItems[activeIndex.indexOf(key)].attributes.sell_trades = [];\r\n    }\r\n\r\n    return key;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param actives\r\n   * @param groupType\r\n   * @param modelClass\r\n   * @returns {*[]}\r\n   */\r\n  static prepareActives(actives, groupType, modelClass = ActiveModel)\r\n  {\r\n    try\r\n    {\r\n      let sortedItems = [];\r\n      let activeIndex = [];\r\n      let key = '';\r\n\r\n      actives.map((item) =>\r\n      {\r\n        if (ActiveConstants.isPackage(item.type_id))\r\n        {\r\n          item.attributes?.buy_trades?.map((trade) =>\r\n          {\r\n            key = GroupHelper.groupByAccount(item, trade.from_account_id, sortedItems, activeIndex, groupType, modelClass);\r\n\r\n            sortedItems[activeIndex.indexOf(key)].attributes.buy_trades.push({...trade});\r\n          });\r\n\r\n          item.attributes?.sell_trades?.map((trade) =>\r\n          {\r\n            key = GroupHelper.groupByAccount(item, trade.from_account_id, sortedItems, activeIndex, groupType, modelClass);\r\n\r\n            sortedItems[activeIndex.indexOf(key)].attributes.sell_trades.push({...trade});\r\n          });\r\n        } else\r\n        {\r\n          key = GroupHelper.groupByAccount(item, item.buy_account_id, sortedItems, activeIndex, groupType,  modelClass);\r\n        }\r\n      });\r\n\r\n      GroupHelper.setValuation(sortedItems);\r\n      GroupHelper.setPaidSum(sortedItems);\r\n\r\n      let groups = GroupHelper.group(sortedItems, groupType);\r\n\r\n      //сортируем по оценке\r\n      groups.map((group) =>\r\n      {\r\n        group.groups.map((subGroup) =>\r\n        {\r\n          subGroup.actives?.sort((c1, c2) =>\r\n          {\r\n            let valuation1 = c1.valuation;\r\n            let valuation2 = c2.valuation;\r\n\r\n            return (valuation1 < valuation2) ? 1 : (valuation1 > valuation2) ? -1 : 0\r\n          })\r\n        })\r\n      });\r\n\r\n      //проверить создание покупки после группировки, не улетал запрос на бек\r\n      // let tradeIndex = [];\r\n      // let tradeGroup = [];\r\n      //\r\n      // //группируем, если дата покупки одна\r\n      // groups.map((group) => {\r\n      //   group.groups.map((subGroup) => {\r\n      //     subGroup.actives.map((active) => {\r\n      //       active.buy_trades.map((trade) => {\r\n      //         let date = moment(trade.trade_at, 'DD.MM.YYYY HH:mm:ss').format('YYYY-MM-DD')\r\n      //\r\n      //         let tradeKey = active.id + '-' + date;\r\n      //\r\n      //         if (tradeIndex.indexOf(tradeKey) === -1) {\r\n      //           tradeIndex.push(tradeKey);\r\n      //         }\r\n      //\r\n      //         if (typeof tradeGroup[tradeIndex.indexOf(tradeKey)] === 'undefined') {\r\n      //           tradeGroup[tradeIndex.indexOf(tradeKey)] = [];\r\n      //         }\r\n      //\r\n      //         tradeGroup[tradeIndex.indexOf(tradeKey)].push(trade);\r\n      //\r\n      //         trade.trades = tradeGroup[tradeIndex.indexOf(tradeKey)];\r\n      //       })\r\n      //     })\r\n      //   })\r\n      // });\r\n\r\n\r\n      return groups;\r\n    } catch (e)\r\n    {\r\n      console.log(e)\r\n      return []\r\n    }\r\n  }\r\n\r\n  static combineTrades(mainTrade, trade)\r\n  {\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param items\r\n   */\r\n  static setValuation(items)\r\n  {\r\n    items.map((item) =>\r\n    {\r\n      let obj = ActiveValuer.getValuation(item.attributes)\r\n\r\n      if (obj)\r\n      {\r\n        item.attributes['valuation'] = obj.sum;\r\n      } else\r\n      {\r\n        item.attributes['valuation'] = 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param items\r\n   */\r\n  static setPaidSum(items)\r\n  {\r\n    items.map((item) =>\r\n    {\r\n      item.attributes['paid_sum'] = 1000000;\r\n      // let obj = ActiveValuer.getValuation(item.attributes)\r\n      //\r\n      // if (obj)\r\n      // {\r\n      //   item.attributes['valuation'] = obj.sum;\r\n      // } else\r\n      // {\r\n      //   item.attributes['valuation'] = 0;\r\n      // }\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param sortedItems\r\n   * @param groupType\r\n   * @return {*[]}\r\n   */\r\n  static group(sortedItems, groupType)\r\n  {\r\n    let groups = [];\r\n    let index = [];\r\n    let subIndex = [];\r\n\r\n    sortedItems.map((item, key) =>\r\n    {\r\n      let name = '';\r\n      let subName = '';\r\n\r\n      if (groupType === ActiveConstants.BY_TYPE)\r\n      {\r\n        name = ActiveConstants.getActiveNameByType(item);\r\n        subName = ActiveConstants.getAccountNameByActive(item);\r\n\r\n      } else if (groupType === ActiveConstants.BY_GROUP)\r\n      {\r\n        name = ActiveConstants.getActiveNameByGroup(item);\r\n        subName = ActiveConstants.getAccountNameByActive(item);\r\n\r\n      } else if (groupType === ActiveConstants.BY_ACCOUNT)\r\n      {\r\n        name = ActiveConstants.getAccountNameByActive(item);\r\n        subName = ActiveConstants.getActiveNameByType(item);\r\n      }\r\n\r\n      if (index.indexOf(name) === -1)\r\n      {\r\n        index.push(name);\r\n      }\r\n\r\n      let nameIndex = index.indexOf(name);\r\n\r\n      if (typeof subIndex[nameIndex] === 'undefined')\r\n      {\r\n        subIndex[nameIndex] = [];\r\n      }\r\n\r\n      if (subIndex[nameIndex].indexOf(subName) === -1)\r\n      {\r\n        subIndex[nameIndex].push(subName);\r\n      }\r\n\r\n      let nameSubIndex = subIndex[nameIndex].indexOf(subName);\r\n\r\n      if (typeof groups[nameIndex] === 'undefined')\r\n      {\r\n        groups[nameIndex] = {\r\n          name: name,\r\n          sum: 0,\r\n          paid_sum: 0,\r\n          groups: []\r\n        }\r\n      }\r\n\r\n      if (typeof groups[nameIndex].groups[nameSubIndex] === 'undefined')\r\n      {\r\n        groups[nameIndex].groups[nameSubIndex] = {\r\n          name: subName,\r\n          sum: 0,\r\n          paid_sum: 0,\r\n          actives: []\r\n        }\r\n      }\r\n\r\n      let paidSum = ActiveValueCalculator.getSum(item.buy_trades)\r\n\r\n      groups[nameIndex].sum += item.valuation;\r\n      groups[nameIndex].paid_sum += paidSum;\r\n      groups[nameIndex].groups[nameSubIndex].sum += item.valuation;\r\n      groups[nameIndex].groups[nameSubIndex].paid_sum += paidSum;\r\n      groups[nameIndex].groups[nameSubIndex].actives.push(item);\r\n\r\n\r\n    });\r\n\r\n    return groups;\r\n  }\r\n\r\n  static prepareAccounts(accounts)\r\n  {\r\n    let index = [];\r\n    let groups = [];\r\n\r\n    accounts.filter((account) =>\r\n    {\r\n      return account.type_id === AccountConstants.BROKER_ACCOUNT && account.type_id !== AccountConstants.TEMP;\r\n    }).map((account, key) =>\r\n    {\r\n      account.accounts.map((subAccount) =>\r\n      {\r\n        let currency = CurrencyConstants.getCurrencyById(subAccount.currency_id)\r\n\r\n        if (index.indexOf(currency.code) === -1)\r\n        {\r\n          index.push(currency.code);\r\n        }\r\n        //\r\n        if (typeof groups[index.indexOf(currency.code)] === 'undefined')\r\n        {\r\n          groups[index.indexOf(currency.code)] = {\r\n            name: currency.code,\r\n            sign: currency.sign,\r\n            sum: 0,\r\n          }\r\n        }\r\n\r\n        groups[index.indexOf(currency.code)].sum += subAccount.sum;\r\n      });\r\n    })\r\n\r\n    return groups;\r\n  }\r\n\r\n  static prepareLogs(logs, currency)\r\n  {\r\n    let index = [];\r\n    let indexCurrency = [];\r\n    let pairs = [];\r\n    let groups = [];\r\n    groups[0] = {\r\n      income: 0,\r\n      outcome: 0,\r\n      sign: currency.sign\r\n    }\r\n\r\n\r\n    logs.map((item, key) =>\r\n    {\r\n      try\r\n      {\r\n        let keyItem = item.item_id + item.item_type;\r\n        if (index.indexOf(keyItem) === -1)\r\n        {\r\n          index.push(keyItem);\r\n        }\r\n\r\n        if (typeof pairs[index.indexOf(keyItem)] === 'undefined')\r\n        {\r\n          pairs[index.indexOf(keyItem)] = {\r\n            income: null,\r\n            outcome: null\r\n          }\r\n        }\r\n\r\n        let currency = CurrencyConstants.getCurrencyById(item.account.currency_id)\r\n\r\n        if (indexCurrency.indexOf(currency.sign) === -1)\r\n        {\r\n          indexCurrency.push(currency.sign);\r\n        }\r\n\r\n        if (item.sum > 0 && item.item_type === 'transfer')\r\n        {\r\n          pairs[index.indexOf(keyItem)].income = item;\r\n        }\r\n        //\r\n        if (item.sum < 0 && item.item_type === 'transfer')\r\n        {\r\n          pairs[index.indexOf(keyItem)].outcome = item;\r\n        }\r\n      } catch (e)\r\n      {\r\n        console.error(e)\r\n      }\r\n\r\n\r\n    });\r\n\r\n    pairs.map((pair) =>\r\n    {\r\n      //деньги пришли на брокерский счёт с другого типа счёта или без счёта\r\n      if (pair?.income?.account?.user_account?.type_id && pair.income.account.user_account.type_id === AccountConstants.BROKER_ACCOUNT && ((pair.outcome && pair.outcome.account.user_account.type_id !== AccountConstants.BROKER_ACCOUNT) || pair.outcome === null))\r\n      {\r\n        groups[0].income += pair.income.sum;\r\n      }\r\n\r\n      //деньги сняты с брокерского счёта\r\n      if (((pair?.income?.account?.user_account?.type_id && pair.income.account.user_account.type_id !== AccountConstants.BROKER_ACCOUNT) || pair.income === null) && pair.outcome && pair.outcome.account.user_account.type_id === AccountConstants.BROKER_ACCOUNT)\r\n      {\r\n        groups[0].outcome += pair.outcome.sum;\r\n      }\r\n\r\n\r\n    });\r\n\r\n\r\n    return groups;\r\n  }\r\n}\r\n\r\n\r\nexport default GroupHelper;\r\n"],"mappings":"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"}