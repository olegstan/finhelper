{"version":3,"file":"Plan.js","names":["Money","Plan","balance","item","plan_income","toDigits","outcome","obligation","additional_outcome","plan_goals","retired_goals","calcIncome","months","user","income_neutral","income_negative","income_positive","add_income","percent_neutral","percent_negative","percent_positive","sum","tax","income","firstPart","secondPart"],"sources":["../../src/helpers/Plan.js"],"sourcesContent":["import Money from \"./Money\";\r\n\r\nexport default class Plan\r\n{\r\n  static balance(item)\r\n  {\r\n    let balance = 0;\r\n\r\n    if (item.plan_income)\r\n    {\r\n      balance += Money.toDigits(item.plan_income)\r\n    }\r\n    if (item.outcome)\r\n    {\r\n      balance -= Money.toDigits(item.outcome)\r\n    }\r\n    if (item.obligation)\r\n    {\r\n      balance -= Money.toDigits(item.obligation)\r\n    }\r\n    if (item.additional_outcome)\r\n    {\r\n      balance -= Money.toDigits(item.additional_outcome)\r\n    }\r\n    if (item.plan_goals)\r\n    {\r\n      balance -= Money.toDigits(item.plan_goals)\r\n    }\r\n    if (item.retired_goals)\r\n    {\r\n      balance -= Money.toDigits(item.retired_goals)\r\n    }\r\n\r\n    return balance;\r\n  }\r\n\r\n  static calcIncome(months, item, user)\r\n  {\r\n    let income_neutral = Money.toDigits(item['income_neutral']);\r\n    let income_negative = Money.toDigits(item['income_negative']);\r\n    let income_positive = Money.toDigits(item['income_positive']);\r\n    let add_income = Money.toDigits(item['additional_income']);\r\n\r\n    income_neutral = income_neutral > 0 ? income_neutral : 0;\r\n    income_negative = income_negative > 0 ? income_negative : 0;\r\n    income_positive = income_positive > 0 ? income_positive : 0;\r\n\r\n    let percent_neutral = Money.toDigits(user['percent_neutral']);\r\n    let percent_negative = Money.toDigits(user['percent_negative']);\r\n    let percent_positive = Money.toDigits(user['percent_positive']);\r\n\r\n    if (percent_neutral === 0 && percent_negative === 0)\r\n    {\r\n      percent_positive = 100;\r\n    }\r\n\r\n    if (percent_neutral === 0 && percent_positive === 0)\r\n    {\r\n      percent_negative = 100;\r\n    }\r\n\r\n    if (percent_negative === 0 && percent_positive === 0)\r\n    {\r\n      percent_neutral = 100;\r\n    }\r\n\r\n    //пропорция если одно ищ полей не заполнено, то оставшиеся два будут  делиться\r\n    if (percent_neutral !== 0 && percent_negative !== 0 && percent_positive === 0)\r\n    {\r\n      let sum = percent_neutral + percent_negative;\r\n\r\n      percent_neutral = 100 / sum * percent_neutral;\r\n      percent_negative = 100 / sum * percent_negative;\r\n    }\r\n\r\n    if (percent_neutral !== 0 && percent_positive !== 0 && percent_negative === 0)\r\n    {\r\n      let sum = percent_neutral + percent_positive;\r\n\r\n      percent_neutral = 100 / sum * percent_neutral;\r\n      percent_positive = 100 / sum * percent_positive;\r\n    }\r\n\r\n    if (percent_negative !== 0 && percent_positive !== 0 && percent_neutral === 0)\r\n    {\r\n      let sum = percent_negative + percent_positive;\r\n\r\n      percent_negative = 100 / sum * percent_negative;\r\n      percent_positive = 100 / sum * percent_positive;\r\n    }\r\n\r\n    let tax = Money.toDigits(item['tax']);\r\n    let income = ((income_neutral / 100 * percent_neutral) + (income_negative / 100 * percent_negative) + (income_positive / 100 * percent_positive));\r\n\r\n    if (income > 0)\r\n    {\r\n      //по закону если доход больше 5 млн, то подоходный налог будет 15%\r\n      //работает в том случае, если пользователь указано стандартный 13% налог на доходы\r\n      if (tax === 13 && income >= 5000000)\r\n      {\r\n        let firstPart = 5000000;\r\n        let secondPart = income - 5000000;\r\n\r\n        return income - ((firstPart / 100 * 13) + (secondPart / 100 * 15)) + add_income;\r\n      } else\r\n      {\r\n        return income - (income / 100 * tax) + add_income;\r\n      }\r\n    } else\r\n    {\r\n      return add_income;\r\n    }\r\n  }\r\n}\r\n\r\nexport {Plan}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,SAAS;AAE3B,eAAe,MAAMC,IAAI,CACzB;EACE,OAAOC,OAAOA,CAACC,IAAI,EACnB;IACE,IAAID,OAAO,GAAG,CAAC;IAEf,IAAIC,IAAI,CAACC,WAAW,EACpB;MACEF,OAAO,IAAIF,KAAK,CAACK,QAAQ,CAACF,IAAI,CAACC,WAAW,CAAC;IAC7C;IACA,IAAID,IAAI,CAACG,OAAO,EAChB;MACEJ,OAAO,IAAIF,KAAK,CAACK,QAAQ,CAACF,IAAI,CAACG,OAAO,CAAC;IACzC;IACA,IAAIH,IAAI,CAACI,UAAU,EACnB;MACEL,OAAO,IAAIF,KAAK,CAACK,QAAQ,CAACF,IAAI,CAACI,UAAU,CAAC;IAC5C;IACA,IAAIJ,IAAI,CAACK,kBAAkB,EAC3B;MACEN,OAAO,IAAIF,KAAK,CAACK,QAAQ,CAACF,IAAI,CAACK,kBAAkB,CAAC;IACpD;IACA,IAAIL,IAAI,CAACM,UAAU,EACnB;MACEP,OAAO,IAAIF,KAAK,CAACK,QAAQ,CAACF,IAAI,CAACM,UAAU,CAAC;IAC5C;IACA,IAAIN,IAAI,CAACO,aAAa,EACtB;MACER,OAAO,IAAIF,KAAK,CAACK,QAAQ,CAACF,IAAI,CAACO,aAAa,CAAC;IAC/C;IAEA,OAAOR,OAAO;EAChB;EAEA,OAAOS,UAAUA,CAACC,MAAM,EAAET,IAAI,EAAEU,IAAI,EACpC;IACE,IAAIC,cAAc,GAAGd,KAAK,CAACK,QAAQ,CAACF,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAC3D,IAAIY,eAAe,GAAGf,KAAK,CAACK,QAAQ,CAACF,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC7D,IAAIa,eAAe,GAAGhB,KAAK,CAACK,QAAQ,CAACF,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC7D,IAAIc,UAAU,GAAGjB,KAAK,CAACK,QAAQ,CAACF,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAE1DW,cAAc,GAAGA,cAAc,GAAG,CAAC,GAAGA,cAAc,GAAG,CAAC;IACxDC,eAAe,GAAGA,eAAe,GAAG,CAAC,GAAGA,eAAe,GAAG,CAAC;IAC3DC,eAAe,GAAGA,eAAe,GAAG,CAAC,GAAGA,eAAe,GAAG,CAAC;IAE3D,IAAIE,eAAe,GAAGlB,KAAK,CAACK,QAAQ,CAACQ,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC7D,IAAIM,gBAAgB,GAAGnB,KAAK,CAACK,QAAQ,CAACQ,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAC/D,IAAIO,gBAAgB,GAAGpB,KAAK,CAACK,QAAQ,CAACQ,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAE/D,IAAIK,eAAe,KAAK,CAAC,IAAIC,gBAAgB,KAAK,CAAC,EACnD;MACEC,gBAAgB,GAAG,GAAG;IACxB;IAEA,IAAIF,eAAe,KAAK,CAAC,IAAIE,gBAAgB,KAAK,CAAC,EACnD;MACED,gBAAgB,GAAG,GAAG;IACxB;IAEA,IAAIA,gBAAgB,KAAK,CAAC,IAAIC,gBAAgB,KAAK,CAAC,EACpD;MACEF,eAAe,GAAG,GAAG;IACvB;;IAEA;IACA,IAAIA,eAAe,KAAK,CAAC,IAAIC,gBAAgB,KAAK,CAAC,IAAIC,gBAAgB,KAAK,CAAC,EAC7E;MACE,IAAIC,GAAG,GAAGH,eAAe,GAAGC,gBAAgB;MAE5CD,eAAe,GAAG,GAAG,GAAGG,GAAG,GAAGH,eAAe;MAC7CC,gBAAgB,GAAG,GAAG,GAAGE,GAAG,GAAGF,gBAAgB;IACjD;IAEA,IAAID,eAAe,KAAK,CAAC,IAAIE,gBAAgB,KAAK,CAAC,IAAID,gBAAgB,KAAK,CAAC,EAC7E;MACE,IAAIE,GAAG,GAAGH,eAAe,GAAGE,gBAAgB;MAE5CF,eAAe,GAAG,GAAG,GAAGG,GAAG,GAAGH,eAAe;MAC7CE,gBAAgB,GAAG,GAAG,GAAGC,GAAG,GAAGD,gBAAgB;IACjD;IAEA,IAAID,gBAAgB,KAAK,CAAC,IAAIC,gBAAgB,KAAK,CAAC,IAAIF,eAAe,KAAK,CAAC,EAC7E;MACE,IAAIG,GAAG,GAAGF,gBAAgB,GAAGC,gBAAgB;MAE7CD,gBAAgB,GAAG,GAAG,GAAGE,GAAG,GAAGF,gBAAgB;MAC/CC,gBAAgB,GAAG,GAAG,GAAGC,GAAG,GAAGD,gBAAgB;IACjD;IAEA,IAAIE,GAAG,GAAGtB,KAAK,CAACK,QAAQ,CAACF,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,IAAIoB,MAAM,GAAKT,cAAc,GAAG,GAAG,GAAGI,eAAe,GAAKH,eAAe,GAAG,GAAG,GAAGI,gBAAiB,GAAIH,eAAe,GAAG,GAAG,GAAGI,gBAAkB;IAEjJ,IAAIG,MAAM,GAAG,CAAC,EACd;MACE;MACA;MACA,IAAID,GAAG,KAAK,EAAE,IAAIC,MAAM,IAAI,OAAO,EACnC;QACE,IAAIC,SAAS,GAAG,OAAO;QACvB,IAAIC,UAAU,GAAGF,MAAM,GAAG,OAAO;QAEjC,OAAOA,MAAM,IAAKC,SAAS,GAAG,GAAG,GAAG,EAAE,GAAKC,UAAU,GAAG,GAAG,GAAG,EAAG,CAAC,GAAGR,UAAU;MACjF,CAAC,MACD;QACE,OAAOM,MAAM,GAAIA,MAAM,GAAG,GAAG,GAAGD,GAAI,GAAGL,UAAU;MACnD;IACF,CAAC,MACD;MACE,OAAOA,UAAU;IACnB;EACF;AACF;AAEA,SAAQhB,IAAI"}