{"version":3,"file":"ActiveValuer.js","names":["moment","ActiveValueCalculator","ActiveConstants","Active","ActiveValuer","getDiff","item","now","sign","code","original","buySum","getBuyValuation","obj","getValuation","sum","getDiffCurrency","getCodeAndSign","buy_trades","buy_sum","original_buy_sum","isPackage","type_id","getSum","getCouponBuySum","date","sell_trades","sell_at_datetime","rate_type_id","last_valuation","payments","sell_sum","original_sell_sum","income","original_income","lotsize","count","getCountSum","length","getCouponSellSum","getCommissionSum","getDividendSum","parseFloat","COUPON_GROUP","indexOf","sellDate","isBefore","morph","valuation","original_current_sum","current_sum","lastTrade","lastTradeDate","trade_at_date","lastValuationDate","value_at_date","isValid","console","warn","original_price","price","original_sum","lastPrice","getNotNullPrice","DEBT_GROUP","sellSum","SIMPLE","getConfirmedPaymentsSum","DIFFERENTIAL","PROPERTY_GROUP","CUSTOM_PROPERTY","sell","addSum","invests","map","investAction","invest","child_item","CREDIT_GROUP","CUSTOM_OBLIGATION","MONEY_ACTIVE","getOriginalValuation"],"sources":["../../../src/helpers/Active/ActiveValuer.js"],"sourcesContent":["import moment from \"moment/moment\";\r\nimport ActiveValueCalculator from \"./ActiveValueCalculator\";\r\nimport ActiveConstants from \"./../../constants/ActiveConstants\";\r\nimport Active from \"./../Active\";\r\n\r\nexport default class ActiveValuer\r\n{\r\n  /**\r\n   *\r\n   * @param item\r\n   * @param now\r\n   * @param sign\r\n   * @param code\r\n   * @param original\r\n   * @return {{code, sign, sum: number}}\r\n   * TODO сделать review для кеширования данных оценки\r\n   */\r\n  static getDiff(item, now, sign, code, original = false)\r\n  {\r\n    let buySum = this.getBuyValuation(item, original);\r\n\r\n    let obj = this.getValuation(item, now, sign, code)\r\n\r\n    if(obj)\r\n    {\r\n      return {sum: obj.sum - buySum, sign: sign, code: code}\r\n    }\r\n  }\r\n\r\n  static getDiffCurrency(item, now)\r\n  {\r\n    let {code, sign} = Active.getCodeAndSign(item);\r\n\r\n    return this.getDiff(item, now, sign, code, true);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param item\r\n   * @param original\r\n   * @return {number|*}\r\n   */\r\n  static getBuyValuation(item, original = false)\r\n  {\r\n    if (item)\r\n    {\r\n      const {\r\n        buy_trades,\r\n      } = item;\r\n\r\n      let buy_sum = original ? item.original_buy_sum : item.buy_sum;\r\n\r\n      if(ActiveConstants.isPackage(item.type_id))\r\n      {\r\n        return ActiveValueCalculator.getSum(buy_trades, original) + ActiveValueCalculator.getCouponBuySum(item, original)\r\n      }else{\r\n        return buy_sum;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param item\r\n   * @param date\r\n   * @param sign\r\n   * @param code\r\n   * @param original\r\n   * @return {{code: string, sum: number}|{code: string, sign, sum: number}|{code: string, sign, sum: *}}\r\n   */\r\n  static getValuation(item, date, sign, code, original = false)\r\n  {\r\n    if (item)\r\n    {\r\n      const {\r\n        sell_trades,\r\n        type_id,\r\n        buy_trades,\r\n        sell_at_datetime,\r\n        rate_type_id,\r\n        last_valuation,\r\n        payments,\r\n      } = item;\r\n\r\n      let buy_sum = original ? item.original_buy_sum : item.buy_sum;\r\n      let sell_sum = original ? item.original_sell_sum : item.sell_sum;\r\n      let income = original ? item.original_income : item.income;\r\n\r\n      const lotsize = item?.item ? item?.item.lotsize : 1;\r\n\r\n      if(ActiveConstants.isPackage(item.type_id))\r\n      {\r\n        //тут мы полчаем количество умноженное на лотность\r\n        //следовательно цена покупки или оценки должна учитывать лотность\r\n        let count = Active.getCountSum(item, buy_trades);\r\n\r\n        if (sell_trades?.length)\r\n        {\r\n          let sum = ActiveValueCalculator.getSum(sell_trades, original) + ActiveValueCalculator.getCouponSellSum(item, original) - ActiveValueCalculator.getCommissionSum(sell_trades, original) - ActiveValueCalculator.getCommissionSum(buy_trades, original) + ActiveValueCalculator.getDividendSum(item, original);\r\n\r\n          return {sum: parseFloat(sum), code: code, sign: sign};\r\n        } else if (ActiveConstants.COUPON_GROUP.indexOf(type_id) !== -1 && buy_trades?.length)\r\n        {\r\n          let sellDate = moment(sell_at_datetime, 'DD.MM.YYYY HH:mm:ss');\r\n          if (date && sellDate && sellDate.isBefore(date))\r\n          {\r\n            let buySum = (buy_sum * count) + ActiveValueCalculator.getCouponSellSum(item, original);// + ActiveValueCalculator.getCouponBuySum(item);\r\n            return {sum: parseFloat(buySum), code: code, sign: sign};\r\n          }\r\n        }\r\n\r\n        if (last_valuation && last_valuation.morph === 'active.user.valuation')\r\n        {\r\n          let valuation = original ? last_valuation.original_current_sum : last_valuation.current_sum;\r\n          let buySum = (valuation * count) + ActiveValueCalculator.getCouponSellSum(item, original) + ActiveValueCalculator.getDividendSum(item, original);\r\n\r\n          return {sum: parseFloat(buySum), code: code, sign: sign};\r\n        }\r\n\r\n        if (last_valuation && buy_trades?.length)\r\n        {\r\n          let lastTrade = buy_trades[buy_trades?.length - 1];\r\n\r\n          let lastTradeDate = moment(lastTrade.trade_at_date, 'DD.MM.YYYY');\r\n          let lastValuationDate = moment(last_valuation.value_at_date, 'DD.MM.YYYY');\r\n\r\n          let buySum;\r\n\r\n          if (!lastTradeDate.isValid())\r\n          {\r\n            console.warn('not valid date', lastTrade)\r\n          }\r\n\r\n          if (!lastValuationDate.isValid())\r\n          {\r\n            console.warn('not valid date', lastValuationDate)\r\n          }\r\n\r\n          if (lastTradeDate.isBefore(lastValuationDate))\r\n          {\r\n            let valuation = original ? last_valuation.original_current_sum : last_valuation.current_sum;\r\n\r\n            buySum = (valuation * count) + ActiveValueCalculator.getCouponSellSum(item, original) + ActiveValueCalculator.getDividendSum(item, original);\r\n          } else\r\n          {\r\n            let valuation = original ? lastTrade.original_price : lastTrade.price;\r\n\r\n            buySum = (valuation * count) + ActiveValueCalculator.getCouponSellSum(item, original) + ActiveValueCalculator.getDividendSum(item, original);\r\n          }\r\n\r\n          return {sum: parseFloat(buySum), code: code, sign: sign};\r\n        } else if (buy_trades?.length)\r\n        {\r\n          if (buy_trades?.length === 1)\r\n          {\r\n            let lastTrade = buy_trades[buy_trades?.length - 1];\r\n            let buySum = original ? lastTrade.original_sum : lastTrade.sum;\r\n\r\n            buySum += ActiveValueCalculator.getCouponSellSum(item, original) + ActiveValueCalculator.getDividendSum(item, original);\r\n\r\n            return {sum: parseFloat(buySum), code: code, sign: sign};\r\n          }\r\n\r\n          let lastPrice = Active.getNotNullPrice(buy_trades, original ? 'original_price' : 'price');\r\n          let buySum = (lastPrice * count) + ActiveValueCalculator.getCouponSellSum(item, original) + ActiveValueCalculator.getDividendSum(item, original);\r\n\r\n          return {sum: parseFloat(buySum), code: code, sign: sign};\r\n        }\r\n      }else{\r\n        //если актив не продан и является купонным, то нужно проверить дату, если дата погашения прошла и нет оценок, то рассчитываем оценку по номиналу\r\n        if (ActiveConstants.DEBT_GROUP.indexOf(type_id) !== -1)\r\n        {\r\n          let sellDate = moment(sell_at_datetime, 'DD.MM.YYYY HH:mm:ss');\r\n          let sellSum = 0;\r\n          switch (rate_type_id)\r\n          {\r\n            case ActiveConstants.SIMPLE:\r\n              sellSum = Active.getConfirmedPaymentsSum(payments, original) + buy_sum;\r\n              break;\r\n            case ActiveConstants.DIFFERENTIAL:\r\n              sellSum = Active.getConfirmedPaymentsSum(payments, original);\r\n              break;\r\n          }\r\n\r\n          return {sum: parseFloat(sellSum), code: code, sign: sign};\r\n        } else if (ActiveConstants.PROPERTY_GROUP.indexOf(type_id) !== -1 || [ActiveConstants.CUSTOM_PROPERTY].indexOf(type_id) !== -1)\r\n        {\r\n          if (sell_sum > 0)\r\n          {\r\n            return {sum: parseFloat(sell_sum), code: code, sign: sign};\r\n          }else if(item.sell && item.sell.sum > 0){\r\n\r\n            return {sum: parseFloat(item.sell.sum), code: code, sign: sign};\r\n          } else if (last_valuation)\r\n          {\r\n            let valuation = original ? last_valuation.original_current_sum : last_valuation.current_sum;\r\n            return {sum: parseFloat(valuation) / lotsize, code: code, sign: sign};\r\n          } else\r\n          {\r\n            let addSum = 0;\r\n\r\n            if(item.invests && item.invests.length)\r\n            {\r\n              item.invests.map((investAction) => {\r\n                let invest = {...investAction.child_item};\r\n\r\n                addSum += parseFloat(invest.sum);\r\n              })\r\n            }\r\n\r\n            return {sum: parseFloat(buy_sum + addSum), code: code, sign: sign};\r\n          }\r\n        } else if ([[...ActiveConstants.CREDIT_GROUP], ...[ActiveConstants.CUSTOM_OBLIGATION]].indexOf(type_id) !== -1)\r\n        {\r\n          return {sum: parseFloat(income * 12), code: code, sign: sign};\r\n        } else if (type_id === ActiveConstants.MONEY_ACTIVE)\r\n        {\r\n\r\n          return {sum: parseFloat(buy_sum), code: code, sign: sign};\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param item\r\n   * @param date\r\n   * @return {{code: string, sum: number}|{code: string, sign, sum: number}|{code: string, sign, sum: *}}\r\n   */\r\n  static getOriginalValuation(item, date)\r\n  {\r\n    let {code, sign} = Active.getCodeAndSign(item);\r\n\r\n    return this.getValuation(item, date, sign, code, true)\r\n  }\r\n}"],"mappings":"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"}