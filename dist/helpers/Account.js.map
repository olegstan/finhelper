{"version":3,"file":"Account.js","names":["AccountConstants","Money","CurrencyConstants","Account","getFiltered","value","propsAccounts","types","accounts","map","item","indexOf","type_id","push","TEMP","subAccount","id","copyItem","getCurrencyFiltered","propCurrencies","currencies","prepareAccounts","currency","textLength","preparedAccounts","account","name","currency_id","length","substr","foundCurrency","getCurrencyById","capitalize","format","sum","sign"],"sources":["../../src/helpers/Account.js"],"sourcesContent":["import AccountConstants from \"../constants/AccountConstants\";\r\nimport Money from \"./Money\";\r\nimport CurrencyConstants from \"./../constants/CurrencyConstants\";\r\n\r\nexport default class Account\r\n{\r\n  /**\r\n   * если счет был удалён, то операция будет привязана к временному счету\r\n   * данная функция фильтрует счета, чтобы нельзя было выбрать временный счет,\r\n   * но показывает в качестве выбранного временный счет после удаления\r\n   *\r\n   * @param value\r\n   * @param propsAccounts\r\n   * @param types\r\n   * @returns {Array}\r\n   */\r\n  static getFiltered(value, propsAccounts, types)\r\n  {\r\n    let accounts = [];\r\n\r\n    propsAccounts.map((item) =>\r\n    {\r\n      if (types.indexOf(item.type_id) !== -1)\r\n      {\r\n        accounts.push(item);\r\n      } else if (item.type_id === AccountConstants.TEMP)\r\n      {\r\n        item.accounts.map((subAccount) =>\r\n        {\r\n          if (subAccount.id === value)\r\n          {\r\n            let copyItem = {...item};\r\n            copyItem.accounts = [];\r\n            copyItem.accounts.push(subAccount);\r\n\r\n            accounts.push(copyItem);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    return accounts;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param value\r\n   * @param propCurrencies\r\n   * @returns {Array}\r\n   */\r\n  static getCurrencyFiltered(value, propCurrencies)\r\n  {\r\n    let currencies = [];\r\n\r\n    propCurrencies.map((item) =>\r\n    {\r\n      // if(['RUB', 'USD', 'EUR'].indexOf(item.code) !== -1)\r\n      // {\r\n      currencies.push(item);\r\n      // }else{\r\n      //   if(value && value.id === item.id)\r\n      //   {\r\n      //     currencies.push(item);\r\n      //   }\r\n      // }\r\n    });\r\n\r\n    return currencies;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param accounts\r\n   * @param currency\r\n   * @param textLength\r\n   * @returns {Array}\r\n   */\r\n  static prepareAccounts(accounts, currency, textLength = 20)\r\n  {\r\n    let preparedAccounts = [];\r\n\r\n    accounts.map((account) =>\r\n    {\r\n      let name = '';\r\n      if (currency)\r\n      {\r\n        account.accounts.map((subAccount) =>\r\n        {\r\n          if (currency.id === subAccount.currency_id)\r\n          {\r\n            name = '';\r\n            if (subAccount.name && subAccount.name.length > textLength)\r\n            {\r\n              name = subAccount.name.substr(0, textLength - 1) + '...';\r\n            } else\r\n            {\r\n              name = subAccount.name ? subAccount.name : 'Счёт без названия';\r\n            }\r\n\r\n            let foundCurrency = CurrencyConstants.getCurrencyById(subAccount.currency_id)\r\n\r\n            preparedAccounts.push({\r\n              id: subAccount.id,\r\n              name: name.capitalize() + ': ' + Money.format(subAccount.sum) + ' ' + foundCurrency.sign\r\n            });\r\n          }\r\n        });\r\n      } else\r\n      {\r\n        account.accounts.map((subAccount) =>\r\n        {\r\n          name = '';\r\n          if (subAccount.name && subAccount.name.length > textLength)\r\n          {\r\n            name = subAccount.name.substr(0, textLength - 1) + '...';\r\n          } else\r\n          {\r\n            name = subAccount.name ? subAccount.name : 'Счёт без названия';\r\n          }\r\n\r\n          let foundCurrency = CurrencyConstants.getCurrencyById(subAccount.currency_id)\r\n\r\n          preparedAccounts.push({\r\n            id: subAccount.id,\r\n            name: name.capitalize() + ': ' + Money.format(subAccount.sum) + ' ' + foundCurrency.sign\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n    return preparedAccounts\r\n  }\r\n}\r\n"],"mappings":"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"}