{"version":3,"file":"GroupHelper.js","names":["ActiveConstants","ActiveModel","AccountConstants","ActiveValuer","CurrencyConstants","ActiveValueCalculator","GroupHelper","groupByAccount","item","accountId","sortedItems","activeIndex","groupType","modelClass","name","subName","account","BY_TYPE","getActiveNameByType","getAccountBySubAccountId","BY_GROUP","getActiveNameByGroup","BY_ACCOUNT","key","id","indexOf","push","create","attributes","trades","buy_trades","sell_trades","prepareActives","actives","map","isPackage","type_id","length","FUND","buy_account_id","trade","from_account_id","setValuation","setPaidSum","groups","group","subGroup","sort","c1","c2","valuation1","valuation","valuation2","e","console","log","combineTrades","mainTrade","items","obj","getValuation","sum","index","subIndex","getAccountNameByActive","nameIndex","nameSubIndex","paid_sum","paidSum","getSum","prepareAccounts","accounts","filter","BROKER_ACCOUNT","TEMP","subAccount","currency","getCurrencyById","currency_id","code","sign","prepareLogs","logs","indexCurrency","pairs","income","outcome","keyItem","item_id","item_type","error","pair","user_account"],"sources":["../../../src/helpers/Group/GroupHelper.js"],"sourcesContent":["import ActiveConstants from \"../../constants/ActiveConstants\"\r\nimport ActiveModel from \"../../models/Active\"\r\nimport AccountConstants from \"../../constants/AccountConstants\"\r\nimport ActiveValuer from \"../Active/ActiveValuer\";\r\nimport CurrencyConstants from \"../../constants/CurrencyConstants\";\r\nimport ActiveValueCalculator from \"../Active/ActiveValueCalculator\";\r\n\r\nclass GroupHelper\r\n{\r\n  /**\r\n   *\r\n   * @param item\r\n   * @param accountId\r\n   * @param sortedItems\r\n   * @param activeIndex\r\n   * @param groupType\r\n   * @param modelClass\r\n   * @returns {string}\r\n   */\r\n  static groupByAccount(item, accountId, sortedItems, activeIndex, groupType, modelClass = ActiveModel)\r\n  {\r\n    let name = '';\r\n    let subName = '';\r\n    let account = null;\r\n\r\n    if (groupType === ActiveConstants.BY_TYPE)\r\n    {\r\n      name = ActiveConstants.getActiveNameByType(item);\r\n      account = AccountConstants.getAccountBySubAccountId(accountId);\r\n      subName = account ? account.name : 'Без названия';\r\n    } else if (groupType === ActiveConstants.BY_GROUP)\r\n    {\r\n      name = ActiveConstants.getActiveNameByGroup(item);\r\n      account = AccountConstants.getAccountBySubAccountId(accountId);\r\n      subName = account ? account.name : 'Без названия';\r\n    } else if (groupType === ActiveConstants.BY_ACCOUNT)\r\n    {\r\n      account = AccountConstants.getAccountBySubAccountId(accountId);\r\n\r\n      name = account ? account.name : 'Без названия';\r\n      subName = ActiveConstants.getActiveNameByType(item);\r\n    }\r\n\r\n    let key = item.id + name + subName + 'none';\r\n\r\n    if (activeIndex.indexOf(key) === -1)\r\n    {\r\n      activeIndex.push(key);\r\n    }\r\n\r\n\r\n    if (typeof sortedItems[activeIndex.indexOf(key)] === 'undefined')\r\n    {\r\n      sortedItems[activeIndex.indexOf(key)] = modelClass.create({...item.attributes});\r\n\r\n      sortedItems[activeIndex.indexOf(key)].attributes.trades = [];\r\n      sortedItems[activeIndex.indexOf(key)].attributes.buy_trades = [];\r\n      sortedItems[activeIndex.indexOf(key)].attributes.sell_trades = [];\r\n    }\r\n\r\n    return key;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param actives\r\n   * @param groupType\r\n   * @param modelClass\r\n   * @returns {*[]}\r\n   */\r\n  static prepareActives(actives, groupType, modelClass = ActiveModel)\r\n  {\r\n    try\r\n    {\r\n      let sortedItems = [];\r\n      let activeIndex = [];\r\n      let key = '';\r\n\r\n      actives.map((item) =>\r\n      {\r\n        if (ActiveConstants.isPackage(item.type_id))\r\n        {\r\n          if(item.attributes?.buy_trades?.length === 0 && item.attributes?.sell_trades?.length === 0 && item.type_id === ActiveConstants.FUND)\r\n          {\r\n            //тут ключ нужен чтобы показать в списке активов, если ещё нет трейдов\r\n            key = 'fund-' + item.id;\r\n            key = GroupHelper.groupByAccount(item, item.buy_account_id, sortedItems, activeIndex, groupType, modelClass);\r\n\r\n            sortedItems[activeIndex.indexOf(key)].attributes.buy_trades = [];\r\n            sortedItems[activeIndex.indexOf(key)].attributes.sell_trades = [];\r\n          }\r\n\r\n          item.attributes?.buy_trades?.map((trade) =>\r\n          {\r\n            key = GroupHelper.groupByAccount(item, trade.from_account_id, sortedItems, activeIndex, groupType, modelClass);\r\n\r\n            sortedItems[activeIndex.indexOf(key)].attributes.buy_trades.push({...trade});\r\n          });\r\n\r\n          item.attributes?.sell_trades?.map((trade) =>\r\n          {\r\n            key = GroupHelper.groupByAccount(item, trade.from_account_id, sortedItems, activeIndex, groupType, modelClass);\r\n\r\n            sortedItems[activeIndex.indexOf(key)].attributes.sell_trades.push({...trade});\r\n          });\r\n        } else\r\n        {\r\n          key = GroupHelper.groupByAccount(item, item.buy_account_id, sortedItems, activeIndex, groupType,  modelClass);\r\n        }\r\n      });\r\n\r\n      GroupHelper.setValuation(sortedItems);\r\n      GroupHelper.setPaidSum(sortedItems);\r\n\r\n      let groups = GroupHelper.group(sortedItems, groupType);\r\n\r\n      //сортируем по оценке\r\n      groups.map((group) =>\r\n      {\r\n        group.groups.map((subGroup) =>\r\n        {\r\n          subGroup.actives?.sort((c1, c2) =>\r\n          {\r\n            let valuation1 = c1.valuation;\r\n            let valuation2 = c2.valuation;\r\n\r\n            return (valuation1 < valuation2) ? 1 : (valuation1 > valuation2) ? -1 : 0\r\n          })\r\n        })\r\n      });\r\n\r\n      //проверить создание покупки после группировки, не улетал запрос на бек\r\n      // let tradeIndex = [];\r\n      // let tradeGroup = [];\r\n      //\r\n      // //группируем, если дата покупки одна\r\n      // groups.map((group) => {\r\n      //   group.groups.map((subGroup) => {\r\n      //     subGroup.actives.map((active) => {\r\n      //       active.buy_trades.map((trade) => {\r\n      //         let date = moment(trade.trade_at, 'DD.MM.YYYY HH:mm:ss').format('YYYY-MM-DD')\r\n      //\r\n      //         let tradeKey = active.id + '-' + date;\r\n      //\r\n      //         if (tradeIndex.indexOf(tradeKey) === -1) {\r\n      //           tradeIndex.push(tradeKey);\r\n      //         }\r\n      //\r\n      //         if (typeof tradeGroup[tradeIndex.indexOf(tradeKey)] === 'undefined') {\r\n      //           tradeGroup[tradeIndex.indexOf(tradeKey)] = [];\r\n      //         }\r\n      //\r\n      //         tradeGroup[tradeIndex.indexOf(tradeKey)].push(trade);\r\n      //\r\n      //         trade.trades = tradeGroup[tradeIndex.indexOf(tradeKey)];\r\n      //       })\r\n      //     })\r\n      //   })\r\n      // });\r\n\r\n      return groups;\r\n    } catch (e)\r\n    {\r\n      console.log(e)\r\n      return []\r\n    }\r\n  }\r\n\r\n  static combineTrades(mainTrade, trade)\r\n  {\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param items\r\n   */\r\n  static setValuation(items)\r\n  {\r\n    items.map((item) =>\r\n    {\r\n      let obj = ActiveValuer.getValuation(item.attributes)\r\n\r\n      if (obj)\r\n      {\r\n        item.attributes['valuation'] = obj.sum;\r\n      } else\r\n      {\r\n        item.attributes['valuation'] = 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param items\r\n   */\r\n  static setPaidSum(items)\r\n  {\r\n    items.map((item) =>\r\n    {\r\n      item.attributes['paid_sum'] = 1000000;\r\n      // let obj = ActiveValuer.getValuation(item.attributes)\r\n      //\r\n      // if (obj)\r\n      // {\r\n      //   item.attributes['valuation'] = obj.sum;\r\n      // } else\r\n      // {\r\n      //   item.attributes['valuation'] = 0;\r\n      // }\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param sortedItems\r\n   * @param groupType\r\n   * @return {*[]}\r\n   */\r\n  static group(sortedItems, groupType)\r\n  {\r\n    let groups = [];\r\n    let index = [];\r\n    let subIndex = [];\r\n\r\n    sortedItems.map((item, key) =>\r\n    {\r\n      let name = '';\r\n      let subName = '';\r\n\r\n      if (groupType === ActiveConstants.BY_TYPE)\r\n      {\r\n        name = ActiveConstants.getActiveNameByType(item);\r\n        subName = ActiveConstants.getAccountNameByActive(item);\r\n\r\n      } else if (groupType === ActiveConstants.BY_GROUP)\r\n      {\r\n        name = ActiveConstants.getActiveNameByGroup(item);\r\n        subName = ActiveConstants.getAccountNameByActive(item);\r\n\r\n      } else if (groupType === ActiveConstants.BY_ACCOUNT)\r\n      {\r\n        name = ActiveConstants.getAccountNameByActive(item);\r\n        subName = ActiveConstants.getActiveNameByType(item);\r\n      }\r\n\r\n      if (index.indexOf(name) === -1)\r\n      {\r\n        index.push(name);\r\n      }\r\n\r\n      let nameIndex = index.indexOf(name);\r\n\r\n      if (typeof subIndex[nameIndex] === 'undefined')\r\n      {\r\n        subIndex[nameIndex] = [];\r\n      }\r\n\r\n      if (subIndex[nameIndex].indexOf(subName) === -1)\r\n      {\r\n        subIndex[nameIndex].push(subName);\r\n      }\r\n\r\n      let nameSubIndex = subIndex[nameIndex].indexOf(subName);\r\n\r\n      if (typeof groups[nameIndex] === 'undefined')\r\n      {\r\n        groups[nameIndex] = {\r\n          name: name,\r\n          sum: 0,\r\n          paid_sum: 0,\r\n          groups: []\r\n        }\r\n      }\r\n\r\n      if (typeof groups[nameIndex].groups[nameSubIndex] === 'undefined')\r\n      {\r\n        groups[nameIndex].groups[nameSubIndex] = {\r\n          name: subName,\r\n          sum: 0,\r\n          paid_sum: 0,\r\n          actives: []\r\n        }\r\n      }\r\n\r\n      let paidSum = ActiveValueCalculator.getSum(item.buy_trades)\r\n\r\n      groups[nameIndex].sum += item.valuation;\r\n      groups[nameIndex].paid_sum += paidSum;\r\n      groups[nameIndex].groups[nameSubIndex].sum += item.valuation;\r\n      groups[nameIndex].groups[nameSubIndex].paid_sum += paidSum;\r\n      groups[nameIndex].groups[nameSubIndex].actives.push(item);\r\n    });\r\n\r\n    return groups;\r\n  }\r\n\r\n  static prepareAccounts(accounts)\r\n  {\r\n    let index = [];\r\n    let groups = [];\r\n\r\n    accounts.filter((account) =>\r\n    {\r\n      return account.type_id === AccountConstants.BROKER_ACCOUNT && account.type_id !== AccountConstants.TEMP;\r\n    }).map((account, key) =>\r\n    {\r\n      account.accounts.map((subAccount) =>\r\n      {\r\n        let currency = CurrencyConstants.getCurrencyById(subAccount.currency_id)\r\n\r\n        if (index.indexOf(currency.code) === -1)\r\n        {\r\n          index.push(currency.code);\r\n        }\r\n        //\r\n        if (typeof groups[index.indexOf(currency.code)] === 'undefined')\r\n        {\r\n          groups[index.indexOf(currency.code)] = {\r\n            name: currency.code,\r\n            sign: currency.sign,\r\n            sum: 0,\r\n          }\r\n        }\r\n\r\n        groups[index.indexOf(currency.code)].sum += subAccount.sum;\r\n      });\r\n    })\r\n\r\n    return groups;\r\n  }\r\n\r\n  static prepareLogs(logs, currency)\r\n  {\r\n    let index = [];\r\n    let indexCurrency = [];\r\n    let pairs = [];\r\n    let groups = [];\r\n    groups[0] = {\r\n      income: 0,\r\n      outcome: 0,\r\n      sign: currency.sign\r\n    }\r\n\r\n\r\n    logs.map((item, key) =>\r\n    {\r\n      try\r\n      {\r\n        let keyItem = item.item_id + item.item_type;\r\n        if (index.indexOf(keyItem) === -1)\r\n        {\r\n          index.push(keyItem);\r\n        }\r\n\r\n        if (typeof pairs[index.indexOf(keyItem)] === 'undefined')\r\n        {\r\n          pairs[index.indexOf(keyItem)] = {\r\n            income: null,\r\n            outcome: null\r\n          }\r\n        }\r\n\r\n        let currency = CurrencyConstants.getCurrencyById(item.account.currency_id)\r\n\r\n        if (indexCurrency.indexOf(currency.sign) === -1)\r\n        {\r\n          indexCurrency.push(currency.sign);\r\n        }\r\n\r\n        if (item.sum > 0 && item.item_type === 'transfer')\r\n        {\r\n          pairs[index.indexOf(keyItem)].income = item;\r\n        }\r\n        //\r\n        if (item.sum < 0 && item.item_type === 'transfer')\r\n        {\r\n          pairs[index.indexOf(keyItem)].outcome = item;\r\n        }\r\n      } catch (e)\r\n      {\r\n        console.error(e)\r\n      }\r\n\r\n\r\n    });\r\n\r\n    pairs.map((pair) =>\r\n    {\r\n      //деньги пришли на брокерский счёт с другого типа счёта или без счёта\r\n      if (pair?.income?.account?.user_account?.type_id && pair.income.account.user_account.type_id === AccountConstants.BROKER_ACCOUNT && ((pair.outcome && pair.outcome.account.user_account.type_id !== AccountConstants.BROKER_ACCOUNT) || pair.outcome === null))\r\n      {\r\n        groups[0].income += pair.income.sum;\r\n      }\r\n\r\n      //деньги сняты с брокерского счёта\r\n      if (((pair?.income?.account?.user_account?.type_id && pair.income.account.user_account.type_id !== AccountConstants.BROKER_ACCOUNT) || pair.income === null) && pair.outcome && pair.outcome.account.user_account.type_id === AccountConstants.BROKER_ACCOUNT)\r\n      {\r\n        groups[0].outcome += pair.outcome.sum;\r\n      }\r\n\r\n\r\n    });\r\n\r\n\r\n    return groups;\r\n  }\r\n}\r\n\r\n\r\nexport default GroupHelper;\r\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,OAAOC,qBAAqB,MAAM,iCAAiC;AAEnE,MAAMC,WAAW,CACjB;EACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOC,cAAcA,CAACC,IAAI,EAAEC,SAAS,EAAEC,WAAW,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,GAAGZ,WAAW,EACpG;IACE,IAAIa,IAAI,GAAG,EAAE;IACb,IAAIC,OAAO,GAAG,EAAE;IAChB,IAAIC,OAAO,GAAG,IAAI;IAElB,IAAIJ,SAAS,KAAKZ,eAAe,CAACiB,OAAO,EACzC;MACEH,IAAI,GAAGd,eAAe,CAACkB,mBAAmB,CAACV,IAAI,CAAC;MAChDQ,OAAO,GAAGd,gBAAgB,CAACiB,wBAAwB,CAACV,SAAS,CAAC;MAC9DM,OAAO,GAAGC,OAAO,GAAGA,OAAO,CAACF,IAAI,GAAG,cAAc;IACnD,CAAC,MAAM,IAAIF,SAAS,KAAKZ,eAAe,CAACoB,QAAQ,EACjD;MACEN,IAAI,GAAGd,eAAe,CAACqB,oBAAoB,CAACb,IAAI,CAAC;MACjDQ,OAAO,GAAGd,gBAAgB,CAACiB,wBAAwB,CAACV,SAAS,CAAC;MAC9DM,OAAO,GAAGC,OAAO,GAAGA,OAAO,CAACF,IAAI,GAAG,cAAc;IACnD,CAAC,MAAM,IAAIF,SAAS,KAAKZ,eAAe,CAACsB,UAAU,EACnD;MACEN,OAAO,GAAGd,gBAAgB,CAACiB,wBAAwB,CAACV,SAAS,CAAC;MAE9DK,IAAI,GAAGE,OAAO,GAAGA,OAAO,CAACF,IAAI,GAAG,cAAc;MAC9CC,OAAO,GAAGf,eAAe,CAACkB,mBAAmB,CAACV,IAAI,CAAC;IACrD;IAEA,IAAIe,GAAG,GAAGf,IAAI,CAACgB,EAAE,GAAGV,IAAI,GAAGC,OAAO,GAAG,MAAM;IAE3C,IAAIJ,WAAW,CAACc,OAAO,CAACF,GAAG,CAAC,KAAK,CAAC,CAAC,EACnC;MACEZ,WAAW,CAACe,IAAI,CAACH,GAAG,CAAC;IACvB;IAGA,IAAI,OAAOb,WAAW,CAACC,WAAW,CAACc,OAAO,CAACF,GAAG,CAAC,CAAC,KAAK,WAAW,EAChE;MACEb,WAAW,CAACC,WAAW,CAACc,OAAO,CAACF,GAAG,CAAC,CAAC,GAAGV,UAAU,CAACc,MAAM,CAAC;QAAC,GAAGnB,IAAI,CAACoB;MAAU,CAAC,CAAC;MAE/ElB,WAAW,CAACC,WAAW,CAACc,OAAO,CAACF,GAAG,CAAC,CAAC,CAACK,UAAU,CAACC,MAAM,GAAG,EAAE;MAC5DnB,WAAW,CAACC,WAAW,CAACc,OAAO,CAACF,GAAG,CAAC,CAAC,CAACK,UAAU,CAACE,UAAU,GAAG,EAAE;MAChEpB,WAAW,CAACC,WAAW,CAACc,OAAO,CAACF,GAAG,CAAC,CAAC,CAACK,UAAU,CAACG,WAAW,GAAG,EAAE;IACnE;IAEA,OAAOR,GAAG;EACZ;;EAGA;AACF;AACA;AACA;AACA;AACA;AACA;EACE,OAAOS,cAAcA,CAACC,OAAO,EAAErB,SAAS,EAAEC,UAAU,GAAGZ,WAAW,EAClE;IACE,IACA;MACE,IAAIS,WAAW,GAAG,EAAE;MACpB,IAAIC,WAAW,GAAG,EAAE;MACpB,IAAIY,GAAG,GAAG,EAAE;MAEZU,OAAO,CAACC,GAAG,CAAE1B,IAAI,IACjB;QACE,IAAIR,eAAe,CAACmC,SAAS,CAAC3B,IAAI,CAAC4B,OAAO,CAAC,EAC3C;UACE,IAAG5B,IAAI,CAACoB,UAAU,EAAEE,UAAU,EAAEO,MAAM,KAAK,CAAC,IAAI7B,IAAI,CAACoB,UAAU,EAAEG,WAAW,EAAEM,MAAM,KAAK,CAAC,IAAI7B,IAAI,CAAC4B,OAAO,KAAKpC,eAAe,CAACsC,IAAI,EACnI;YACE;YACAf,GAAG,GAAG,OAAO,GAAGf,IAAI,CAACgB,EAAE;YACvBD,GAAG,GAAGjB,WAAW,CAACC,cAAc,CAACC,IAAI,EAAEA,IAAI,CAAC+B,cAAc,EAAE7B,WAAW,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,CAAC;YAE5GH,WAAW,CAACC,WAAW,CAACc,OAAO,CAACF,GAAG,CAAC,CAAC,CAACK,UAAU,CAACE,UAAU,GAAG,EAAE;YAChEpB,WAAW,CAACC,WAAW,CAACc,OAAO,CAACF,GAAG,CAAC,CAAC,CAACK,UAAU,CAACG,WAAW,GAAG,EAAE;UACnE;UAEAvB,IAAI,CAACoB,UAAU,EAAEE,UAAU,EAAEI,GAAG,CAAEM,KAAK,IACvC;YACEjB,GAAG,GAAGjB,WAAW,CAACC,cAAc,CAACC,IAAI,EAAEgC,KAAK,CAACC,eAAe,EAAE/B,WAAW,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,CAAC;YAE9GH,WAAW,CAACC,WAAW,CAACc,OAAO,CAACF,GAAG,CAAC,CAAC,CAACK,UAAU,CAACE,UAAU,CAACJ,IAAI,CAAC;cAAC,GAAGc;YAAK,CAAC,CAAC;UAC9E,CAAC,CAAC;UAEFhC,IAAI,CAACoB,UAAU,EAAEG,WAAW,EAAEG,GAAG,CAAEM,KAAK,IACxC;YACEjB,GAAG,GAAGjB,WAAW,CAACC,cAAc,CAACC,IAAI,EAAEgC,KAAK,CAACC,eAAe,EAAE/B,WAAW,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,CAAC;YAE9GH,WAAW,CAACC,WAAW,CAACc,OAAO,CAACF,GAAG,CAAC,CAAC,CAACK,UAAU,CAACG,WAAW,CAACL,IAAI,CAAC;cAAC,GAAGc;YAAK,CAAC,CAAC;UAC/E,CAAC,CAAC;QACJ,CAAC,MACD;UACEjB,GAAG,GAAGjB,WAAW,CAACC,cAAc,CAACC,IAAI,EAAEA,IAAI,CAAC+B,cAAc,EAAE7B,WAAW,EAAEC,WAAW,EAAEC,SAAS,EAAGC,UAAU,CAAC;QAC/G;MACF,CAAC,CAAC;MAEFP,WAAW,CAACoC,YAAY,CAAChC,WAAW,CAAC;MACrCJ,WAAW,CAACqC,UAAU,CAACjC,WAAW,CAAC;MAEnC,IAAIkC,MAAM,GAAGtC,WAAW,CAACuC,KAAK,CAACnC,WAAW,EAAEE,SAAS,CAAC;;MAEtD;MACAgC,MAAM,CAACV,GAAG,CAAEW,KAAK,IACjB;QACEA,KAAK,CAACD,MAAM,CAACV,GAAG,CAAEY,QAAQ,IAC1B;UACEA,QAAQ,CAACb,OAAO,EAAEc,IAAI,CAAC,CAACC,EAAE,EAAEC,EAAE,KAC9B;YACE,IAAIC,UAAU,GAAGF,EAAE,CAACG,SAAS;YAC7B,IAAIC,UAAU,GAAGH,EAAE,CAACE,SAAS;YAE7B,OAAQD,UAAU,GAAGE,UAAU,GAAI,CAAC,GAAIF,UAAU,GAAGE,UAAU,GAAI,CAAC,CAAC,GAAG,CAAC;UAC3E,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC;;MAEF;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA,OAAOR,MAAM;IACf,CAAC,CAAC,OAAOS,CAAC,EACV;MACEC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MACd,OAAO,EAAE;IACX;EACF;EAEA,OAAOG,aAAaA,CAACC,SAAS,EAAEjB,KAAK,EACrC,CAEA;;EAEA;AACF;AACA;AACA;EACE,OAAOE,YAAYA,CAACgB,KAAK,EACzB;IACEA,KAAK,CAACxB,GAAG,CAAE1B,IAAI,IACf;MACE,IAAImD,GAAG,GAAGxD,YAAY,CAACyD,YAAY,CAACpD,IAAI,CAACoB,UAAU,CAAC;MAEpD,IAAI+B,GAAG,EACP;QACEnD,IAAI,CAACoB,UAAU,CAAC,WAAW,CAAC,GAAG+B,GAAG,CAACE,GAAG;MACxC,CAAC,MACD;QACErD,IAAI,CAACoB,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC;MAClC;IACF,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;EACE,OAAOe,UAAUA,CAACe,KAAK,EACvB;IACEA,KAAK,CAACxB,GAAG,CAAE1B,IAAI,IACf;MACEA,IAAI,CAACoB,UAAU,CAAC,UAAU,CAAC,GAAG,OAAO;MACrC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC,CAAC;EACJ;;EAGA;AACF;AACA;AACA;AACA;AACA;EACE,OAAOiB,KAAKA,CAACnC,WAAW,EAAEE,SAAS,EACnC;IACE,IAAIgC,MAAM,GAAG,EAAE;IACf,IAAIkB,KAAK,GAAG,EAAE;IACd,IAAIC,QAAQ,GAAG,EAAE;IAEjBrD,WAAW,CAACwB,GAAG,CAAC,CAAC1B,IAAI,EAAEe,GAAG,KAC1B;MACE,IAAIT,IAAI,GAAG,EAAE;MACb,IAAIC,OAAO,GAAG,EAAE;MAEhB,IAAIH,SAAS,KAAKZ,eAAe,CAACiB,OAAO,EACzC;QACEH,IAAI,GAAGd,eAAe,CAACkB,mBAAmB,CAACV,IAAI,CAAC;QAChDO,OAAO,GAAGf,eAAe,CAACgE,sBAAsB,CAACxD,IAAI,CAAC;MAExD,CAAC,MAAM,IAAII,SAAS,KAAKZ,eAAe,CAACoB,QAAQ,EACjD;QACEN,IAAI,GAAGd,eAAe,CAACqB,oBAAoB,CAACb,IAAI,CAAC;QACjDO,OAAO,GAAGf,eAAe,CAACgE,sBAAsB,CAACxD,IAAI,CAAC;MAExD,CAAC,MAAM,IAAII,SAAS,KAAKZ,eAAe,CAACsB,UAAU,EACnD;QACER,IAAI,GAAGd,eAAe,CAACgE,sBAAsB,CAACxD,IAAI,CAAC;QACnDO,OAAO,GAAGf,eAAe,CAACkB,mBAAmB,CAACV,IAAI,CAAC;MACrD;MAEA,IAAIsD,KAAK,CAACrC,OAAO,CAACX,IAAI,CAAC,KAAK,CAAC,CAAC,EAC9B;QACEgD,KAAK,CAACpC,IAAI,CAACZ,IAAI,CAAC;MAClB;MAEA,IAAImD,SAAS,GAAGH,KAAK,CAACrC,OAAO,CAACX,IAAI,CAAC;MAEnC,IAAI,OAAOiD,QAAQ,CAACE,SAAS,CAAC,KAAK,WAAW,EAC9C;QACEF,QAAQ,CAACE,SAAS,CAAC,GAAG,EAAE;MAC1B;MAEA,IAAIF,QAAQ,CAACE,SAAS,CAAC,CAACxC,OAAO,CAACV,OAAO,CAAC,KAAK,CAAC,CAAC,EAC/C;QACEgD,QAAQ,CAACE,SAAS,CAAC,CAACvC,IAAI,CAACX,OAAO,CAAC;MACnC;MAEA,IAAImD,YAAY,GAAGH,QAAQ,CAACE,SAAS,CAAC,CAACxC,OAAO,CAACV,OAAO,CAAC;MAEvD,IAAI,OAAO6B,MAAM,CAACqB,SAAS,CAAC,KAAK,WAAW,EAC5C;QACErB,MAAM,CAACqB,SAAS,CAAC,GAAG;UAClBnD,IAAI,EAAEA,IAAI;UACV+C,GAAG,EAAE,CAAC;UACNM,QAAQ,EAAE,CAAC;UACXvB,MAAM,EAAE;QACV,CAAC;MACH;MAEA,IAAI,OAAOA,MAAM,CAACqB,SAAS,CAAC,CAACrB,MAAM,CAACsB,YAAY,CAAC,KAAK,WAAW,EACjE;QACEtB,MAAM,CAACqB,SAAS,CAAC,CAACrB,MAAM,CAACsB,YAAY,CAAC,GAAG;UACvCpD,IAAI,EAAEC,OAAO;UACb8C,GAAG,EAAE,CAAC;UACNM,QAAQ,EAAE,CAAC;UACXlC,OAAO,EAAE;QACX,CAAC;MACH;MAEA,IAAImC,OAAO,GAAG/D,qBAAqB,CAACgE,MAAM,CAAC7D,IAAI,CAACsB,UAAU,CAAC;MAE3Dc,MAAM,CAACqB,SAAS,CAAC,CAACJ,GAAG,IAAIrD,IAAI,CAAC2C,SAAS;MACvCP,MAAM,CAACqB,SAAS,CAAC,CAACE,QAAQ,IAAIC,OAAO;MACrCxB,MAAM,CAACqB,SAAS,CAAC,CAACrB,MAAM,CAACsB,YAAY,CAAC,CAACL,GAAG,IAAIrD,IAAI,CAAC2C,SAAS;MAC5DP,MAAM,CAACqB,SAAS,CAAC,CAACrB,MAAM,CAACsB,YAAY,CAAC,CAACC,QAAQ,IAAIC,OAAO;MAC1DxB,MAAM,CAACqB,SAAS,CAAC,CAACrB,MAAM,CAACsB,YAAY,CAAC,CAACjC,OAAO,CAACP,IAAI,CAAClB,IAAI,CAAC;IAC3D,CAAC,CAAC;IAEF,OAAOoC,MAAM;EACf;EAEA,OAAO0B,eAAeA,CAACC,QAAQ,EAC/B;IACE,IAAIT,KAAK,GAAG,EAAE;IACd,IAAIlB,MAAM,GAAG,EAAE;IAEf2B,QAAQ,CAACC,MAAM,CAAExD,OAAO,IACxB;MACE,OAAOA,OAAO,CAACoB,OAAO,KAAKlC,gBAAgB,CAACuE,cAAc,IAAIzD,OAAO,CAACoB,OAAO,KAAKlC,gBAAgB,CAACwE,IAAI;IACzG,CAAC,CAAC,CAACxC,GAAG,CAAC,CAAClB,OAAO,EAAEO,GAAG,KACpB;MACEP,OAAO,CAACuD,QAAQ,CAACrC,GAAG,CAAEyC,UAAU,IAChC;QACE,IAAIC,QAAQ,GAAGxE,iBAAiB,CAACyE,eAAe,CAACF,UAAU,CAACG,WAAW,CAAC;QAExE,IAAIhB,KAAK,CAACrC,OAAO,CAACmD,QAAQ,CAACG,IAAI,CAAC,KAAK,CAAC,CAAC,EACvC;UACEjB,KAAK,CAACpC,IAAI,CAACkD,QAAQ,CAACG,IAAI,CAAC;QAC3B;QACA;QACA,IAAI,OAAOnC,MAAM,CAACkB,KAAK,CAACrC,OAAO,CAACmD,QAAQ,CAACG,IAAI,CAAC,CAAC,KAAK,WAAW,EAC/D;UACEnC,MAAM,CAACkB,KAAK,CAACrC,OAAO,CAACmD,QAAQ,CAACG,IAAI,CAAC,CAAC,GAAG;YACrCjE,IAAI,EAAE8D,QAAQ,CAACG,IAAI;YACnBC,IAAI,EAAEJ,QAAQ,CAACI,IAAI;YACnBnB,GAAG,EAAE;UACP,CAAC;QACH;QAEAjB,MAAM,CAACkB,KAAK,CAACrC,OAAO,CAACmD,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAClB,GAAG,IAAIc,UAAU,CAACd,GAAG;MAC5D,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAOjB,MAAM;EACf;EAEA,OAAOqC,WAAWA,CAACC,IAAI,EAAEN,QAAQ,EACjC;IACE,IAAId,KAAK,GAAG,EAAE;IACd,IAAIqB,aAAa,GAAG,EAAE;IACtB,IAAIC,KAAK,GAAG,EAAE;IACd,IAAIxC,MAAM,GAAG,EAAE;IACfA,MAAM,CAAC,CAAC,CAAC,GAAG;MACVyC,MAAM,EAAE,CAAC;MACTC,OAAO,EAAE,CAAC;MACVN,IAAI,EAAEJ,QAAQ,CAACI;IACjB,CAAC;IAGDE,IAAI,CAAChD,GAAG,CAAC,CAAC1B,IAAI,EAAEe,GAAG,KACnB;MACE,IACA;QACE,IAAIgE,OAAO,GAAG/E,IAAI,CAACgF,OAAO,GAAGhF,IAAI,CAACiF,SAAS;QAC3C,IAAI3B,KAAK,CAACrC,OAAO,CAAC8D,OAAO,CAAC,KAAK,CAAC,CAAC,EACjC;UACEzB,KAAK,CAACpC,IAAI,CAAC6D,OAAO,CAAC;QACrB;QAEA,IAAI,OAAOH,KAAK,CAACtB,KAAK,CAACrC,OAAO,CAAC8D,OAAO,CAAC,CAAC,KAAK,WAAW,EACxD;UACEH,KAAK,CAACtB,KAAK,CAACrC,OAAO,CAAC8D,OAAO,CAAC,CAAC,GAAG;YAC9BF,MAAM,EAAE,IAAI;YACZC,OAAO,EAAE;UACX,CAAC;QACH;QAEA,IAAIV,QAAQ,GAAGxE,iBAAiB,CAACyE,eAAe,CAACrE,IAAI,CAACQ,OAAO,CAAC8D,WAAW,CAAC;QAE1E,IAAIK,aAAa,CAAC1D,OAAO,CAACmD,QAAQ,CAACI,IAAI,CAAC,KAAK,CAAC,CAAC,EAC/C;UACEG,aAAa,CAACzD,IAAI,CAACkD,QAAQ,CAACI,IAAI,CAAC;QACnC;QAEA,IAAIxE,IAAI,CAACqD,GAAG,GAAG,CAAC,IAAIrD,IAAI,CAACiF,SAAS,KAAK,UAAU,EACjD;UACEL,KAAK,CAACtB,KAAK,CAACrC,OAAO,CAAC8D,OAAO,CAAC,CAAC,CAACF,MAAM,GAAG7E,IAAI;QAC7C;QACA;QACA,IAAIA,IAAI,CAACqD,GAAG,GAAG,CAAC,IAAIrD,IAAI,CAACiF,SAAS,KAAK,UAAU,EACjD;UACEL,KAAK,CAACtB,KAAK,CAACrC,OAAO,CAAC8D,OAAO,CAAC,CAAC,CAACD,OAAO,GAAG9E,IAAI;QAC9C;MACF,CAAC,CAAC,OAAO6C,CAAC,EACV;QACEC,OAAO,CAACoC,KAAK,CAACrC,CAAC,CAAC;MAClB;IAGF,CAAC,CAAC;IAEF+B,KAAK,CAAClD,GAAG,CAAEyD,IAAI,IACf;MACE;MACA,IAAIA,IAAI,EAAEN,MAAM,EAAErE,OAAO,EAAE4E,YAAY,EAAExD,OAAO,IAAIuD,IAAI,CAACN,MAAM,CAACrE,OAAO,CAAC4E,YAAY,CAACxD,OAAO,KAAKlC,gBAAgB,CAACuE,cAAc,KAAMkB,IAAI,CAACL,OAAO,IAAIK,IAAI,CAACL,OAAO,CAACtE,OAAO,CAAC4E,YAAY,CAACxD,OAAO,KAAKlC,gBAAgB,CAACuE,cAAc,IAAKkB,IAAI,CAACL,OAAO,KAAK,IAAI,CAAC,EAC9P;QACE1C,MAAM,CAAC,CAAC,CAAC,CAACyC,MAAM,IAAIM,IAAI,CAACN,MAAM,CAACxB,GAAG;MACrC;;MAEA;MACA,IAAI,CAAE8B,IAAI,EAAEN,MAAM,EAAErE,OAAO,EAAE4E,YAAY,EAAExD,OAAO,IAAIuD,IAAI,CAACN,MAAM,CAACrE,OAAO,CAAC4E,YAAY,CAACxD,OAAO,KAAKlC,gBAAgB,CAACuE,cAAc,IAAKkB,IAAI,CAACN,MAAM,KAAK,IAAI,KAAKM,IAAI,CAACL,OAAO,IAAIK,IAAI,CAACL,OAAO,CAACtE,OAAO,CAAC4E,YAAY,CAACxD,OAAO,KAAKlC,gBAAgB,CAACuE,cAAc,EAC7P;QACE7B,MAAM,CAAC,CAAC,CAAC,CAAC0C,OAAO,IAAIK,IAAI,CAACL,OAAO,CAACzB,GAAG;MACvC;IAGF,CAAC,CAAC;IAGF,OAAOjB,MAAM;EACf;AACF;AAGA,eAAetC,WAAW"}