{"version":3,"file":"ActiveGoalConstants.js","names":["moment","DateHelper","Money","exactMath","ActiveGoalConstants","WITH_PLAN","WITHOUT_PLAN","SHORT","MIDDLE","LONG","RETIRE","PORTFOLIO","GOAL_TYPES","planFields","NOW","AFTER","getTypes","i18n","id","name","shortGoal","middleGoal","longGoal","retire","getScenarios","positive","neutral","negative","middle","getRetireTypes","rentier","rentierWithInflation","retireFund","getConsiderTypes","control","notControl","getPlanTypes","getCalcTypes","getPeriods","getBindTypes","withBind","withoutBind","getTypeById","type","map","item","getPlanTypeById","getCalcTypeById","isLeapYear","year","getNextNonLeapYear","startYear","defaultMask","income","data","newIncome","currentYear","i","validDay","getValidDate","sum","Math","floor","month","rows","day","defaultPlan","recalcByPrevIncome","prevPlanIncome","newPlanIncome","proportion","allSum","n","months","monthKey","parseInt","length","row","format","toDigits","part"],"sources":["../../src/constants/ActiveGoalConstants.js"],"sourcesContent":["import moment from \"moment/moment\";\r\nimport DateHelper from \"../helpers/DateHelper\";\r\nimport Money from \"../helpers/Money\";\r\nimport exactMath from \"exact-math\";\r\n\r\nexport default class ActiveGoalConstants\r\n{\r\n  static WITH_PLAN = 1;\r\n  static WITHOUT_PLAN = 2;\r\n\r\n\r\n  static SHORT = 1;\r\n  static MIDDLE = 2;\r\n  static LONG = 3;\r\n  static RETIRE = 4;\r\n  static PORTFOLIO = 5;\r\n\r\n  static GOAL_TYPES = [\r\n    ActiveGoalConstants.SHORT,\r\n    ActiveGoalConstants.MIDDLE,\r\n    ActiveGoalConstants.LONG,\r\n    ActiveGoalConstants.RETIRE,\r\n  ];\r\n\r\n  static planFields = [\r\n    {\r\n      \"item\": {\r\n        \"id\": \"1\",\r\n        \"name\": \"Группа\",\r\n        \"slug\": \"group\"\r\n      },\r\n      \"item_id\": \"1\",\r\n      \"item_search\": \"Группа\",\r\n      \"item_slug\": \"group\"\r\n    },\r\n    {\r\n      \"item\": {\r\n        \"id\": \"2\",\r\n        \"name\": \"Тип\",\r\n        \"slug\": \"type\"\r\n      },\r\n      \"item_id\": \"2\",\r\n      \"item_search\": \"Тип\",\r\n      \"item_slug\": \"type\"\r\n    },\r\n    {\r\n      \"item\": {\r\n        \"id\": \"3\",\r\n        \"name\": \"Страна\",\r\n        \"slug\": \"country\"\r\n      },\r\n      \"item_id\": \"3\",\r\n      \"item_search\": \"Страна\",\r\n      \"item_slug\": \"country\"\r\n    },\r\n    {\r\n      \"item\": {\r\n        \"id\": \"4\",\r\n        \"name\": \"Теги\",\r\n        \"slug\": \"users_type\"\r\n      },\r\n      \"item_id\": \"4\",\r\n      \"item_search\": \"Теги\",\r\n      \"item_slug\": \"users_type\"\r\n    },\r\n    {\r\n      \"item\": {\r\n        \"id\": \"5\",\r\n        \"name\": \"Капитализация\",\r\n        \"slug\": \"size\"\r\n      },\r\n      \"item_id\": \"5\",\r\n      \"item_search\": \"Капитализация\",\r\n      \"item_slug\": \"size\"\r\n    },\r\n    {\r\n      \"item\": {\r\n        \"id\": \"6\",\r\n        \"name\": \"Риск\",\r\n        \"slug\": \"risk_state\"\r\n      },\r\n      \"item_id\": \"6\",\r\n      \"item_search\": \"Риск\",\r\n      \"item_slug\": \"risk_state\"\r\n    },\r\n    {\r\n      \"item\": {\r\n        \"id\": \"7\",\r\n        \"name\": \"Индустрия\",\r\n        \"slug\": \"industry\"\r\n      },\r\n      \"item_id\": \"7\",\r\n      \"item_search\": \"Индустрия\",\r\n      \"item_slug\": \"industry\"\r\n    },\r\n    {\r\n      \"item\": {\r\n        \"id\": \"8\",\r\n        \"name\": \"Сектор\",\r\n        \"slug\": \"sector\"\r\n      },\r\n      \"item_id\": \"8\",\r\n      \"item_search\": \"Сектор\",\r\n      \"item_slug\": \"sector\"\r\n    }\r\n  ];\r\n  static NOW = 1;\r\n  static AFTER = 0;\r\n\r\n  static getTypes(i18n = {})\r\n  {\r\n    return [\r\n      {id: ActiveGoalConstants.SHORT, name: i18n.shortGoal},\r\n      {id: ActiveGoalConstants.MIDDLE, name: i18n.middleGoal},\r\n      {id: ActiveGoalConstants.LONG, name: i18n.longGoal},\r\n      {id: ActiveGoalConstants.RETIRE, name: i18n.retire},\r\n      // {id: ActiveGoalConstants.PORTFOLIO, name: 'Портфель'}\r\n    ];\r\n  }\r\n\r\n  static getScenarios(i18n = {})\r\n  {\r\n    return [\r\n      {id: 1, name: i18n.positive},\r\n      {id: 2, name: i18n.neutral},\r\n      {id: 3, name: i18n.negative},\r\n      {id: 4, name: i18n.middle}\r\n    ];\r\n  }\r\n\r\n  static getRetireTypes(i18n = {})\r\n  {\r\n    return [\r\n      {id: 1, name: i18n.rentier},\r\n      {id: 2, name: i18n.rentierWithInflation},\r\n      {id: 3, name: i18n.retireFund},\r\n    ];\r\n  }\r\n\r\n  static getConsiderTypes(i18n = {})\r\n  {\r\n    return [\r\n      {id: 1, name: i18n.control},\r\n      {id: 2, name: i18n.notControl},\r\n    ];\r\n  }\r\n\r\n  static getPlanTypes()\r\n  {\r\n    return [\r\n      {id: ActiveGoalConstants.WITH_PLAN, name: ''},\r\n      {id: ActiveGoalConstants.WITHOUT_PLAN, name: ''},\r\n    ];\r\n  }\r\n\r\n  static getCalcTypes()\r\n  {\r\n    return [\r\n      {id: 1, name: 'Знаю итоговую сумму'},\r\n      {id: 2, name: 'Знаю сумму платежа'},\r\n    ]\r\n  }\r\n\r\n  static getPeriods()\r\n  {\r\n    return [\r\n      {id: ActiveGoalConstants.NOW, name: 'Сейчас'},\r\n      {id: ActiveGoalConstants.AFTER, name: 'Через месяц'},\r\n    ];\r\n  }\r\n\r\n  static getBindTypes(i18n = {})\r\n  {\r\n    return [\r\n      {id: 1, name: i18n.withBind},\r\n      {id: 2, name: i18n.withoutBind},\r\n    ];\r\n  }\r\n\r\n  static getTypeById(id)\r\n  {\r\n    let type = null;\r\n\r\n    ActiveGoalConstants.getTypes().map((item) =>\r\n    {\r\n      if (item.id === id)\r\n      {\r\n        type = item\r\n      }\r\n\r\n\r\n    });\r\n\r\n    return type;\r\n  }\r\n\r\n  static getPlanTypeById(id)\r\n  {\r\n    let type = null;\r\n\r\n    ActiveGoalConstants.getPlanTypes().map((item) =>\r\n    {\r\n      if (item.id === id)\r\n      {\r\n        type = item\r\n      }\r\n\r\n\r\n    });\r\n\r\n    return type;\r\n  }\r\n\r\n  static getCalcTypeById(id)\r\n  {\r\n    let type = null;\r\n\r\n    ActiveGoalConstants.getCalcTypes().map((item) =>\r\n    {\r\n      if (item.id === id)\r\n      {\r\n        type = item\r\n      }\r\n\r\n\r\n    });\r\n\r\n    return type;\r\n  }\r\n\r\n  static isLeapYear(year) {\r\n    if (year % 4 === 0) {\r\n      if (year % 100 === 0) {\r\n        return year % 400 === 0;\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  static getNextNonLeapYear(startYear) {\r\n    let year = startYear;\r\n    while (this.isLeapYear(year)) {\r\n      year++;\r\n    }\r\n    return year;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param income\r\n   * @return {*[]}\r\n   */\r\n  static defaultMask(income)\r\n  {\r\n    let data = [];\r\n    let newIncome = 0;\r\n\r\n    let currentYear = moment().year();\r\n\r\n    if(this.isLeapYear(currentYear))\r\n    {\r\n      currentYear = this.getNextNonLeapYear(currentYear);\r\n    }\r\n\r\n    for (let i = 0; i < 12; i++)\r\n    {\r\n      let validDay = DateHelper.getValidDate(currentYear, (i + 1), 31);\r\n      let sum = 0;\r\n\r\n      //если последнии, то вычтем из суммы, чтобы получилось целое число\r\n      if (i === 11)\r\n      {\r\n        sum = income - newIncome;\r\n      } else\r\n      {\r\n        sum = Math.floor(income / 12);\r\n\r\n        newIncome += sum;\r\n      }\r\n\r\n      data[i] = {\r\n        month: 1,\r\n        sum: sum,\r\n        rows: [\r\n          {\r\n            day: validDay,\r\n            sum: sum\r\n          }\r\n        ]\r\n      };\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  static defaultPlan()\r\n  {\r\n    return []\r\n  }\r\n\r\n  static recalcByPrevIncome(item, prevPlanIncome, newPlanIncome)\r\n  {\r\n    //лучше чтобы сумма была больше 12, тогда распределение по месяцам будет корректно,\r\n    //иначе на последний месяц будет переноситься остаток, а 11 месяцев будут по 0\r\n    //следующее пропорциональное распределение в этом случае сделает\r\n    // [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ,1, 8] если сумма 21, не пропорционально\r\n\r\n    if (newPlanIncome >= 12)\r\n    {\r\n      let proportion = Math.floor(newPlanIncome / prevPlanIncome * 100000000) / 100000000;\r\n      let allSum = 0;\r\n\r\n      let i = 0;\r\n      let n = 0;\r\n      item.months.map((month, monthKey) =>\r\n      {\r\n        if (parseInt(month.month) && month.rows && month.rows.length)\r\n        {\r\n          month.rows.map(() =>\r\n          {\r\n            i++;\r\n          })\r\n        }\r\n      });\r\n\r\n      item.months = item.months.map((month) =>\r\n      {\r\n        let sum = 0;\r\n        if (parseInt(month.month) && month.rows && month.rows.length)\r\n        {\r\n          month.rows = month.rows.map((row) =>\r\n          {\r\n            n++;\r\n            //если последняя и сумма предыдущих не равна 0\r\n            if (i === n)\r\n            {\r\n              if (allSum !== 0)\r\n              {\r\n                row.sum = newPlanIncome - allSum;\r\n                sum += row.sum;\r\n                allSum += row.sum;\r\n                row.sum = Money.format(row.sum);\r\n              }\r\n            } else\r\n            {\r\n              row.sum = Math.floor(Money.toDigits(row.sum) * proportion);\r\n              sum += row.sum;\r\n              allSum += Money.toDigits(row.sum);\r\n              row.sum = Money.format(row.sum);\r\n            }\r\n\r\n            return row;\r\n          });\r\n\r\n          month.sum = sum;\r\n        }\r\n\r\n        return month;\r\n      });\r\n\r\n      if (allSum === 0)\r\n      {\r\n        n = 0;\r\n\r\n        let part = Math.floor(newPlanIncome / 12);\r\n\r\n        item.months = item.months.map((month) =>\r\n        {\r\n          let sum = 0;\r\n          if (parseInt(month.month) && month.rows && month.rows.length)\r\n          {\r\n            month.rows = month.rows.map((row) =>\r\n            {\r\n              n++;\r\n\r\n              if (i === n)\r\n              {\r\n                row.sum = newPlanIncome - allSum;\r\n                sum += row.sum;\r\n                allSum += row.sum;\r\n                row.sum = Money.format(row.sum);\r\n              } else\r\n              {\r\n                row.sum = part;\r\n                sum += row.sum;\r\n                allSum += Money.toDigits(row.sum);\r\n                row.sum = Money.format(row.sum);\r\n              }\r\n\r\n              return row;\r\n            });\r\n\r\n            month.sum = sum;\r\n          }\r\n\r\n          return month;\r\n        });\r\n      }\r\n    }\r\n  }\r\n}"],"mappings":"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"}