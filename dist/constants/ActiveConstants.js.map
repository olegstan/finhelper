{"version":3,"file":"ActiveConstants.js","names":["React","AccountConstants","Active","CurrencyConstants","moment","ActiveConstants","TINKOFF","ZENMONEY","GOAL","STRATEGY","GOAL_RECALC","WAZZUP","MAIL","PLAN","BCS_FILE_PARSE","ACTIVE_SET_PRICE","CATALOG_COURSE","IRR","ALL_ACTIVES","REFRESH_API","ZENMONEY_RELATION_BROKER_API","STRATEGY_CACHE","TINKOFF_ORDER","RECALC_BALANCE","MOEX_HISTORY","YAHOO_HISTORY","CBOND_HISTORY","CB_HISTORY","MOEX_PROFITABILITY","TV_TICKERS","YAHOO_DATA","CBOND_PROFITABILITY","CBOND_COURSE","CBOND_SAVE","FINEX_HISTORY","MOEX_COURSE","YAHOO_COURSE","ATON_CRM_PARSE","ATON_FILE_UPLOADER","ATON_FILE_PARSE","ATON_CLIENT_CREATE","ATON_FILE_VALUATION","ATON_FILE_SPLIT","ATON_CHECK_VALUATION","ATON_FILE_HISTORY","ATON_CREATE_ACTION","ATON_PSM_VALUATION","ATON_GET_CRM_CLIENTS","ATON_PSM_PORTFOLIO","ONCE","PERIOD","SALARY","CUSTOM_SALARY","FLAT","HOUSE","LAND","CAR","MOTO","TECHNIC","JEWELRY","PERSONAL_TECHNIC","CUSTOM_PROPERTY","DEPOSIT","DEBT","FUNDED_LIFE_INSURANCE","COMMODITY","CURRENCY","CRYPTO","ETF","PIF","HEDGE_FUND","BPIF","PRECIOUS_METAL","STOCK","OBLIGATION","STRUCTURE_PRODUCT","INVESTMENT_LIFE_INSURANCE","EXCHANGE_NOTE","OBLIGATION_NOTE","STRATEGY_DU","OPTION","FUTURES","RENT_CAR","RENT_FLAT","SPEND_LIFE","CUSTOM_OBLIGATION","CAR_CREDIT","FLAT_CREDIT","CREDIT","ALIMONY","LOAN","MONEY_ACTIVE","PRODUCTS_SPEND","CAFE_SPEND","CAR_SPEND","TRANSPORT_SPEND","MEDICINE_SPEND","BEAUTY_SPEND","CLOTHES_ADULT_SPEND","CLOTHES_CHILD_SPEND","TOYS_SPEND","VACATION_SPEND","EDUCATION_SPEND","RENT_SPEND","FUN_SPEND","PRESENTS_SPEND","SPORT_SPEND","TELECOM_SPEND","CUSTOM_SPEND","SALARY_INCOME","BONUS_INCOME","RETIRE_INCOME","RENT_INCOME","RELATIVES_INCOME","PASSIVE_INCOME","AGENT_INCOME","CUSTOM_INCOME","CAR_INSURANCE","PROPERTY_INSURANCE","HEALTH_INSURANCE","VMI_INSURANCE","TRAVEL_INSURANCE","SPORT_INSURANCE","UNIT_LINKED_INSURANCE","LOSE_JOB_INSURANCE","RESPONSIBILITY_INSURANCE","PET_INSURANCE","CUSTOM_INSURANCE","BY_TYPE","BY_GROUP","BY_ACCOUNT","BY_COMPANY","BY_NAME","BY_BOND_DATE","BY_CURRENCY","BY_BROKER_NAME","GROUP_QUERY_CATALOG","PROPERTY_GROUP","INSURANCES_GROUP","DIVIDEND_GROUP","COUPON_GROUP","DEBT_GROUP","SPENDING_GROUP","INCOME_GROUP","CREDIT_GROUP","OBLIGATION_GROUP","PACKAGE_GROUP","CB","YAHOO_QUOTES","MOSCOW_EXCHANGE_QUOTES","CB_CATALOG","YAHOO_CATALOG","MOEX_CATALOG","CUSTOM_CATALOG","CBONDS_CATALOG","CATALOGS","DAILY","WEEKLY","MONTHLY","QUARTER","HALFYEAR","YEARLY","CUSTOM_PERIOD_WEEK","CUSTOM_PERIOD_MONTH","CONDITION","SIMPLE","DIFFERENTIAL","MONEY","INVEST","INVEST_TRADED","OWN","BUY","GET","STOCK_GROUP_TYPE","OBLIGATION_GROUP_TYPE","METAL_GROUP_TYPE","PROPERTY_GROUP_TYPE","ALTERNATIVE_GROUP_TYPE","DIRECT_GROUP_TYPE","INSTRUMENT_CASH_FLOW_GROUP_TYPE","CUSTOM_GROUP_TYPE","CUSTOM_CLASS_TYPE","INSURANCE_RISK_STEAL","INSURANCE_RISK_FIRE","INSURANCE_RISK_DISASTER","INSURANCE_RISK_TOTAL","INSURANCE_RISK_FLOODING","INSURANCE_RISK_ILLEGAL_ACTIONS","INSURANCE_RISK_DEATH","INSURANCE_RISK_SURGICAL_INTERVENTION","INSURANCE_RISK_SPORT_INJURY","INSURANCE_RISK_CRITICAL_ILLNESS","INSURANCE_RISK_HOSPITALIZATION","INSURANCE_RISK_IN_PRODUCTION","INSURANCE_RISK_TRAUMATIC_INJURY","INSURANCE_RISK_CRIMINAL_INJURY","INSURANCE_RISK_JOB_LOSS","INSURANCE_RISK_DISABILITY","INSURANCE_RISK_DOCTOR_ADVICE","INSURANCE_RISK_HOSPITAL","INSURANCE_RISK_DENTISTRY","INSURANCE_RISK_CLINIC_SERVICE","INSURANCE_RISK_AMBULANCE","INSURANCE_RISK_PHARMACY","INSURANCE_RISK_MEDICAL_TRANSPORT","INSURANCE_RISK_ACCIDENT","INSURANCE_RISK_TRIP_CANCELATION","INSURANCE_RISK_ACTIVE_SPORTS","INSURANCE_RISK_LOST_LAGGAGE","INSURANCE_RISK_CIVIL_RESPONSIBILITY","INSURANCE_RISK_DISABILITY_SPORTS","INSURANCE_RISK_MARTIAL_ARTS","INSURANCE_RISK_FIGURE_SKATING","INSURANCE_RISK_INJURY","INSURANCE_RISK_GAME_TEAM_SPORTS","INSURANCE_RISK_DANCE_SPORTS","INSURANCE_RISK_MORTALITY","INSURANCE_RISK_ARTISTIC_GYMNASTIC","INSURANCE_RISK_EXTREME_SPORTS","INSURANCE_RISK_RUN","INSURANCE_RISK_SWIMMING","INSURANCE_RISK_COMPANY_LIQUIDATION","INSURANCE_RISK_AGREEMENT_OF_PARTIES","INSURANCE_RISK_CHANGE_OWNERSHIP","INSURANCE_RISK_EXTRAORDINARY_CIRCUMSTANCES","INSURANCE_RISK_DOWNSIZING_INCONSISTENCY","INSURANCE_RISK_EMPLOYERS_INITIATIVE","INSURANCE_RISK_DEATH_OF_EMPLOYER","INSURANCE_RISK_REINSTATEMENT_TO_WORK","INSURANCE_RISK_TERMINATION_OF_ACCESS","INSURANCE_RISK_CAUSING_HARM_HEALTH","INSURANCE_RISK_CAUSING_PROPERTY_DAMAGE","INSURANCE_RISK_CONDUCTIONG_CASES_IN_JUDICAL","INSURANCE_RISK_EXPENSES_INCURRED","INSURANCE_RISK_DOCTOR_ADVICE_PET","INSURANCE_RISK_DIAGNOSTIC","INSURANCE_RISK_PARAMEDIC","INSURANCE_RISK_SURGICAL","INSURANCE_RISK_MEDICATIONS","INSURANCE_RISK_KEEPING_ANIMAL","getName","item","types","id","name","groups","paymentTypes","getPaymentTypeById","type","map","actions","periods","fullList","getGroupById","group","getActionById","getTypeById","getPeriodTypeById","getActiveCurrency","isPackage","type_id","buy_currency_id","currency","getCurrencyById","getCurrencyNameByCode","code","getBondDate","sell_at_date","date","isValid","format","getActiveCompanyByText","text","toLowerCase","includes","getActiveCompany","getActiveNameByType","type_text","getNameWithCatalog","AUTO_INSURANCE","relate1","relate2","ticker","secid","isin","getActiveNameByGroup","group_type_text","getAccountName","account","bank_id","bank_text","TEMP","textByType","getAccountNameByActive","buy_trades","length","from_account_id","getAccountBySubAccountId","sell_trades","to_account_id","buy_account_id","accountText","subAccount","getSubAccountById","getAccountIdByActive","typeId","getRiskName","parseInt","getImage","createElement","className","src","require","default"],"sources":["../../src/constants/ActiveConstants.js"],"sourcesContent":["import React from 'react';\r\nimport AccountConstants from \"./AccountConstants\";\r\nimport Active from \"../helpers/Active\";\r\nimport CurrencyConstants from \"./CurrencyConstants\";\r\nimport moment from \"moment/moment\";\r\n\r\nexport default class ActiveConstants\r\n{\r\n  static TINKOFF = 1;\r\n  static ZENMONEY = 2;\r\n  static GOAL = 3;\r\n  static STRATEGY = 4;\r\n  static GOAL_RECALC = 5;\r\n  static WAZZUP = 6;\r\n  static MAIL = 9;\r\n  static PLAN = 10;\r\n  static BCS_FILE_PARSE = 12;\r\n  static ACTIVE_SET_PRICE = 13;\r\n  static CATALOG_COURSE = 14;\r\n  static IRR = 15;\r\n  static ALL_ACTIVES = 16;\r\n  static REFRESH_API = 17;\r\n  static ZENMONEY_RELATION_BROKER_API = 18;\r\n  static STRATEGY_CACHE = 25;\r\n  static TINKOFF_ORDER = 26;\r\n  static RECALC_BALANCE = 27;\r\n  static MOEX_HISTORY = 28;\r\n  static YAHOO_HISTORY = 29;\r\n  static CBOND_HISTORY = 30;\r\n  static CB_HISTORY = 31;\r\n  static MOEX_PROFITABILITY = 32;\r\n  static TV_TICKERS = 33;\r\n  static YAHOO_DATA = 34;\r\n  static CBOND_PROFITABILITY = 35;\r\n  static CBOND_COURSE = 36;\r\n  static CBOND_SAVE = 37;\r\n  static FINEX_HISTORY = 37;\r\n  static MOEX_COURSE = 38;\r\n  static YAHOO_COURSE = 39;\r\n\r\n  static ATON_CRM_PARSE = 11;\r\n  static ATON_FILE_UPLOADER = 7;\r\n  static ATON_FILE_PARSE = 8;\r\n  static ATON_CLIENT_CREATE = 19;\r\n  static ATON_FILE_VALUATION = 20;\r\n  static ATON_FILE_SPLIT = 21;\r\n  static ATON_CHECK_VALUATION = 22;\r\n  static ATON_FILE_HISTORY = 23;\r\n  static ATON_CREATE_ACTION = 24;\r\n  static ATON_PSM_VALUATION = 25;\r\n  static ATON_GET_CRM_CLIENTS = 26;\r\n  static ATON_PSM_PORTFOLIO = 45;\r\n\r\n  static ONCE = 1;\r\n  static PERIOD = 2;\r\n\r\n  static SALARY = 1001;\r\n  static CUSTOM_SALARY = 1004;\r\n\r\n  static FLAT = 2001;\r\n  static HOUSE = 2002;\r\n  static LAND = 2003;\r\n\r\n  static CAR = 2101;\r\n  static MOTO = 2102;\r\n  static TECHNIC = 2103;\r\n\r\n  static JEWELRY = 2201;\r\n  static PERSONAL_TECHNIC = 2202;\r\n  static CUSTOM_PROPERTY = 2203;\r\n\r\n  static DEPOSIT = 3001;\r\n  static DEBT = 3002;\r\n  static FUNDED_LIFE_INSURANCE = 3003;\r\n  static COMMODITY = 3101;\r\n  static CURRENCY = 3102;\r\n  static CRYPTO = 3103;\r\n  static ETF = 3104;\r\n  static PIF = 3105;\r\n  static HEDGE_FUND = 3106;\r\n  static BPIF = 3107;\r\n  static PRECIOUS_METAL = 3108;\r\n\r\n  static STOCK = 3201;\r\n  static OBLIGATION = 3202;\r\n  static STRUCTURE_PRODUCT = 3203;\r\n  static INVESTMENT_LIFE_INSURANCE = 3204;\r\n  static EXCHANGE_NOTE = 3205;\r\n  static OBLIGATION_NOTE = 3206;\r\n  static STRATEGY_DU = 3207;\r\n  static OPTION = 3208;\r\n  static FUTURES = 3209;\r\n\r\n  static RENT_CAR = 9001;\r\n  static RENT_FLAT = 9002;\r\n  static SPEND_LIFE = 9003;\r\n  static CUSTOM_OBLIGATION = 9005;\r\n  static CAR_CREDIT = 9006;\r\n  static FLAT_CREDIT = 9007;\r\n  static CREDIT = 9008;\r\n  static ALIMONY = 9009;\r\n  static LOAN = 9010;\r\n\r\n  static MONEY_ACTIVE = 10001;\r\n\r\n  static PRODUCTS_SPEND = 11001;\r\n  static CAFE_SPEND = 11002;\r\n  static CAR_SPEND = 11003;\r\n  static TRANSPORT_SPEND = 11004;\r\n  static MEDICINE_SPEND = 11005;\r\n  static BEAUTY_SPEND = 11006;\r\n  static CLOTHES_ADULT_SPEND = 11007;\r\n  static CLOTHES_CHILD_SPEND = 11008;\r\n  static TOYS_SPEND = 11009;\r\n  static VACATION_SPEND = 11010;\r\n  static EDUCATION_SPEND = 11011;\r\n  static RENT_SPEND = 11012;\r\n  static FUN_SPEND = 11013;\r\n  static PRESENTS_SPEND = 11014;\r\n  static SPORT_SPEND = 11015;\r\n  static TELECOM_SPEND = 11016;\r\n  static CUSTOM_SPEND = 9004;\r\n\r\n  static SALARY_INCOME = 12001;\r\n  static BONUS_INCOME = 12002;\r\n  static RETIRE_INCOME = 12003;\r\n  static RENT_INCOME = 12004;\r\n  static RELATIVES_INCOME = 12005;\r\n  static PASSIVE_INCOME = 12006;\r\n  static AGENT_INCOME = 12007;\r\n  static CUSTOM_INCOME = 1003;\r\n\r\n  //страховки\r\n  static CAR_INSURANCE = 13001;\r\n  static PROPERTY_INSURANCE = 13002;\r\n  static HEALTH_INSURANCE = 13003;\r\n  static VMI_INSURANCE = 13004;\r\n  static TRAVEL_INSURANCE = 13005;\r\n  static SPORT_INSURANCE = 13006;\r\n  static UNIT_LINKED_INSURANCE = 13007;\r\n  static LOSE_JOB_INSURANCE = 13008;\r\n  static RESPONSIBILITY_INSURANCE = 13009;\r\n  static PET_INSURANCE = 13010;\r\n  static CUSTOM_INSURANCE = 13011;\r\n\r\n  /**\r\n   * groupping consts\r\n   */\r\n\r\n  static BY_TYPE = 1;\r\n  static BY_GROUP = 2;\r\n  static BY_ACCOUNT = 3;\r\n  static BY_COMPANY = 4;\r\n  static BY_NAME = 5;\r\n  static BY_BOND_DATE = 6;\r\n  static BY_CURRENCY = 7;\r\n  static BY_BROKER_NAME = 8;\r\n\r\n  static GROUP_QUERY_CATALOG = [\r\n    ActiveConstants.STOCK,\r\n    ActiveConstants.ETF,\r\n    ActiveConstants.OBLIGATION,\r\n    ActiveConstants.FUTURES,\r\n    ActiveConstants.PIF,\r\n    ActiveConstants.PRECIOUS_METAL,\r\n\r\n    ActiveConstants.CRYPTO,\r\n  ];\r\n\r\n  static PROPERTY_GROUP = [\r\n    ActiveConstants.FLAT,\r\n    ActiveConstants.HOUSE,\r\n    ActiveConstants.LAND,\r\n    ActiveConstants.CAR,\r\n    ActiveConstants.MOTO,\r\n    ActiveConstants.TECHNIC,\r\n    ActiveConstants.JEWELRY,\r\n    ActiveConstants.PERSONAL_TECHNIC\r\n  ];\r\n\r\n  static INSURANCES_GROUP = [\r\n    ActiveConstants.CAR_INSURANCE,\r\n    ActiveConstants.PROPERTY_INSURANCE,\r\n    ActiveConstants.HEALTH_INSURANCE,\r\n    ActiveConstants.VMI_INSURANCE,\r\n    ActiveConstants.TRAVEL_INSURANCE,\r\n    ActiveConstants.SPORT_INSURANCE,\r\n    ActiveConstants.UNIT_LINKED_INSURANCE,\r\n    ActiveConstants.LOSE_JOB_INSURANCE,\r\n    ActiveConstants.RESPONSIBILITY_INSURANCE,\r\n    ActiveConstants.INVESTMENT_LIFE_INSURANCE,\r\n    ActiveConstants.FUNDED_LIFE_INSURANCE\r\n  ];\r\n\r\n  static DIVIDEND_GROUP = [\r\n    ActiveConstants.STOCK,\r\n  ];\r\n\r\n  static COUPON_GROUP = [\r\n    ActiveConstants.OBLIGATION,\r\n    ActiveConstants.STRUCTURE_PRODUCT,\r\n    ActiveConstants.EXCHANGE_NOTE,\r\n    ActiveConstants.OBLIGATION_NOTE,\r\n  ];\r\n\r\n  static DEBT_GROUP = [\r\n    ActiveConstants.DEBT,\r\n    ActiveConstants.DEPOSIT,\r\n  ];\r\n\r\n  static SPENDING_GROUP = [\r\n    ActiveConstants.PRODUCTS_SPEND,\r\n    ActiveConstants.CAFE_SPEND,\r\n    ActiveConstants.CAR_SPEND,\r\n    ActiveConstants.TRANSPORT_SPEND,\r\n    ActiveConstants.MEDICINE_SPEND,\r\n    ActiveConstants.BEAUTY_SPEND,\r\n    ActiveConstants.CLOTHES_ADULT_SPEND,\r\n    ActiveConstants.CLOTHES_CHILD_SPEND,\r\n    ActiveConstants.TOYS_SPEND,\r\n    ActiveConstants.VACATION_SPEND,\r\n    ActiveConstants.EDUCATION_SPEND,\r\n    ActiveConstants.RENT_SPEND,\r\n    ActiveConstants.FUN_SPEND,\r\n    ActiveConstants.PRESENTS_SPEND,\r\n    ActiveConstants.SPORT_SPEND,\r\n    ActiveConstants.TELECOM_SPEND,\r\n  ];\r\n\r\n  static INCOME_GROUP = [\r\n    ActiveConstants.SALARY_INCOME,\r\n    ActiveConstants.BONUS_INCOME,\r\n    ActiveConstants.RETIRE_INCOME,\r\n    ActiveConstants.RENT_INCOME,\r\n    ActiveConstants.RELATIVES_INCOME,\r\n    ActiveConstants.PASSIVE_INCOME,\r\n    ActiveConstants.AGENT_INCOME,\r\n  ];\r\n\r\n\r\n  static CREDIT_GROUP = [\r\n    ActiveConstants.CAR_CREDIT,\r\n    ActiveConstants.FLAT_CREDIT,\r\n    ActiveConstants.CREDIT,\r\n    ActiveConstants.ALIMONY,\r\n    ActiveConstants.LOAN,\r\n    // ActiveConstants.CUSTOM_OBLIGATION не должно быть тут, так как форма создания обязательств отличается\r\n  ];\r\n\r\n  static OBLIGATION_GROUP = [\r\n    ActiveConstants.RENT_CAR,\r\n    ActiveConstants.RENT_FLAT,\r\n    ActiveConstants.SPEND_LIFE,\r\n  ];\r\n\r\n\r\n  static PACKAGE_GROUP = [\r\n    ActiveConstants.COMMODITY,\r\n    ActiveConstants.PRECIOUS_METAL,\r\n    ActiveConstants.CURRENCY,\r\n    ActiveConstants.CRYPTO,\r\n    ActiveConstants.ETF,\r\n    ActiveConstants.PIF,\r\n    ActiveConstants.BPIF,\r\n    ActiveConstants.HEDGE_FUND,\r\n    ActiveConstants.STOCK,\r\n    ActiveConstants.STRATEGY_DU,\r\n    ActiveConstants.FUTURES,\r\n    ActiveConstants.OPTION,\r\n    ActiveConstants.OBLIGATION,\r\n    ActiveConstants.STRUCTURE_PRODUCT,\r\n    ActiveConstants.EXCHANGE_NOTE,\r\n    ActiveConstants.OBLIGATION_NOTE,\r\n  ];\r\n\r\n  static CB = 1;\r\n  static YAHOO_QUOTES = 2;\r\n  static MOSCOW_EXCHANGE_QUOTES = 3;\r\n\r\n  /**\r\n   * catalogs\r\n   */\r\n  static CB_CATALOG = 'catalog.1';\r\n  static YAHOO_CATALOG = 'catalog.2';\r\n  static MOEX_CATALOG = 'catalog.3';\r\n  static CUSTOM_CATALOG = 'catalog.4';\r\n  static CBONDS_CATALOG = 'catalog.5';\r\n\r\n  static CATALOGS = [\r\n    ActiveConstants.CB_CATALOG,\r\n    ActiveConstants.YAHOO_CATALOG,\r\n    ActiveConstants.MOEX_CATALOG,\r\n    ActiveConstants.CUSTOM_CATALOG,\r\n    ActiveConstants.CBONDS_CATALOG,\r\n  ];\r\n\r\n  static DAILY = 1;\r\n  static WEEKLY = 2;\r\n  static MONTHLY = 3;\r\n  static QUARTER = 4;\r\n  static HALFYEAR = 5;\r\n  static YEARLY = 6;\r\n  static CUSTOM_PERIOD_WEEK = 7;\r\n  static CUSTOM_PERIOD_MONTH = 8;\r\n  static CONDITION = 9;\r\n\r\n  static SIMPLE = 1;\r\n  static DIFFERENTIAL = 2;\r\n  static MONEY = 1;\r\n  static INVEST = 2;\r\n  static INVEST_TRADED = 4;\r\n  static OWN = 3;\r\n  /**\r\n   * способ получения актива - покупка или добавление (без списания со счёта сумма за покупку)\r\n   *\r\n   */\r\n  static BUY = 1;\r\n  static GET = 2;\r\n  static STOCK_GROUP_TYPE = 1001;\r\n  static OBLIGATION_GROUP_TYPE = 1002;\r\n  static METAL_GROUP_TYPE = 1003;\r\n  static PROPERTY_GROUP_TYPE = 1004;\r\n  static ALTERNATIVE_GROUP_TYPE = 1005;\r\n  static DIRECT_GROUP_TYPE = 1006;\r\n  static INSTRUMENT_CASH_FLOW_GROUP_TYPE = 1007;\r\n  static CUSTOM_GROUP_TYPE = 2001;\r\n  static CUSTOM_CLASS_TYPE = 2001;\r\n  static INSURANCE_RISK_STEAL = 1001;\r\n  static INSURANCE_RISK_FIRE = 1002;\r\n  static INSURANCE_RISK_DISASTER = 1003;\r\n  static INSURANCE_RISK_TOTAL = 1004;\r\n  static INSURANCE_RISK_FLOODING = 1005;\r\n  static INSURANCE_RISK_ILLEGAL_ACTIONS = 1006;\r\n  static INSURANCE_RISK_DEATH = 2001;\r\n  static INSURANCE_RISK_SURGICAL_INTERVENTION = 2002;\r\n  static INSURANCE_RISK_SPORT_INJURY = 2003;\r\n  static INSURANCE_RISK_CRITICAL_ILLNESS = 2004;\r\n  static INSURANCE_RISK_HOSPITALIZATION = 2005;\r\n  static INSURANCE_RISK_IN_PRODUCTION = 2006;\r\n  static INSURANCE_RISK_TRAUMATIC_INJURY = 2007;\r\n  static INSURANCE_RISK_CRIMINAL_INJURY = 2008;\r\n  static INSURANCE_RISK_JOB_LOSS = 2009;\r\n  static INSURANCE_RISK_DISABILITY = 2010;\r\n  static INSURANCE_RISK_DOCTOR_ADVICE = 3001;\r\n  static INSURANCE_RISK_HOSPITAL = 3002;\r\n  static INSURANCE_RISK_DENTISTRY = 3003;\r\n  static INSURANCE_RISK_CLINIC_SERVICE = 3004;\r\n  static INSURANCE_RISK_AMBULANCE = 3005;\r\n  static INSURANCE_RISK_PHARMACY = 3006;\r\n  static INSURANCE_RISK_MEDICAL_TRANSPORT = 4001;\r\n  static INSURANCE_RISK_ACCIDENT = 4002;\r\n  static INSURANCE_RISK_TRIP_CANCELATION = 4003;\r\n  static INSURANCE_RISK_ACTIVE_SPORTS = 4004;\r\n  static INSURANCE_RISK_LOST_LAGGAGE = 4005;\r\n  static INSURANCE_RISK_CIVIL_RESPONSIBILITY = 4006;\r\n  static INSURANCE_RISK_DISABILITY_SPORTS = 5001;\r\n  static INSURANCE_RISK_MARTIAL_ARTS = 5002;\r\n  static INSURANCE_RISK_FIGURE_SKATING = 5003;\r\n  static INSURANCE_RISK_INJURY = 5004;\r\n  static INSURANCE_RISK_GAME_TEAM_SPORTS = 5005;\r\n  static INSURANCE_RISK_DANCE_SPORTS = 5006;\r\n  static INSURANCE_RISK_MORTALITY = 5007;\r\n  static INSURANCE_RISK_ARTISTIC_GYMNASTIC = 5008;\r\n  static INSURANCE_RISK_EXTREME_SPORTS = 5009;\r\n  static INSURANCE_RISK_RUN = 5010;\r\n  static INSURANCE_RISK_SWIMMING = 5011;\r\n  static INSURANCE_RISK_COMPANY_LIQUIDATION = 6001;\r\n  static INSURANCE_RISK_AGREEMENT_OF_PARTIES = 6002;\r\n  static INSURANCE_RISK_CHANGE_OWNERSHIP = 6003;\r\n  static INSURANCE_RISK_EXTRAORDINARY_CIRCUMSTANCES = 6004;\r\n  static INSURANCE_RISK_DOWNSIZING_INCONSISTENCY = 6005;\r\n  static INSURANCE_RISK_EMPLOYERS_INITIATIVE = 6006;\r\n  static INSURANCE_RISK_DEATH_OF_EMPLOYER = 6007;\r\n  static INSURANCE_RISK_REINSTATEMENT_TO_WORK = 6008;\r\n  static INSURANCE_RISK_TERMINATION_OF_ACCESS = 6009;\r\n  static INSURANCE_RISK_CAUSING_HARM_HEALTH = 7001;\r\n  static INSURANCE_RISK_CAUSING_PROPERTY_DAMAGE = 7002;\r\n  static INSURANCE_RISK_CONDUCTIONG_CASES_IN_JUDICAL = 7003;\r\n  static INSURANCE_RISK_EXPENSES_INCURRED = 7004;\r\n  /** pet form **/\r\n  static INSURANCE_RISK_DOCTOR_ADVICE_PET = 8001;\r\n  static INSURANCE_RISK_DIAGNOSTIC = 8002;\r\n  static INSURANCE_RISK_PARAMEDIC = 8003;\r\n  static INSURANCE_RISK_SURGICAL = 8004;\r\n  static INSURANCE_RISK_MEDICATIONS = 8005;\r\n  static INSURANCE_RISK_KEEPING_ANIMAL = 8006;\r\n\r\n  static getName(item)\r\n  {\r\n\r\n  }\r\n\r\n  static types()\r\n  {\r\n    return [\r\n      {id: ActiveConstants.SALARY, name: ''},\r\n      {id: ActiveConstants.SALARY_INCOME, name: ''},\r\n      {id: ActiveConstants.BONUS_INCOME, name: ''},\r\n      {id: ActiveConstants.RETIRE_INCOME, name: ''},\r\n      {id: ActiveConstants.RETIRE_INCOME, name: ''},\r\n      {id: ActiveConstants.RENT_INCOME, name: ''},\r\n      {id: ActiveConstants.RELATIVES_INCOME, name: ''},\r\n      {id: ActiveConstants.PASSIVE_INCOME, name: ''},\r\n      {id: ActiveConstants.AGENT_INCOME, name: ''},\r\n      {id: ActiveConstants.CUSTOM_INCOME, name: ''},\r\n      {id: ActiveConstants.CUSTOM_SALARY, name: ''},\r\n      {id: ActiveConstants.FLAT, name: 'Недвижимость'},\r\n      {id: ActiveConstants.HOUSE, name: 'Недвижимость'},\r\n      {id: ActiveConstants.LAND, name: 'Недвижимость'},\r\n      {id: ActiveConstants.CAR, name: 'Техника'},\r\n      {id: ActiveConstants.MOTO, name: 'Техника'},\r\n      {id: ActiveConstants.TECHNIC, name: 'Техника'},\r\n      {id: ActiveConstants.JEWELRY, name: 'Ювелирные украшения'},\r\n      {id: ActiveConstants.PERSONAL_TECHNIC, name: 'Техника'},\r\n      {id: ActiveConstants.CUSTOM_PROPERTY, name: 'Имущество'},\r\n      {id: ActiveConstants.DEPOSIT, name: 'Депозит'},\r\n      {id: ActiveConstants.DEBT, name: ''},\r\n      {id: ActiveConstants.FUNDED_LIFE_INSURANCE, name: ''},\r\n      {id: ActiveConstants.COMMODITY, name: 'Товары'},\r\n      {id: ActiveConstants.PRECIOUS_METAL, name: 'Драгоценные металлы'},\r\n      {id: ActiveConstants.CURRENCY, name: 'Валюта'},\r\n      {id: ActiveConstants.CRYPTO, name: 'Криптовалюта'},\r\n      {id: ActiveConstants.ETF, name: 'ETF'},\r\n      {id: ActiveConstants.PIF, name: 'ПИФ'},\r\n      {id: ActiveConstants.BONUS_INCOME, name: 'БПИФ (биржевой ПИФ)'},\r\n      {id: ActiveConstants.HEDGE_FUND, name: 'Хэдж-фонды'},\r\n      {id: ActiveConstants.STOCK, name: 'Акции'},\r\n      {id: ActiveConstants.STRATEGY_DU, name: 'Стратегия ДУ (доверительное управление)'},\r\n      {id: ActiveConstants.FUTURES, name: 'Фьючерс'},\r\n      {id: ActiveConstants.OPTION, name: 'Опцион'},\r\n      {id: ActiveConstants.OBLIGATION, name: 'Облигации'},\r\n      {id: ActiveConstants.STRUCTURE_PRODUCT, name: 'Структурные продукты'},\r\n      {id: ActiveConstants.INVESTMENT_LIFE_INSURANCE, name: 'ИЖС'},\r\n      {id: ActiveConstants.EXCHANGE_NOTE, name: 'Биржевая нота'},\r\n      {id: ActiveConstants.OBLIGATION_NOTE, name: 'Облигационная нота'},\r\n      {id: ActiveConstants.RENT_CAR, name: ''},\r\n      {id: ActiveConstants.RENT_FLAT, name: ''},\r\n      {id: ActiveConstants.SPEND_LIFE, name: ''},\r\n      {id: ActiveConstants.CAR_CREDIT, name: 'Кредит'},\r\n      {id: ActiveConstants.FLAT_CREDIT, name: 'Кредит'},\r\n      {id: ActiveConstants.CREDIT, name: 'Кредит'},\r\n      {id: ActiveConstants.LOAN, name: 'Займ'},\r\n      {id: ActiveConstants.ALIMONY, name: 'Алименты'},\r\n      {id: ActiveConstants.CUSTOM_SPEND, name: ''},\r\n      {id: ActiveConstants.CUSTOM_OBLIGATION, name: ''},\r\n      {id: ActiveConstants.MONEY_ACTIVE, name: 'Деньги'},\r\n    ]\r\n  }\r\n\r\n  static groups()\r\n  {\r\n    return [\r\n      // {id: ActiveConstants.MONEY, name: ''},\r\n      {id: ActiveConstants.OWN, name: 'Личный актив'},\r\n      {id: ActiveConstants.INVEST_TRADED, name: 'Инвестиционный финансвовый актив (торгуемый на бирже)'},\r\n      {id: ActiveConstants.INVEST, name: 'Инвестиционный финансвовый актив (неторгуемый на бирже)'},\r\n    ]\r\n  }\r\n\r\n  static paymentTypes()\r\n  {\r\n    return [\r\n      {id: ActiveConstants.ONCE, name: 'Разовый'},\r\n      {id: ActiveConstants.PERIOD, name: 'Периодичный'}\r\n    ]\r\n  }\r\n\r\n  static getPaymentTypeById(id)\r\n  {\r\n    let type = null;\r\n\r\n    ActiveConstants.paymentTypes().map((item) =>\r\n    {\r\n      if (item.id === id)\r\n      {\r\n        type = item\r\n      }\r\n\r\n\r\n    });\r\n\r\n    return type;\r\n  }\r\n\r\n  static actions()\r\n  {\r\n    return [\r\n      // {id: ActiveConstants.MONEY, name: ''},\r\n      {id: ActiveConstants.BUY, name: 'Покупка'},\r\n      {id: ActiveConstants.GET, name: 'Получение или наследование'}\r\n    ]\r\n  }\r\n\r\n  static periods()\r\n  {\r\n    return [\r\n      {id: ActiveConstants.MONTHLY, name: 'Месяц'},\r\n      {id: ActiveConstants.QUARTER, name: 'Квартал'},\r\n      {id: ActiveConstants.HALFYEAR, name: 'Полгода'},\r\n      {id: ActiveConstants.YEARLY, name: 'Год'},\r\n    ]\r\n  }\r\n\r\n  static fullList()\r\n  {\r\n    return [\r\n      {id: ActiveConstants.DAILY, name: 'День'},\r\n      {id: ActiveConstants.WEEKLY, name: 'Неделя'},\r\n      {id: ActiveConstants.MONTHLY, name: 'Месяц'},\r\n      {id: ActiveConstants.QUARTER, name: 'Квартал'},\r\n      {id: ActiveConstants.HALFYEAR, name: 'Полгода'},\r\n      {id: ActiveConstants.YEARLY, name: 'Год'},\r\n      {id: ActiveConstants.CUSTOM_PERIOD_WEEK, name: 'Еженедельно по определенным дням недели'},\r\n      {id: ActiveConstants.CUSTOM_PERIOD_MONTH, name: 'Ежемесячно по определенным дням месяца'},\r\n    ]\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param id\r\n   * @returns {*}\r\n   */\r\n  static getGroupById(id)\r\n  {\r\n    let group = null;\r\n\r\n    ActiveConstants.groups().map((item) =>\r\n    {\r\n      if (item.id === id)\r\n      {\r\n        group = item\r\n      }\r\n\r\n\r\n    });\r\n\r\n    return group;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param id\r\n   * @returns {*}\r\n   */\r\n  static getActionById(id)\r\n  {\r\n    let group = null;\r\n\r\n    ActiveConstants.actions().map((item) =>\r\n    {\r\n      if (item.id === id)\r\n      {\r\n        group = item\r\n      }\r\n\r\n\r\n    });\r\n\r\n    return group;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param id\r\n   * @returns {*}\r\n   */\r\n  static getTypeById(id)\r\n  {\r\n    let type = null;\r\n\r\n    ActiveConstants.types().map((item) =>\r\n    {\r\n      if (item.id === id)\r\n      {\r\n        type = item\r\n      }\r\n\r\n\r\n    })\r\n\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param id\r\n   * @returns {*}\r\n   */\r\n  static getPeriodTypeById(id)\r\n  {\r\n    let type = null;\r\n\r\n    ActiveConstants.fullList().map((item) =>\r\n    {\r\n      if (item.id === id)\r\n      {\r\n        type = item\r\n      }\r\n\r\n\r\n    })\r\n\r\n    return type;\r\n  }\r\n\r\n  static getActiveCurrency(item)\r\n  {\r\n    if (ActiveConstants.isPackage(item.type_id))\r\n    {\r\n      if (item.buy_currency_id)\r\n      {\r\n        let currency = CurrencyConstants.getCurrencyById(item.buy_currency_id);\r\n\r\n        return currency ? CurrencyConstants.getCurrencyNameByCode(currency.code) : ''\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  static getBondDate(item)\r\n  {\r\n    if (ActiveConstants.isPackage(item.type_id))\r\n    {\r\n      if (item.sell_at_date)\r\n      {\r\n        let date = moment(item.sell_at_date, 'DD.MM.YYYY');\r\n\r\n        if (date.isValid())\r\n        {\r\n          return date.format('YYYY')\r\n        }\r\n      }\r\n    }\r\n\r\n    return 'Дата погашения не определена';\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param text\r\n   * @return {string}\r\n   */\r\n  static getActiveCompanyByText(text)\r\n  {\r\n    if (text)\r\n    {\r\n      text = text.toLowerCase()\r\n\r\n      if (text.includes('газпром') || text.includes('gaz finance') || text.includes('gaz capital'))\r\n      {\r\n        return 'Газпром';\r\n      } else if (text.includes('ржд') || text.includes('rzd capital'))\r\n      {\r\n        return 'RGD';\r\n      } else if (text.includes('belarus') || text.includes('RZD Capital'))\r\n      {\r\n        return 'Belarus';\r\n      } else if (text.includes('polyus') || text.includes('полюс'))\r\n      {\r\n        return 'Polyus';\r\n      } else if (text.includes('россия'))\r\n      {\r\n        return 'Russia';\r\n      } else if (text.includes('фосагро'))\r\n      {\r\n        return 'Fosagro';\r\n      } else if (text.includes('dme airport'))\r\n      {\r\n        return 'Domodedovo';\r\n      } else if (text.includes('steel funding dac') || text.includes('нлмк'))\r\n      {\r\n        return 'NLMK';\r\n      } else if (text.includes('гмк норильский никель'))\r\n      {\r\n        return 'GMKN';\r\n      } else\r\n      {\r\n      }\r\n    }\r\n\r\n    // var re = /active\\.([0-9]+)/i;\r\n    // if (typeof item.item_type === 'string' && item.item_type?.match(re)) {\r\n    //   ids.push(item.item_id)\r\n    // }\r\n\r\n\r\n    return 'Не определено';\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param item\r\n   * @return {string}\r\n   */\r\n  static getActiveCompany(item)\r\n  {\r\n    return ActiveConstants.getActiveCompanyByText(Active.getName(item));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param item\r\n   * @return {string|string|*}\r\n   */\r\n  static getActiveNameByType(item)\r\n  {\r\n    if (item)\r\n    {\r\n      switch (item.type_id)\r\n      {\r\n        case ActiveConstants.FLAT:\r\n        case ActiveConstants.HOUSE:\r\n        case ActiveConstants.LAND:\r\n        case ActiveConstants.CAR:\r\n        case ActiveConstants.MOTO:\r\n        case ActiveConstants.TECHNIC:\r\n        case ActiveConstants.JEWELRY:\r\n        case ActiveConstants.PERSONAL_TECHNIC:\r\n        case ActiveConstants.CUSTOM_PROPERTY:\r\n          return 'Имущество';\r\n        case ActiveConstants.CURRENCY:\r\n          return 'Валюта';\r\n        case ActiveConstants.CRYPTO:\r\n          return 'Криптовалюта';\r\n        case ActiveConstants.STOCK:\r\n          return 'Акции';\r\n        case ActiveConstants.FUTURES:\r\n          return 'Фьючерс';\r\n        case ActiveConstants.ETF:\r\n          return 'ETF (биржевой инвестиционный фонд)';\r\n        case ActiveConstants.PIF:\r\n          return 'Паевой инвестиционный фонд (ПИФ)';\r\n        case ActiveConstants.BPIF:\r\n          return 'БПИФ (биржевой ПИФ)';\r\n        case ActiveConstants.HEDGE_FUND:\r\n          return 'Хедж-фонд';\r\n        case ActiveConstants.OBLIGATION:\r\n          return 'Облигации';\r\n        case ActiveConstants.STRUCTURE_PRODUCT:\r\n          return 'Структурный продукт';\r\n        case ActiveConstants.INVESTMENT_LIFE_INSURANCE:\r\n          return 'ИЖС';\r\n        case ActiveConstants.EXCHANGE_NOTE:\r\n          return 'Биржевая нота';\r\n        case ActiveConstants.OBLIGATION_NOTE:\r\n          return 'Облигационная нота';\r\n        case ActiveConstants.MONEY_ACTIVE:\r\n          return 'Валюта';\r\n      }\r\n\r\n      return item.type_text;\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param item\r\n   * @return {string|*}\r\n   */\r\n  static getNameWithCatalog(item)\r\n  {\r\n    switch (item.type_id)\r\n    {\r\n      case ActiveConstants.SALARY:\r\n      case ActiveConstants.FLAT:\r\n      case ActiveConstants.HOUSE:\r\n      case ActiveConstants.LAND:\r\n      case ActiveConstants.CAR:\r\n      case ActiveConstants.MOTO:\r\n      case ActiveConstants.TECHNIC:\r\n      case ActiveConstants.JEWELRY:\r\n      case ActiveConstants.PERSONAL_TECHNIC:\r\n      case ActiveConstants.DEPOSIT:\r\n      case ActiveConstants.DEBT:\r\n      case ActiveConstants.FUNDED_LIFE_INSURANCE:\r\n      case ActiveConstants.INVESTMENT_LIFE_INSURANCE:\r\n      case ActiveConstants.COMMODITY:\r\n      case ActiveConstants.CRYPTO:\r\n      case ActiveConstants.BPIF:\r\n      case ActiveConstants.HEDGE_FUND:\r\n      case ActiveConstants.STRUCTURE_PRODUCT:\r\n      case ActiveConstants.EXCHANGE_NOTE:\r\n      case ActiveConstants.OBLIGATION_NOTE:\r\n      case ActiveConstants.STRATEGY_DU:\r\n      case ActiveConstants.OPTION:\r\n      case ActiveConstants.RENT_CAR:\r\n      case ActiveConstants.RENT_FLAT:\r\n      case ActiveConstants.SPEND_LIFE:\r\n      case ActiveConstants.CAR_CREDIT:\r\n      case ActiveConstants.FLAT_CREDIT:\r\n      case ActiveConstants.CREDIT:\r\n      case ActiveConstants.PRODUCTS_SPEND:\r\n      case ActiveConstants.CAFE_SPEND:\r\n      case ActiveConstants.CAR_SPEND:\r\n      case ActiveConstants.TRANSPORT_SPEND:\r\n      case ActiveConstants.MEDICINE_SPEND:\r\n      case ActiveConstants.BEAUTY_SPEND:\r\n      case ActiveConstants.CLOTHES_ADULT_SPEND:\r\n      case ActiveConstants.CLOTHES_CHILD_SPEND:\r\n      case ActiveConstants.TOYS_SPEND:\r\n      case ActiveConstants.VACATION_SPEND:\r\n      case ActiveConstants.EDUCATION_SPEND:\r\n      case ActiveConstants.RENT_SPEND:\r\n      case ActiveConstants.FUN_SPEND:\r\n      case ActiveConstants.PRESENTS_SPEND:\r\n      case ActiveConstants.SPORT_SPEND:\r\n      case ActiveConstants.TELECOM_SPEND:\r\n      case ActiveConstants.SALARY_INCOME:\r\n      case ActiveConstants.BONUS_INCOME:\r\n      case ActiveConstants.RETIRE_INCOME:\r\n      case ActiveConstants.RENT_INCOME:\r\n      case ActiveConstants.RELATIVES_INCOME:\r\n      case ActiveConstants.PASSIVE_INCOME:\r\n      case ActiveConstants.AGENT_INCOME:\r\n      case ActiveConstants.CUSTOM_INCOME:\r\n      case ActiveConstants.CUSTOM_SALARY:\r\n      case ActiveConstants.CUSTOM_PROPERTY:\r\n      case ActiveConstants.CUSTOM_SPEND:\r\n      case ActiveConstants.CUSTOM_OBLIGATION:\r\n      case ActiveConstants.AUTO_INSURANCE:\r\n      case ActiveConstants.HEALTH_INSURANCE:\r\n      case ActiveConstants.LOSE_JOB_INSURANCE:\r\n      case ActiveConstants.CUSTOM_INSURANCE:\r\n      case ActiveConstants.PET_INSURANCE:\r\n      case ActiveConstants.PROPERTY_INSURANCE:\r\n      case ActiveConstants.RESPONSIBILITY_INSURANCE:\r\n      case ActiveConstants.SPORT_INSURANCE:\r\n      case ActiveConstants.TRAVEL_INSURANCE:\r\n      case ActiveConstants.UNIT_LINKED_INSURANCE:\r\n      case ActiveConstants.VMI_INSURANCE:\r\n        return item.name;\r\n      case ActiveConstants.CURRENCY:\r\n        let relate1 = item.item;\r\n\r\n        if (relate1)\r\n        {\r\n          return item.name + ' ' + relate1.name;\r\n        }\r\n        return item.name;\r\n\r\n      case ActiveConstants.STOCK:\r\n      case ActiveConstants.ETF:\r\n      case ActiveConstants.OBLIGATION:\r\n      case ActiveConstants.FUTURES:\r\n      case ActiveConstants.PIF:\r\n      case ActiveConstants.PRECIOUS_METAL:\r\n        let relate2 = item.item;\r\n\r\n        if (relate2)\r\n        {\r\n          if(relate2.ticker === ActiveConstants.MOEX_CATALOG)\r\n          {\r\n            return relate2.name + ' ' + relate2.secid + ' ' + relate2.isin;\r\n          }\r\n\r\n          return relate2.name + ' ' + relate2.secid;\r\n        }\r\n        return item.name;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param item\r\n   * @return {*|string}\r\n   */\r\n  static getActiveNameByGroup(item)\r\n  {\r\n    return item.group_type_text ? item.group_type_text : 'Без категории';\r\n  }\r\n\r\n  static getAccountName(account)\r\n  {\r\n    if(account)\r\n    {\r\n      if(account.name)\r\n      {\r\n        return account.name\r\n      }\r\n\r\n      if(account.bank_id)\r\n      {\r\n        return account.bank_text;\r\n      }\r\n\r\n      //если счет временный, то у него может не быть названия\r\n      if(account.type_id === AccountConstants.TEMP)\r\n      {\r\n        return AccountConstants.textByType(account);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param item\r\n   * @return {string|*|string}\r\n   */\r\n  static getAccountNameByActive(item)\r\n  {\r\n    if (ActiveConstants.isPackage(item.type_id))\r\n    {\r\n      if (item?.buy_trades?.length)\r\n      {\r\n        if (item.buy_trades[0] && item.buy_trades[0].from_account_id)\r\n        {\r\n          let account = AccountConstants.getAccountBySubAccountId(item.buy_trades[0].from_account_id);\r\n\r\n          return ActiveConstants.getAccountName(account);\r\n        }\r\n      }\r\n\r\n      if (item.sell_trades?.length)\r\n      {\r\n        if (item.sell_trades[0] && item.sell_trades[0].from_account_id)\r\n        {\r\n          //если это продажа валюты, то нужно менять использовать другой счёт\r\n          if (item.type_id === ActiveConstants.CURRENCY)\r\n          {\r\n            let account = AccountConstants.getAccountBySubAccountId(item.sell_trades[0].to_account_id);\r\n\r\n            return ActiveConstants.getAccountName(account);\r\n          } else\r\n          {\r\n            let account = AccountConstants.getAccountBySubAccountId(item.sell_trades[0].from_account_id);\r\n\r\n            return ActiveConstants.getAccountName(account);\r\n          }\r\n        }\r\n      }\r\n    } else\r\n    {\r\n      if (item.buy_account_id)\r\n      {\r\n        let account = AccountConstants.getAccountBySubAccountId(item.buy_account_id);\r\n\r\n        let accountText = ActiveConstants.getAccountName(account);\r\n\r\n        if(accountText === '')\r\n        {\r\n          let subAccount = AccountConstants.getSubAccountById(item.buy_account_id);\r\n\r\n          if(subAccount)\r\n          {\r\n            return subAccount.name ?? '';\r\n          }\r\n        }\r\n\r\n        return accountText;\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  static getAccountIdByActive(item)\r\n  {\r\n    //TODO correct grouping\r\n    if (item?.buy_trades?.length)\r\n    {\r\n      if (item.buy_trades[0] && item.buy_trades[0].from_account_id)\r\n      {\r\n        return item.buy_trades[0].from_account_id;\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  static isPackage(typeId)\r\n  {\r\n    switch (typeId)\r\n    {\r\n      case ActiveConstants.FLAT:\r\n      case ActiveConstants.HOUSE:\r\n      case ActiveConstants.LAND:\r\n      case ActiveConstants.CAR:\r\n      case ActiveConstants.MOTO:\r\n      case ActiveConstants.TECHNIC:\r\n      case ActiveConstants.JEWELRY:\r\n      case ActiveConstants.PERSONAL_TECHNIC:\r\n      case ActiveConstants.DEBT:\r\n      case ActiveConstants.DEPOSIT:\r\n      case ActiveConstants.CUSTOM_PROPERTY:\r\n      case ActiveConstants.MONEY_ACTIVE:\r\n        return false;\r\n      case ActiveConstants.COMMODITY:\r\n      case ActiveConstants.PRECIOUS_METAL:\r\n      case ActiveConstants.CURRENCY:\r\n      case ActiveConstants.CRYPTO:\r\n      case ActiveConstants.ETF:\r\n      case ActiveConstants.PIF:\r\n      case ActiveConstants.BPIF:\r\n      case ActiveConstants.HEDGE_FUND:\r\n      case ActiveConstants.STOCK:\r\n      case ActiveConstants.FUTURES:\r\n      case ActiveConstants.OPTION:\r\n      case ActiveConstants.STRATEGY_DU:\r\n      case ActiveConstants.OBLIGATION:\r\n      case ActiveConstants.STRUCTURE_PRODUCT:\r\n      case ActiveConstants.EXCHANGE_NOTE:\r\n      case ActiveConstants.OBLIGATION_NOTE:\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param id\r\n   * @return {string}\r\n   */\r\n  static getRiskName(id)\r\n  {\r\n    switch (parseInt(id))\r\n    {\r\n      case ActiveConstants.INSURANCE_RISK_STEAL:\r\n        return 'Угон';\r\n      case ActiveConstants.INSURANCE_RISK_FIRE:\r\n        return 'Пожар';\r\n      case ActiveConstants.INSURANCE_RISK_DISASTER:\r\n        return 'Стихийный бедствия';\r\n      case ActiveConstants.INSURANCE_RISK_TOTAL:\r\n        return 'Тотал';\r\n      case ActiveConstants.INSURANCE_RISK_FLOODING:\r\n        return 'Затопление';\r\n      case ActiveConstants.INSURANCE_RISK_ILLEGAL_ACTIONS:\r\n        return 'Противоправные действия';\r\n      case ActiveConstants.INSURANCE_RISK_DEATH:\r\n        return 'Смерть';\r\n      case ActiveConstants.INSURANCE_RISK_SURGICAL_INTERVENTION:\r\n        return 'Хирургическое вмешательство';\r\n      case ActiveConstants.INSURANCE_RISK_SPORT_INJURY:\r\n        return 'Спортивная травма';\r\n      case ActiveConstants.INSURANCE_RISK_CRITICAL_ILLNESS:\r\n        return 'Критическое заболевание';\r\n      case ActiveConstants.INSURANCE_RISK_HOSPITALIZATION:\r\n        return 'Госпитализация';\r\n      case ActiveConstants.INSURANCE_RISK_IN_PRODUCTION:\r\n        return 'На производстве';\r\n      case ActiveConstants.INSURANCE_RISK_TRAUMATIC_INJURY:\r\n        return 'Травматическое повреждение';\r\n      case ActiveConstants.INSURANCE_RISK_CRIMINAL_INJURY:\r\n        return 'Криминальная травма';\r\n      case ActiveConstants.INSURANCE_RISK_JOB_LOSS:\r\n        return 'Потеря работы';\r\n      case ActiveConstants.INSURANCE_RISK_DISABILITY:\r\n        return 'Инвалидность';\r\n      case ActiveConstants.INSURANCE_RISK_DOCTOR_ADVICE:\r\n        return 'Консультации врача';\r\n      case ActiveConstants.INSURANCE_RISK_HOSPITAL:\r\n        return 'Стационар';\r\n      case ActiveConstants.INSURANCE_RISK_DENTISTRY:\r\n        return 'Стоматология';\r\n      case ActiveConstants.INSURANCE_RISK_CLINIC_SERVICE:\r\n        return 'Амбулаторно-поликлинические услуги';\r\n      case ActiveConstants.INSURANCE_RISK_AMBULANCE:\r\n        return 'Скорая помощь';\r\n      case ActiveConstants.INSURANCE_RISK_PHARMACY:\r\n        return 'Аптека';\r\n      case ActiveConstants.INSURANCE_RISK_MEDICAL_TRANSPORT:\r\n        return 'Медико-транспортные расходы';\r\n      case ActiveConstants.INSURANCE_RISK_ACCIDENT:\r\n        return 'Несчастный случай';\r\n      case ActiveConstants.INSURANCE_RISK_TRIP_CANCELATION:\r\n        return 'Отмена поездки и задержка рейса';\r\n      case ActiveConstants.INSURANCE_RISK_ACTIVE_SPORTS:\r\n        return 'Активные виды спорта';\r\n      case ActiveConstants.INSURANCE_RISK_LOST_LAGGAGE:\r\n        return 'Утрата багажа';\r\n      case ActiveConstants.INSURANCE_RISK_CIVIL_RESPONSIBILITY:\r\n        return 'Гражданская ответственность';\r\n      case ActiveConstants.INSURANCE_RISK_DISABILITY_SPORTS:\r\n        return 'Инвалидность';\r\n      case ActiveConstants.INSURANCE_RISK_MARTIAL_ARTS:\r\n        return 'Боевые единоборства';\r\n      case ActiveConstants.INSURANCE_RISK_FIGURE_SKATING:\r\n        return 'Фигурное катание';\r\n      case ActiveConstants.INSURANCE_RISK_INJURY:\r\n        return 'Травма';\r\n      case ActiveConstants.INSURANCE_RISK_GAME_TEAM_SPORTS:\r\n        return 'Игровые командные виды спорта (футбол; хоккей и т.д)';\r\n      case ActiveConstants.INSURANCE_RISK_DANCE_SPORTS:\r\n        return 'Спортивные танцы';\r\n      case ActiveConstants.INSURANCE_RISK_MORTALITY:\r\n        return 'Смертность';\r\n      case ActiveConstants.INSURANCE_RISK_ARTISTIC_GYMNASTIC:\r\n        return 'Художественная и спортивная гимнастика';\r\n      case ActiveConstants.INSURANCE_RISK_EXTREME_SPORTS:\r\n        return 'Экстремальные виды спорта  (сноуборд; горнолыжный спорт; скейтборд) и т.д.';\r\n      case ActiveConstants.INSURANCE_RISK_RUN:\r\n        return 'Бег';\r\n      case ActiveConstants.INSURANCE_RISK_SWIMMING:\r\n        return 'Плавание';\r\n      case ActiveConstants.INSURANCE_RISK_COMPANY_LIQUIDATION:\r\n        return 'Ликвидация предприятия';\r\n      case ActiveConstants.INSURANCE_RISK_AGREEMENT_OF_PARTIES:\r\n        return 'Соглашение сторон';\r\n      case ActiveConstants.INSURANCE_RISK_CHANGE_OWNERSHIP:\r\n        return 'Смена собственника имущества организации';\r\n      case ActiveConstants.INSURANCE_RISK_EXTRAORDINARY_CIRCUMSTANCES:\r\n        return 'Чрезвычайные обстоятельства; препятствующие продолжению трудовых отношений';\r\n      case ActiveConstants.INSURANCE_RISK_DOWNSIZING_INCONSISTENCY:\r\n        return 'Сокращение штата несоответствием занимаемой должности или выполняемой работы';\r\n      case ActiveConstants.INSURANCE_RISK_EMPLOYERS_INITIATIVE:\r\n        return 'Инициатива работодателя при неудовлетворительном результате прохождения испытания; установленного трудовым договором';\r\n      case ActiveConstants.INSURANCE_RISK_DEATH_OF_EMPLOYER:\r\n        return 'Смерть работодателя — физического лица';\r\n      case ActiveConstants.INSURANCE_RISK_REINSTATEMENT_TO_WORK:\r\n        return 'Восстановление на работе лица; ранее выполнявшего эту работу';\r\n      case ActiveConstants.INSURANCE_RISK_TERMINATION_OF_ACCESS:\r\n        return 'Прекращение допуска к государственной тайне';\r\n      case ActiveConstants.INSURANCE_RISK_DOCTOR_ADVICE_PET:\r\n        return 'Консультации врача';\r\n      case ActiveConstants.INSURANCE_RISK_DIAGNOSTIC:\r\n        return 'Диагностические исследования';\r\n      case ActiveConstants.INSURANCE_RISK_PARAMEDIC:\r\n        return 'Фельдшерские процедуры';\r\n      case ActiveConstants.INSURANCE_RISK_SURGICAL:\r\n        return 'Хирургические операции';\r\n      case ActiveConstants.INSURANCE_RISK_MEDICATIONS:\r\n        return 'Лекарственные препараты и другие необходимые для лечения средства';\r\n      case ActiveConstants.INSURANCE_RISK_KEEPING_ANIMAL:\r\n        return 'Одни сутки содержания животного в стационаре по каждому обращению в клинику';\r\n      case ActiveConstants.INSURANCE_RISK_CAUSING_HARM_HEALTH:\r\n        return 'Причинение вреда жизни или здоровью';\r\n      case ActiveConstants.INSURANCE_RISK_CAUSING_PROPERTY_DAMAGE:\r\n        return 'Причинение имущественного вреда';\r\n      case ActiveConstants.INSURANCE_RISK_CONDUCTIONG_CASES_IN_JUDICAL:\r\n        return 'Ведение дел по страховому случаю в судебных органах';\r\n      case ActiveConstants.INSURANCE_RISK_EXPENSES_INCURRED:\r\n        return 'Расходы; произведенные страхователем в целях уменьшения убытков';\r\n    }\r\n  }\r\n\r\n\r\n  static getImage(item)\r\n  {\r\n    if (item)\r\n    {\r\n      switch (item.type_id)\r\n      {\r\n        case ActiveConstants.FLAT:\r\n          return <img className='flat' src={require('../assets/icons/house.svg').default}/>\r\n        case ActiveConstants.HOUSE:\r\n          return <img className='house' src={require('../assets/icons/renta.svg').default}/>\r\n        case ActiveConstants.CAR:\r\n          return <img className='car' src={require('../assets/icons/car.svg').default}/>\r\n        case ActiveConstants.MOTO:\r\n        case ActiveConstants.LAND:\r\n        case ActiveConstants.TECHNIC:\r\n        case ActiveConstants.JEWELRY:\r\n        case ActiveConstants.PERSONAL_TECHNIC:\r\n        case ActiveConstants.CUSTOM_PROPERTY:\r\n          return <img className='cash' src={require('../assets/icons/cash.svg').default}/>\r\n        case ActiveConstants.CAR_CREDIT:\r\n          return <img className='car' src={require('../assets/icons/car.svg').default}/>\r\n        case ActiveConstants.FLAT_CREDIT:\r\n          return <img className='flat' src={require('../assets/icons/house.svg').default}/>\r\n        case ActiveConstants.CREDIT:\r\n        case ActiveConstants.LOAN:\r\n        case ActiveConstants.ALIMONY:\r\n          return <img className='cash' src={require('../assets/icons/cash.svg').default}/>\r\n        case ActiveConstants.CUSTOM_OBLIGATION:\r\n          return <img className='cash' src={require('../assets/icons/cash.svg').default}/>\r\n        case ActiveConstants.CAR_INSURANCE:\r\n        case ActiveConstants.PROPERTY_INSURANCE:\r\n        case ActiveConstants.HEALTH_INSURANCE:\r\n        case ActiveConstants.VMI_INSURANCE:\r\n        case ActiveConstants.TRAVEL_INSURANCE:\r\n        case ActiveConstants.SPORT_INSURANCE:\r\n        case ActiveConstants.UNIT_LINKED_INSURANCE:\r\n        case ActiveConstants.LOSE_JOB_INSURANCE:\r\n        case ActiveConstants.RESPONSIBILITY_INSURANCE:\r\n        case ActiveConstants.PET_INSURANCE:\r\n        case ActiveConstants.CUSTOM_INSURANCE:\r\n          return <img className='cash' src={require('../assets/icons/shield.svg').default}/>\r\n        default:\r\n          return <img className='cash' src={require('../assets/icons/cash.svg').default}/>\r\n      }\r\n    }\r\n  }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,MAAM,MAAM,eAAe;AAElC,eAAe,MAAMC,eAAe,CACpC;EACE,OAAOC,OAAO,GAAG,CAAC;EAClB,OAAOC,QAAQ,GAAG,CAAC;EACnB,OAAOC,IAAI,GAAG,CAAC;EACf,OAAOC,QAAQ,GAAG,CAAC;EACnB,OAAOC,WAAW,GAAG,CAAC;EACtB,OAAOC,MAAM,GAAG,CAAC;EACjB,OAAOC,IAAI,GAAG,CAAC;EACf,OAAOC,IAAI,GAAG,EAAE;EAChB,OAAOC,cAAc,GAAG,EAAE;EAC1B,OAAOC,gBAAgB,GAAG,EAAE;EAC5B,OAAOC,cAAc,GAAG,EAAE;EAC1B,OAAOC,GAAG,GAAG,EAAE;EACf,OAAOC,WAAW,GAAG,EAAE;EACvB,OAAOC,WAAW,GAAG,EAAE;EACvB,OAAOC,4BAA4B,GAAG,EAAE;EACxC,OAAOC,cAAc,GAAG,EAAE;EAC1B,OAAOC,aAAa,GAAG,EAAE;EACzB,OAAOC,cAAc,GAAG,EAAE;EAC1B,OAAOC,YAAY,GAAG,EAAE;EACxB,OAAOC,aAAa,GAAG,EAAE;EACzB,OAAOC,aAAa,GAAG,EAAE;EACzB,OAAOC,UAAU,GAAG,EAAE;EACtB,OAAOC,kBAAkB,GAAG,EAAE;EAC9B,OAAOC,UAAU,GAAG,EAAE;EACtB,OAAOC,UAAU,GAAG,EAAE;EACtB,OAAOC,mBAAmB,GAAG,EAAE;EAC/B,OAAOC,YAAY,GAAG,EAAE;EACxB,OAAOC,UAAU,GAAG,EAAE;EACtB,OAAOC,aAAa,GAAG,EAAE;EACzB,OAAOC,WAAW,GAAG,EAAE;EACvB,OAAOC,YAAY,GAAG,EAAE;EAExB,OAAOC,cAAc,GAAG,EAAE;EAC1B,OAAOC,kBAAkB,GAAG,CAAC;EAC7B,OAAOC,eAAe,GAAG,CAAC;EAC1B,OAAOC,kBAAkB,GAAG,EAAE;EAC9B,OAAOC,mBAAmB,GAAG,EAAE;EAC/B,OAAOC,eAAe,GAAG,EAAE;EAC3B,OAAOC,oBAAoB,GAAG,EAAE;EAChC,OAAOC,iBAAiB,GAAG,EAAE;EAC7B,OAAOC,kBAAkB,GAAG,EAAE;EAC9B,OAAOC,kBAAkB,GAAG,EAAE;EAC9B,OAAOC,oBAAoB,GAAG,EAAE;EAChC,OAAOC,kBAAkB,GAAG,EAAE;EAE9B,OAAOC,IAAI,GAAG,CAAC;EACf,OAAOC,MAAM,GAAG,CAAC;EAEjB,OAAOC,MAAM,GAAG,IAAI;EACpB,OAAOC,aAAa,GAAG,IAAI;EAE3B,OAAOC,IAAI,GAAG,IAAI;EAClB,OAAOC,KAAK,GAAG,IAAI;EACnB,OAAOC,IAAI,GAAG,IAAI;EAElB,OAAOC,GAAG,GAAG,IAAI;EACjB,OAAOC,IAAI,GAAG,IAAI;EAClB,OAAOC,OAAO,GAAG,IAAI;EAErB,OAAOC,OAAO,GAAG,IAAI;EACrB,OAAOC,gBAAgB,GAAG,IAAI;EAC9B,OAAOC,eAAe,GAAG,IAAI;EAE7B,OAAOC,OAAO,GAAG,IAAI;EACrB,OAAOC,IAAI,GAAG,IAAI;EAClB,OAAOC,qBAAqB,GAAG,IAAI;EACnC,OAAOC,SAAS,GAAG,IAAI;EACvB,OAAOC,QAAQ,GAAG,IAAI;EACtB,OAAOC,MAAM,GAAG,IAAI;EACpB,OAAOC,GAAG,GAAG,IAAI;EACjB,OAAOC,GAAG,GAAG,IAAI;EACjB,OAAOC,UAAU,GAAG,IAAI;EACxB,OAAOC,IAAI,GAAG,IAAI;EAClB,OAAOC,cAAc,GAAG,IAAI;EAE5B,OAAOC,KAAK,GAAG,IAAI;EACnB,OAAOC,UAAU,GAAG,IAAI;EACxB,OAAOC,iBAAiB,GAAG,IAAI;EAC/B,OAAOC,yBAAyB,GAAG,IAAI;EACvC,OAAOC,aAAa,GAAG,IAAI;EAC3B,OAAOC,eAAe,GAAG,IAAI;EAC7B,OAAOC,WAAW,GAAG,IAAI;EACzB,OAAOC,MAAM,GAAG,IAAI;EACpB,OAAOC,OAAO,GAAG,IAAI;EAErB,OAAOC,QAAQ,GAAG,IAAI;EACtB,OAAOC,SAAS,GAAG,IAAI;EACvB,OAAOC,UAAU,GAAG,IAAI;EACxB,OAAOC,iBAAiB,GAAG,IAAI;EAC/B,OAAOC,UAAU,GAAG,IAAI;EACxB,OAAOC,WAAW,GAAG,IAAI;EACzB,OAAOC,MAAM,GAAG,IAAI;EACpB,OAAOC,OAAO,GAAG,IAAI;EACrB,OAAOC,IAAI,GAAG,IAAI;EAElB,OAAOC,YAAY,GAAG,KAAK;EAE3B,OAAOC,cAAc,GAAG,KAAK;EAC7B,OAAOC,UAAU,GAAG,KAAK;EACzB,OAAOC,SAAS,GAAG,KAAK;EACxB,OAAOC,eAAe,GAAG,KAAK;EAC9B,OAAOC,cAAc,GAAG,KAAK;EAC7B,OAAOC,YAAY,GAAG,KAAK;EAC3B,OAAOC,mBAAmB,GAAG,KAAK;EAClC,OAAOC,mBAAmB,GAAG,KAAK;EAClC,OAAOC,UAAU,GAAG,KAAK;EACzB,OAAOC,cAAc,GAAG,KAAK;EAC7B,OAAOC,eAAe,GAAG,KAAK;EAC9B,OAAOC,UAAU,GAAG,KAAK;EACzB,OAAOC,SAAS,GAAG,KAAK;EACxB,OAAOC,cAAc,GAAG,KAAK;EAC7B,OAAOC,WAAW,GAAG,KAAK;EAC1B,OAAOC,aAAa,GAAG,KAAK;EAC5B,OAAOC,YAAY,GAAG,IAAI;EAE1B,OAAOC,aAAa,GAAG,KAAK;EAC5B,OAAOC,YAAY,GAAG,KAAK;EAC3B,OAAOC,aAAa,GAAG,KAAK;EAC5B,OAAOC,WAAW,GAAG,KAAK;EAC1B,OAAOC,gBAAgB,GAAG,KAAK;EAC/B,OAAOC,cAAc,GAAG,KAAK;EAC7B,OAAOC,YAAY,GAAG,KAAK;EAC3B,OAAOC,aAAa,GAAG,IAAI;;EAE3B;EACA,OAAOC,aAAa,GAAG,KAAK;EAC5B,OAAOC,kBAAkB,GAAG,KAAK;EACjC,OAAOC,gBAAgB,GAAG,KAAK;EAC/B,OAAOC,aAAa,GAAG,KAAK;EAC5B,OAAOC,gBAAgB,GAAG,KAAK;EAC/B,OAAOC,eAAe,GAAG,KAAK;EAC9B,OAAOC,qBAAqB,GAAG,KAAK;EACpC,OAAOC,kBAAkB,GAAG,KAAK;EACjC,OAAOC,wBAAwB,GAAG,KAAK;EACvC,OAAOC,aAAa,GAAG,KAAK;EAC5B,OAAOC,gBAAgB,GAAG,KAAK;;EAE/B;AACF;AACA;;EAEE,OAAOC,OAAO,GAAG,CAAC;EAClB,OAAOC,QAAQ,GAAG,CAAC;EACnB,OAAOC,UAAU,GAAG,CAAC;EACrB,OAAOC,UAAU,GAAG,CAAC;EACrB,OAAOC,OAAO,GAAG,CAAC;EAClB,OAAOC,YAAY,GAAG,CAAC;EACvB,OAAOC,WAAW,GAAG,CAAC;EACtB,OAAOC,cAAc,GAAG,CAAC;EAEzB,OAAOC,mBAAmB,GAAG,CAC3BnI,eAAe,CAACoE,KAAK,EACrBpE,eAAe,CAAC+D,GAAG,EACnB/D,eAAe,CAACqE,UAAU,EAC1BrE,eAAe,CAAC4E,OAAO,EACvB5E,eAAe,CAACgE,GAAG,EACnBhE,eAAe,CAACmE,cAAc,EAE9BnE,eAAe,CAAC8D,MAAM,CACvB;EAED,OAAOsE,cAAc,GAAG,CACtBpI,eAAe,CAACgD,IAAI,EACpBhD,eAAe,CAACiD,KAAK,EACrBjD,eAAe,CAACkD,IAAI,EACpBlD,eAAe,CAACmD,GAAG,EACnBnD,eAAe,CAACoD,IAAI,EACpBpD,eAAe,CAACqD,OAAO,EACvBrD,eAAe,CAACsD,OAAO,EACvBtD,eAAe,CAACuD,gBAAgB,CACjC;EAED,OAAO8E,gBAAgB,GAAG,CACxBrI,eAAe,CAACgH,aAAa,EAC7BhH,eAAe,CAACiH,kBAAkB,EAClCjH,eAAe,CAACkH,gBAAgB,EAChClH,eAAe,CAACmH,aAAa,EAC7BnH,eAAe,CAACoH,gBAAgB,EAChCpH,eAAe,CAACqH,eAAe,EAC/BrH,eAAe,CAACsH,qBAAqB,EACrCtH,eAAe,CAACuH,kBAAkB,EAClCvH,eAAe,CAACwH,wBAAwB,EACxCxH,eAAe,CAACuE,yBAAyB,EACzCvE,eAAe,CAAC2D,qBAAqB,CACtC;EAED,OAAO2E,cAAc,GAAG,CACtBtI,eAAe,CAACoE,KAAK,CACtB;EAED,OAAOmE,YAAY,GAAG,CACpBvI,eAAe,CAACqE,UAAU,EAC1BrE,eAAe,CAACsE,iBAAiB,EACjCtE,eAAe,CAACwE,aAAa,EAC7BxE,eAAe,CAACyE,eAAe,CAChC;EAED,OAAO+D,UAAU,GAAG,CAClBxI,eAAe,CAAC0D,IAAI,EACpB1D,eAAe,CAACyD,OAAO,CACxB;EAED,OAAOgF,cAAc,GAAG,CACtBzI,eAAe,CAACuF,cAAc,EAC9BvF,eAAe,CAACwF,UAAU,EAC1BxF,eAAe,CAACyF,SAAS,EACzBzF,eAAe,CAAC0F,eAAe,EAC/B1F,eAAe,CAAC2F,cAAc,EAC9B3F,eAAe,CAAC4F,YAAY,EAC5B5F,eAAe,CAAC6F,mBAAmB,EACnC7F,eAAe,CAAC8F,mBAAmB,EACnC9F,eAAe,CAAC+F,UAAU,EAC1B/F,eAAe,CAACgG,cAAc,EAC9BhG,eAAe,CAACiG,eAAe,EAC/BjG,eAAe,CAACkG,UAAU,EAC1BlG,eAAe,CAACmG,SAAS,EACzBnG,eAAe,CAACoG,cAAc,EAC9BpG,eAAe,CAACqG,WAAW,EAC3BrG,eAAe,CAACsG,aAAa,CAC9B;EAED,OAAOoC,YAAY,GAAG,CACpB1I,eAAe,CAACwG,aAAa,EAC7BxG,eAAe,CAACyG,YAAY,EAC5BzG,eAAe,CAAC0G,aAAa,EAC7B1G,eAAe,CAAC2G,WAAW,EAC3B3G,eAAe,CAAC4G,gBAAgB,EAChC5G,eAAe,CAAC6G,cAAc,EAC9B7G,eAAe,CAAC8G,YAAY,CAC7B;EAGD,OAAO6B,YAAY,GAAG,CACpB3I,eAAe,CAACiF,UAAU,EAC1BjF,eAAe,CAACkF,WAAW,EAC3BlF,eAAe,CAACmF,MAAM,EACtBnF,eAAe,CAACoF,OAAO,EACvBpF,eAAe,CAACqF;EAChB;EAAA,CACD;EAED,OAAOuD,gBAAgB,GAAG,CACxB5I,eAAe,CAAC6E,QAAQ,EACxB7E,eAAe,CAAC8E,SAAS,EACzB9E,eAAe,CAAC+E,UAAU,CAC3B;EAGD,OAAO8D,aAAa,GAAG,CACrB7I,eAAe,CAAC4D,SAAS,EACzB5D,eAAe,CAACmE,cAAc,EAC9BnE,eAAe,CAAC6D,QAAQ,EACxB7D,eAAe,CAAC8D,MAAM,EACtB9D,eAAe,CAAC+D,GAAG,EACnB/D,eAAe,CAACgE,GAAG,EACnBhE,eAAe,CAACkE,IAAI,EACpBlE,eAAe,CAACiE,UAAU,EAC1BjE,eAAe,CAACoE,KAAK,EACrBpE,eAAe,CAAC0E,WAAW,EAC3B1E,eAAe,CAAC4E,OAAO,EACvB5E,eAAe,CAAC2E,MAAM,EACtB3E,eAAe,CAACqE,UAAU,EAC1BrE,eAAe,CAACsE,iBAAiB,EACjCtE,eAAe,CAACwE,aAAa,EAC7BxE,eAAe,CAACyE,eAAe,CAChC;EAED,OAAOqE,EAAE,GAAG,CAAC;EACb,OAAOC,YAAY,GAAG,CAAC;EACvB,OAAOC,sBAAsB,GAAG,CAAC;;EAEjC;AACF;AACA;EACE,OAAOC,UAAU,GAAG,WAAW;EAC/B,OAAOC,aAAa,GAAG,WAAW;EAClC,OAAOC,YAAY,GAAG,WAAW;EACjC,OAAOC,cAAc,GAAG,WAAW;EACnC,OAAOC,cAAc,GAAG,WAAW;EAEnC,OAAOC,QAAQ,GAAG,CAChBtJ,eAAe,CAACiJ,UAAU,EAC1BjJ,eAAe,CAACkJ,aAAa,EAC7BlJ,eAAe,CAACmJ,YAAY,EAC5BnJ,eAAe,CAACoJ,cAAc,EAC9BpJ,eAAe,CAACqJ,cAAc,CAC/B;EAED,OAAOE,KAAK,GAAG,CAAC;EAChB,OAAOC,MAAM,GAAG,CAAC;EACjB,OAAOC,OAAO,GAAG,CAAC;EAClB,OAAOC,OAAO,GAAG,CAAC;EAClB,OAAOC,QAAQ,GAAG,CAAC;EACnB,OAAOC,MAAM,GAAG,CAAC;EACjB,OAAOC,kBAAkB,GAAG,CAAC;EAC7B,OAAOC,mBAAmB,GAAG,CAAC;EAC9B,OAAOC,SAAS,GAAG,CAAC;EAEpB,OAAOC,MAAM,GAAG,CAAC;EACjB,OAAOC,YAAY,GAAG,CAAC;EACvB,OAAOC,KAAK,GAAG,CAAC;EAChB,OAAOC,MAAM,GAAG,CAAC;EACjB,OAAOC,aAAa,GAAG,CAAC;EACxB,OAAOC,GAAG,GAAG,CAAC;EACd;AACF;AACA;AACA;EACE,OAAOC,GAAG,GAAG,CAAC;EACd,OAAOC,GAAG,GAAG,CAAC;EACd,OAAOC,gBAAgB,GAAG,IAAI;EAC9B,OAAOC,qBAAqB,GAAG,IAAI;EACnC,OAAOC,gBAAgB,GAAG,IAAI;EAC9B,OAAOC,mBAAmB,GAAG,IAAI;EACjC,OAAOC,sBAAsB,GAAG,IAAI;EACpC,OAAOC,iBAAiB,GAAG,IAAI;EAC/B,OAAOC,+BAA+B,GAAG,IAAI;EAC7C,OAAOC,iBAAiB,GAAG,IAAI;EAC/B,OAAOC,iBAAiB,GAAG,IAAI;EAC/B,OAAOC,oBAAoB,GAAG,IAAI;EAClC,OAAOC,mBAAmB,GAAG,IAAI;EACjC,OAAOC,uBAAuB,GAAG,IAAI;EACrC,OAAOC,oBAAoB,GAAG,IAAI;EAClC,OAAOC,uBAAuB,GAAG,IAAI;EACrC,OAAOC,8BAA8B,GAAG,IAAI;EAC5C,OAAOC,oBAAoB,GAAG,IAAI;EAClC,OAAOC,oCAAoC,GAAG,IAAI;EAClD,OAAOC,2BAA2B,GAAG,IAAI;EACzC,OAAOC,+BAA+B,GAAG,IAAI;EAC7C,OAAOC,8BAA8B,GAAG,IAAI;EAC5C,OAAOC,4BAA4B,GAAG,IAAI;EAC1C,OAAOC,+BAA+B,GAAG,IAAI;EAC7C,OAAOC,8BAA8B,GAAG,IAAI;EAC5C,OAAOC,uBAAuB,GAAG,IAAI;EACrC,OAAOC,yBAAyB,GAAG,IAAI;EACvC,OAAOC,4BAA4B,GAAG,IAAI;EAC1C,OAAOC,uBAAuB,GAAG,IAAI;EACrC,OAAOC,wBAAwB,GAAG,IAAI;EACtC,OAAOC,6BAA6B,GAAG,IAAI;EAC3C,OAAOC,wBAAwB,GAAG,IAAI;EACtC,OAAOC,uBAAuB,GAAG,IAAI;EACrC,OAAOC,gCAAgC,GAAG,IAAI;EAC9C,OAAOC,uBAAuB,GAAG,IAAI;EACrC,OAAOC,+BAA+B,GAAG,IAAI;EAC7C,OAAOC,4BAA4B,GAAG,IAAI;EAC1C,OAAOC,2BAA2B,GAAG,IAAI;EACzC,OAAOC,mCAAmC,GAAG,IAAI;EACjD,OAAOC,gCAAgC,GAAG,IAAI;EAC9C,OAAOC,2BAA2B,GAAG,IAAI;EACzC,OAAOC,6BAA6B,GAAG,IAAI;EAC3C,OAAOC,qBAAqB,GAAG,IAAI;EACnC,OAAOC,+BAA+B,GAAG,IAAI;EAC7C,OAAOC,2BAA2B,GAAG,IAAI;EACzC,OAAOC,wBAAwB,GAAG,IAAI;EACtC,OAAOC,iCAAiC,GAAG,IAAI;EAC/C,OAAOC,6BAA6B,GAAG,IAAI;EAC3C,OAAOC,kBAAkB,GAAG,IAAI;EAChC,OAAOC,uBAAuB,GAAG,IAAI;EACrC,OAAOC,kCAAkC,GAAG,IAAI;EAChD,OAAOC,mCAAmC,GAAG,IAAI;EACjD,OAAOC,+BAA+B,GAAG,IAAI;EAC7C,OAAOC,0CAA0C,GAAG,IAAI;EACxD,OAAOC,uCAAuC,GAAG,IAAI;EACrD,OAAOC,mCAAmC,GAAG,IAAI;EACjD,OAAOC,gCAAgC,GAAG,IAAI;EAC9C,OAAOC,oCAAoC,GAAG,IAAI;EAClD,OAAOC,oCAAoC,GAAG,IAAI;EAClD,OAAOC,kCAAkC,GAAG,IAAI;EAChD,OAAOC,sCAAsC,GAAG,IAAI;EACpD,OAAOC,2CAA2C,GAAG,IAAI;EACzD,OAAOC,gCAAgC,GAAG,IAAI;EAC9C;EACA,OAAOC,gCAAgC,GAAG,IAAI;EAC9C,OAAOC,yBAAyB,GAAG,IAAI;EACvC,OAAOC,wBAAwB,GAAG,IAAI;EACtC,OAAOC,uBAAuB,GAAG,IAAI;EACrC,OAAOC,0BAA0B,GAAG,IAAI;EACxC,OAAOC,6BAA6B,GAAG,IAAI;EAE3C,OAAOC,OAAOA,CAACC,IAAI,EACnB,CAEA;EAEA,OAAOC,KAAKA,CAAA,EACZ;IACE,OAAO,CACL;MAACC,EAAE,EAAE9O,eAAe,CAAC8C,MAAM;MAAEiM,IAAI,EAAE;IAAE,CAAC,EACtC;MAACD,EAAE,EAAE9O,eAAe,CAACwG,aAAa;MAAEuI,IAAI,EAAE;IAAE,CAAC,EAC7C;MAACD,EAAE,EAAE9O,eAAe,CAACyG,YAAY;MAAEsI,IAAI,EAAE;IAAE,CAAC,EAC5C;MAACD,EAAE,EAAE9O,eAAe,CAAC0G,aAAa;MAAEqI,IAAI,EAAE;IAAE,CAAC,EAC7C;MAACD,EAAE,EAAE9O,eAAe,CAAC0G,aAAa;MAAEqI,IAAI,EAAE;IAAE,CAAC,EAC7C;MAACD,EAAE,EAAE9O,eAAe,CAAC2G,WAAW;MAAEoI,IAAI,EAAE;IAAE,CAAC,EAC3C;MAACD,EAAE,EAAE9O,eAAe,CAAC4G,gBAAgB;MAAEmI,IAAI,EAAE;IAAE,CAAC,EAChD;MAACD,EAAE,EAAE9O,eAAe,CAAC6G,cAAc;MAAEkI,IAAI,EAAE;IAAE,CAAC,EAC9C;MAACD,EAAE,EAAE9O,eAAe,CAAC8G,YAAY;MAAEiI,IAAI,EAAE;IAAE,CAAC,EAC5C;MAACD,EAAE,EAAE9O,eAAe,CAAC+G,aAAa;MAAEgI,IAAI,EAAE;IAAE,CAAC,EAC7C;MAACD,EAAE,EAAE9O,eAAe,CAAC+C,aAAa;MAAEgM,IAAI,EAAE;IAAE,CAAC,EAC7C;MAACD,EAAE,EAAE9O,eAAe,CAACgD,IAAI;MAAE+L,IAAI,EAAE;IAAc,CAAC,EAChD;MAACD,EAAE,EAAE9O,eAAe,CAACiD,KAAK;MAAE8L,IAAI,EAAE;IAAc,CAAC,EACjD;MAACD,EAAE,EAAE9O,eAAe,CAACkD,IAAI;MAAE6L,IAAI,EAAE;IAAc,CAAC,EAChD;MAACD,EAAE,EAAE9O,eAAe,CAACmD,GAAG;MAAE4L,IAAI,EAAE;IAAS,CAAC,EAC1C;MAACD,EAAE,EAAE9O,eAAe,CAACoD,IAAI;MAAE2L,IAAI,EAAE;IAAS,CAAC,EAC3C;MAACD,EAAE,EAAE9O,eAAe,CAACqD,OAAO;MAAE0L,IAAI,EAAE;IAAS,CAAC,EAC9C;MAACD,EAAE,EAAE9O,eAAe,CAACsD,OAAO;MAAEyL,IAAI,EAAE;IAAqB,CAAC,EAC1D;MAACD,EAAE,EAAE9O,eAAe,CAACuD,gBAAgB;MAAEwL,IAAI,EAAE;IAAS,CAAC,EACvD;MAACD,EAAE,EAAE9O,eAAe,CAACwD,eAAe;MAAEuL,IAAI,EAAE;IAAW,CAAC,EACxD;MAACD,EAAE,EAAE9O,eAAe,CAACyD,OAAO;MAAEsL,IAAI,EAAE;IAAS,CAAC,EAC9C;MAACD,EAAE,EAAE9O,eAAe,CAAC0D,IAAI;MAAEqL,IAAI,EAAE;IAAE,CAAC,EACpC;MAACD,EAAE,EAAE9O,eAAe,CAAC2D,qBAAqB;MAAEoL,IAAI,EAAE;IAAE,CAAC,EACrD;MAACD,EAAE,EAAE9O,eAAe,CAAC4D,SAAS;MAAEmL,IAAI,EAAE;IAAQ,CAAC,EAC/C;MAACD,EAAE,EAAE9O,eAAe,CAACmE,cAAc;MAAE4K,IAAI,EAAE;IAAqB,CAAC,EACjE;MAACD,EAAE,EAAE9O,eAAe,CAAC6D,QAAQ;MAAEkL,IAAI,EAAE;IAAQ,CAAC,EAC9C;MAACD,EAAE,EAAE9O,eAAe,CAAC8D,MAAM;MAAEiL,IAAI,EAAE;IAAc,CAAC,EAClD;MAACD,EAAE,EAAE9O,eAAe,CAAC+D,GAAG;MAAEgL,IAAI,EAAE;IAAK,CAAC,EACtC;MAACD,EAAE,EAAE9O,eAAe,CAACgE,GAAG;MAAE+K,IAAI,EAAE;IAAK,CAAC,EACtC;MAACD,EAAE,EAAE9O,eAAe,CAACyG,YAAY;MAAEsI,IAAI,EAAE;IAAqB,CAAC,EAC/D;MAACD,EAAE,EAAE9O,eAAe,CAACiE,UAAU;MAAE8K,IAAI,EAAE;IAAY,CAAC,EACpD;MAACD,EAAE,EAAE9O,eAAe,CAACoE,KAAK;MAAE2K,IAAI,EAAE;IAAO,CAAC,EAC1C;MAACD,EAAE,EAAE9O,eAAe,CAAC0E,WAAW;MAAEqK,IAAI,EAAE;IAAyC,CAAC,EAClF;MAACD,EAAE,EAAE9O,eAAe,CAAC4E,OAAO;MAAEmK,IAAI,EAAE;IAAS,CAAC,EAC9C;MAACD,EAAE,EAAE9O,eAAe,CAAC2E,MAAM;MAAEoK,IAAI,EAAE;IAAQ,CAAC,EAC5C;MAACD,EAAE,EAAE9O,eAAe,CAACqE,UAAU;MAAE0K,IAAI,EAAE;IAAW,CAAC,EACnD;MAACD,EAAE,EAAE9O,eAAe,CAACsE,iBAAiB;MAAEyK,IAAI,EAAE;IAAsB,CAAC,EACrE;MAACD,EAAE,EAAE9O,eAAe,CAACuE,yBAAyB;MAAEwK,IAAI,EAAE;IAAK,CAAC,EAC5D;MAACD,EAAE,EAAE9O,eAAe,CAACwE,aAAa;MAAEuK,IAAI,EAAE;IAAe,CAAC,EAC1D;MAACD,EAAE,EAAE9O,eAAe,CAACyE,eAAe;MAAEsK,IAAI,EAAE;IAAoB,CAAC,EACjE;MAACD,EAAE,EAAE9O,eAAe,CAAC6E,QAAQ;MAAEkK,IAAI,EAAE;IAAE,CAAC,EACxC;MAACD,EAAE,EAAE9O,eAAe,CAAC8E,SAAS;MAAEiK,IAAI,EAAE;IAAE,CAAC,EACzC;MAACD,EAAE,EAAE9O,eAAe,CAAC+E,UAAU;MAAEgK,IAAI,EAAE;IAAE,CAAC,EAC1C;MAACD,EAAE,EAAE9O,eAAe,CAACiF,UAAU;MAAE8J,IAAI,EAAE;IAAQ,CAAC,EAChD;MAACD,EAAE,EAAE9O,eAAe,CAACkF,WAAW;MAAE6J,IAAI,EAAE;IAAQ,CAAC,EACjD;MAACD,EAAE,EAAE9O,eAAe,CAACmF,MAAM;MAAE4J,IAAI,EAAE;IAAQ,CAAC,EAC5C;MAACD,EAAE,EAAE9O,eAAe,CAACqF,IAAI;MAAE0J,IAAI,EAAE;IAAM,CAAC,EACxC;MAACD,EAAE,EAAE9O,eAAe,CAACoF,OAAO;MAAE2J,IAAI,EAAE;IAAU,CAAC,EAC/C;MAACD,EAAE,EAAE9O,eAAe,CAACuG,YAAY;MAAEwI,IAAI,EAAE;IAAE,CAAC,EAC5C;MAACD,EAAE,EAAE9O,eAAe,CAACgF,iBAAiB;MAAE+J,IAAI,EAAE;IAAE,CAAC,EACjD;MAACD,EAAE,EAAE9O,eAAe,CAACsF,YAAY;MAAEyJ,IAAI,EAAE;IAAQ,CAAC,CACnD;EACH;EAEA,OAAOC,MAAMA,CAAA,EACb;IACE,OAAO;IACL;IACA;MAACF,EAAE,EAAE9O,eAAe,CAACqK,GAAG;MAAE0E,IAAI,EAAE;IAAc,CAAC,EAC/C;MAACD,EAAE,EAAE9O,eAAe,CAACoK,aAAa;MAAE2E,IAAI,EAAE;IAAuD,CAAC,EAClG;MAACD,EAAE,EAAE9O,eAAe,CAACmK,MAAM;MAAE4E,IAAI,EAAE;IAAyD,CAAC,CAC9F;EACH;EAEA,OAAOE,YAAYA,CAAA,EACnB;IACE,OAAO,CACL;MAACH,EAAE,EAAE9O,eAAe,CAAC4C,IAAI;MAAEmM,IAAI,EAAE;IAAS,CAAC,EAC3C;MAACD,EAAE,EAAE9O,eAAe,CAAC6C,MAAM;MAAEkM,IAAI,EAAE;IAAa,CAAC,CAClD;EACH;EAEA,OAAOG,kBAAkBA,CAACJ,EAAE,EAC5B;IACE,IAAIK,IAAI,GAAG,IAAI;IAEfnP,eAAe,CAACiP,YAAY,CAAC,CAAC,CAACG,GAAG,CAAER,IAAI,IACxC;MACE,IAAIA,IAAI,CAACE,EAAE,KAAKA,EAAE,EAClB;QACEK,IAAI,GAAGP,IAAI;MACb;IAGF,CAAC,CAAC;IAEF,OAAOO,IAAI;EACb;EAEA,OAAOE,OAAOA,CAAA,EACd;IACE,OAAO;IACL;IACA;MAACP,EAAE,EAAE9O,eAAe,CAACsK,GAAG;MAAEyE,IAAI,EAAE;IAAS,CAAC,EAC1C;MAACD,EAAE,EAAE9O,eAAe,CAACuK,GAAG;MAAEwE,IAAI,EAAE;IAA4B,CAAC,CAC9D;EACH;EAEA,OAAOO,OAAOA,CAAA,EACd;IACE,OAAO,CACL;MAACR,EAAE,EAAE9O,eAAe,CAACyJ,OAAO;MAAEsF,IAAI,EAAE;IAAO,CAAC,EAC5C;MAACD,EAAE,EAAE9O,eAAe,CAAC0J,OAAO;MAAEqF,IAAI,EAAE;IAAS,CAAC,EAC9C;MAACD,EAAE,EAAE9O,eAAe,CAAC2J,QAAQ;MAAEoF,IAAI,EAAE;IAAS,CAAC,EAC/C;MAACD,EAAE,EAAE9O,eAAe,CAAC4J,MAAM;MAAEmF,IAAI,EAAE;IAAK,CAAC,CAC1C;EACH;EAEA,OAAOQ,QAAQA,CAAA,EACf;IACE,OAAO,CACL;MAACT,EAAE,EAAE9O,eAAe,CAACuJ,KAAK;MAAEwF,IAAI,EAAE;IAAM,CAAC,EACzC;MAACD,EAAE,EAAE9O,eAAe,CAACwJ,MAAM;MAAEuF,IAAI,EAAE;IAAQ,CAAC,EAC5C;MAACD,EAAE,EAAE9O,eAAe,CAACyJ,OAAO;MAAEsF,IAAI,EAAE;IAAO,CAAC,EAC5C;MAACD,EAAE,EAAE9O,eAAe,CAAC0J,OAAO;MAAEqF,IAAI,EAAE;IAAS,CAAC,EAC9C;MAACD,EAAE,EAAE9O,eAAe,CAAC2J,QAAQ;MAAEoF,IAAI,EAAE;IAAS,CAAC,EAC/C;MAACD,EAAE,EAAE9O,eAAe,CAAC4J,MAAM;MAAEmF,IAAI,EAAE;IAAK,CAAC,EACzC;MAACD,EAAE,EAAE9O,eAAe,CAAC6J,kBAAkB;MAAEkF,IAAI,EAAE;IAAyC,CAAC,EACzF;MAACD,EAAE,EAAE9O,eAAe,CAAC8J,mBAAmB;MAAEiF,IAAI,EAAE;IAAwC,CAAC,CAC1F;EACH;;EAEA;AACF;AACA;AACA;AACA;EACE,OAAOS,YAAYA,CAACV,EAAE,EACtB;IACE,IAAIW,KAAK,GAAG,IAAI;IAEhBzP,eAAe,CAACgP,MAAM,CAAC,CAAC,CAACI,GAAG,CAAER,IAAI,IAClC;MACE,IAAIA,IAAI,CAACE,EAAE,KAAKA,EAAE,EAClB;QACEW,KAAK,GAAGb,IAAI;MACd;IAGF,CAAC,CAAC;IAEF,OAAOa,KAAK;EACd;;EAEA;AACF;AACA;AACA;AACA;EACE,OAAOC,aAAaA,CAACZ,EAAE,EACvB;IACE,IAAIW,KAAK,GAAG,IAAI;IAEhBzP,eAAe,CAACqP,OAAO,CAAC,CAAC,CAACD,GAAG,CAAER,IAAI,IACnC;MACE,IAAIA,IAAI,CAACE,EAAE,KAAKA,EAAE,EAClB;QACEW,KAAK,GAAGb,IAAI;MACd;IAGF,CAAC,CAAC;IAEF,OAAOa,KAAK;EACd;;EAEA;AACF;AACA;AACA;AACA;EACE,OAAOE,WAAWA,CAACb,EAAE,EACrB;IACE,IAAIK,IAAI,GAAG,IAAI;IAEfnP,eAAe,CAAC6O,KAAK,CAAC,CAAC,CAACO,GAAG,CAAER,IAAI,IACjC;MACE,IAAIA,IAAI,CAACE,EAAE,KAAKA,EAAE,EAClB;QACEK,IAAI,GAAGP,IAAI;MACb;IAGF,CAAC,CAAC;IAEF,OAAOO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;EACE,OAAOS,iBAAiBA,CAACd,EAAE,EAC3B;IACE,IAAIK,IAAI,GAAG,IAAI;IAEfnP,eAAe,CAACuP,QAAQ,CAAC,CAAC,CAACH,GAAG,CAAER,IAAI,IACpC;MACE,IAAIA,IAAI,CAACE,EAAE,KAAKA,EAAE,EAClB;QACEK,IAAI,GAAGP,IAAI;MACb;IAGF,CAAC,CAAC;IAEF,OAAOO,IAAI;EACb;EAEA,OAAOU,iBAAiBA,CAACjB,IAAI,EAC7B;IACE,IAAI5O,eAAe,CAAC8P,SAAS,CAAClB,IAAI,CAACmB,OAAO,CAAC,EAC3C;MACE,IAAInB,IAAI,CAACoB,eAAe,EACxB;QACE,IAAIC,QAAQ,GAAGnQ,iBAAiB,CAACoQ,eAAe,CAACtB,IAAI,CAACoB,eAAe,CAAC;QAEtE,OAAOC,QAAQ,GAAGnQ,iBAAiB,CAACqQ,qBAAqB,CAACF,QAAQ,CAACG,IAAI,CAAC,GAAG,EAAE;MAC/E;IACF;IAEA,OAAO,EAAE;EACX;EAEA,OAAOC,WAAWA,CAACzB,IAAI,EACvB;IACE,IAAI5O,eAAe,CAAC8P,SAAS,CAAClB,IAAI,CAACmB,OAAO,CAAC,EAC3C;MACE,IAAInB,IAAI,CAAC0B,YAAY,EACrB;QACE,IAAIC,IAAI,GAAGxQ,MAAM,CAAC6O,IAAI,CAAC0B,YAAY,EAAE,YAAY,CAAC;QAElD,IAAIC,IAAI,CAACC,OAAO,CAAC,CAAC,EAClB;UACE,OAAOD,IAAI,CAACE,MAAM,CAAC,MAAM,CAAC;QAC5B;MACF;IACF;IAEA,OAAO,8BAA8B;EACvC;;EAEA;AACF;AACA;AACA;AACA;EACE,OAAOC,sBAAsBA,CAACC,IAAI,EAClC;IACE,IAAIA,IAAI,EACR;MACEA,IAAI,GAAGA,IAAI,CAACC,WAAW,CAAC,CAAC;MAEzB,IAAID,IAAI,CAACE,QAAQ,CAAC,SAAS,CAAC,IAAIF,IAAI,CAACE,QAAQ,CAAC,aAAa,CAAC,IAAIF,IAAI,CAACE,QAAQ,CAAC,aAAa,CAAC,EAC5F;QACE,OAAO,SAAS;MAClB,CAAC,MAAM,IAAIF,IAAI,CAACE,QAAQ,CAAC,KAAK,CAAC,IAAIF,IAAI,CAACE,QAAQ,CAAC,aAAa,CAAC,EAC/D;QACE,OAAO,KAAK;MACd,CAAC,MAAM,IAAIF,IAAI,CAACE,QAAQ,CAAC,SAAS,CAAC,IAAIF,IAAI,CAACE,QAAQ,CAAC,aAAa,CAAC,EACnE;QACE,OAAO,SAAS;MAClB,CAAC,MAAM,IAAIF,IAAI,CAACE,QAAQ,CAAC,QAAQ,CAAC,IAAIF,IAAI,CAACE,QAAQ,CAAC,OAAO,CAAC,EAC5D;QACE,OAAO,QAAQ;MACjB,CAAC,MAAM,IAAIF,IAAI,CAACE,QAAQ,CAAC,QAAQ,CAAC,EAClC;QACE,OAAO,QAAQ;MACjB,CAAC,MAAM,IAAIF,IAAI,CAACE,QAAQ,CAAC,SAAS,CAAC,EACnC;QACE,OAAO,SAAS;MAClB,CAAC,MAAM,IAAIF,IAAI,CAACE,QAAQ,CAAC,aAAa,CAAC,EACvC;QACE,OAAO,YAAY;MACrB,CAAC,MAAM,IAAIF,IAAI,CAACE,QAAQ,CAAC,mBAAmB,CAAC,IAAIF,IAAI,CAACE,QAAQ,CAAC,MAAM,CAAC,EACtE;QACE,OAAO,MAAM;MACf,CAAC,MAAM,IAAIF,IAAI,CAACE,QAAQ,CAAC,uBAAuB,CAAC,EACjD;QACE,OAAO,MAAM;MACf,CAAC,MACD,CACA;IACF;;IAEA;IACA;IACA;IACA;;IAGA,OAAO,eAAe;EACxB;;EAEA;AACF;AACA;AACA;AACA;EACE,OAAOC,gBAAgBA,CAAClC,IAAI,EAC5B;IACE,OAAO5O,eAAe,CAAC0Q,sBAAsB,CAAC7Q,MAAM,CAAC8O,OAAO,CAACC,IAAI,CAAC,CAAC;EACrE;;EAEA;AACF;AACA;AACA;AACA;EACE,OAAOmC,mBAAmBA,CAACnC,IAAI,EAC/B;IACE,IAAIA,IAAI,EACR;MACE,QAAQA,IAAI,CAACmB,OAAO;QAElB,KAAK/P,eAAe,CAACgD,IAAI;QACzB,KAAKhD,eAAe,CAACiD,KAAK;QAC1B,KAAKjD,eAAe,CAACkD,IAAI;QACzB,KAAKlD,eAAe,CAACmD,GAAG;QACxB,KAAKnD,eAAe,CAACoD,IAAI;QACzB,KAAKpD,eAAe,CAACqD,OAAO;QAC5B,KAAKrD,eAAe,CAACsD,OAAO;QAC5B,KAAKtD,eAAe,CAACuD,gBAAgB;QACrC,KAAKvD,eAAe,CAACwD,eAAe;UAClC,OAAO,WAAW;QACpB,KAAKxD,eAAe,CAAC6D,QAAQ;UAC3B,OAAO,QAAQ;QACjB,KAAK7D,eAAe,CAAC8D,MAAM;UACzB,OAAO,cAAc;QACvB,KAAK9D,eAAe,CAACoE,KAAK;UACxB,OAAO,OAAO;QAChB,KAAKpE,eAAe,CAAC4E,OAAO;UAC1B,OAAO,SAAS;QAClB,KAAK5E,eAAe,CAAC+D,GAAG;UACtB,OAAO,oCAAoC;QAC7C,KAAK/D,eAAe,CAACgE,GAAG;UACtB,OAAO,kCAAkC;QAC3C,KAAKhE,eAAe,CAACkE,IAAI;UACvB,OAAO,qBAAqB;QAC9B,KAAKlE,eAAe,CAACiE,UAAU;UAC7B,OAAO,WAAW;QACpB,KAAKjE,eAAe,CAACqE,UAAU;UAC7B,OAAO,WAAW;QACpB,KAAKrE,eAAe,CAACsE,iBAAiB;UACpC,OAAO,qBAAqB;QAC9B,KAAKtE,eAAe,CAACuE,yBAAyB;UAC5C,OAAO,KAAK;QACd,KAAKvE,eAAe,CAACwE,aAAa;UAChC,OAAO,eAAe;QACxB,KAAKxE,eAAe,CAACyE,eAAe;UAClC,OAAO,oBAAoB;QAC7B,KAAKzE,eAAe,CAACsF,YAAY;UAC/B,OAAO,QAAQ;MACnB;MAEA,OAAOsJ,IAAI,CAACoC,SAAS;IACvB;IAEA,OAAO,EAAE;EACX;;EAEA;AACF;AACA;AACA;AACA;EACE,OAAOC,kBAAkBA,CAACrC,IAAI,EAC9B;IACE,QAAQA,IAAI,CAACmB,OAAO;MAElB,KAAK/P,eAAe,CAAC8C,MAAM;MAC3B,KAAK9C,eAAe,CAACgD,IAAI;MACzB,KAAKhD,eAAe,CAACiD,KAAK;MAC1B,KAAKjD,eAAe,CAACkD,IAAI;MACzB,KAAKlD,eAAe,CAACmD,GAAG;MACxB,KAAKnD,eAAe,CAACoD,IAAI;MACzB,KAAKpD,eAAe,CAACqD,OAAO;MAC5B,KAAKrD,eAAe,CAACsD,OAAO;MAC5B,KAAKtD,eAAe,CAACuD,gBAAgB;MACrC,KAAKvD,eAAe,CAACyD,OAAO;MAC5B,KAAKzD,eAAe,CAAC0D,IAAI;MACzB,KAAK1D,eAAe,CAAC2D,qBAAqB;MAC1C,KAAK3D,eAAe,CAACuE,yBAAyB;MAC9C,KAAKvE,eAAe,CAAC4D,SAAS;MAC9B,KAAK5D,eAAe,CAAC8D,MAAM;MAC3B,KAAK9D,eAAe,CAACkE,IAAI;MACzB,KAAKlE,eAAe,CAACiE,UAAU;MAC/B,KAAKjE,eAAe,CAACsE,iBAAiB;MACtC,KAAKtE,eAAe,CAACwE,aAAa;MAClC,KAAKxE,eAAe,CAACyE,eAAe;MACpC,KAAKzE,eAAe,CAAC0E,WAAW;MAChC,KAAK1E,eAAe,CAAC2E,MAAM;MAC3B,KAAK3E,eAAe,CAAC6E,QAAQ;MAC7B,KAAK7E,eAAe,CAAC8E,SAAS;MAC9B,KAAK9E,eAAe,CAAC+E,UAAU;MAC/B,KAAK/E,eAAe,CAACiF,UAAU;MAC/B,KAAKjF,eAAe,CAACkF,WAAW;MAChC,KAAKlF,eAAe,CAACmF,MAAM;MAC3B,KAAKnF,eAAe,CAACuF,cAAc;MACnC,KAAKvF,eAAe,CAACwF,UAAU;MAC/B,KAAKxF,eAAe,CAACyF,SAAS;MAC9B,KAAKzF,eAAe,CAAC0F,eAAe;MACpC,KAAK1F,eAAe,CAAC2F,cAAc;MACnC,KAAK3F,eAAe,CAAC4F,YAAY;MACjC,KAAK5F,eAAe,CAAC6F,mBAAmB;MACxC,KAAK7F,eAAe,CAAC8F,mBAAmB;MACxC,KAAK9F,eAAe,CAAC+F,UAAU;MAC/B,KAAK/F,eAAe,CAACgG,cAAc;MACnC,KAAKhG,eAAe,CAACiG,eAAe;MACpC,KAAKjG,eAAe,CAACkG,UAAU;MAC/B,KAAKlG,eAAe,CAACmG,SAAS;MAC9B,KAAKnG,eAAe,CAACoG,cAAc;MACnC,KAAKpG,eAAe,CAACqG,WAAW;MAChC,KAAKrG,eAAe,CAACsG,aAAa;MAClC,KAAKtG,eAAe,CAACwG,aAAa;MAClC,KAAKxG,eAAe,CAACyG,YAAY;MACjC,KAAKzG,eAAe,CAAC0G,aAAa;MAClC,KAAK1G,eAAe,CAAC2G,WAAW;MAChC,KAAK3G,eAAe,CAAC4G,gBAAgB;MACrC,KAAK5G,eAAe,CAAC6G,cAAc;MACnC,KAAK7G,eAAe,CAAC8G,YAAY;MACjC,KAAK9G,eAAe,CAAC+G,aAAa;MAClC,KAAK/G,eAAe,CAAC+C,aAAa;MAClC,KAAK/C,eAAe,CAACwD,eAAe;MACpC,KAAKxD,eAAe,CAACuG,YAAY;MACjC,KAAKvG,eAAe,CAACgF,iBAAiB;MACtC,KAAKhF,eAAe,CAACkR,cAAc;MACnC,KAAKlR,eAAe,CAACkH,gBAAgB;MACrC,KAAKlH,eAAe,CAACuH,kBAAkB;MACvC,KAAKvH,eAAe,CAAC0H,gBAAgB;MACrC,KAAK1H,eAAe,CAACyH,aAAa;MAClC,KAAKzH,eAAe,CAACiH,kBAAkB;MACvC,KAAKjH,eAAe,CAACwH,wBAAwB;MAC7C,KAAKxH,eAAe,CAACqH,eAAe;MACpC,KAAKrH,eAAe,CAACoH,gBAAgB;MACrC,KAAKpH,eAAe,CAACsH,qBAAqB;MAC1C,KAAKtH,eAAe,CAACmH,aAAa;QAChC,OAAOyH,IAAI,CAACG,IAAI;MAClB,KAAK/O,eAAe,CAAC6D,QAAQ;QAC3B,IAAIsN,OAAO,GAAGvC,IAAI,CAACA,IAAI;QAEvB,IAAIuC,OAAO,EACX;UACE,OAAOvC,IAAI,CAACG,IAAI,GAAG,GAAG,GAAGoC,OAAO,CAACpC,IAAI;QACvC;QACA,OAAOH,IAAI,CAACG,IAAI;MAElB,KAAK/O,eAAe,CAACoE,KAAK;MAC1B,KAAKpE,eAAe,CAAC+D,GAAG;MACxB,KAAK/D,eAAe,CAACqE,UAAU;MAC/B,KAAKrE,eAAe,CAAC4E,OAAO;MAC5B,KAAK5E,eAAe,CAACgE,GAAG;MACxB,KAAKhE,eAAe,CAACmE,cAAc;QACjC,IAAIiN,OAAO,GAAGxC,IAAI,CAACA,IAAI;QAEvB,IAAIwC,OAAO,EACX;UACE,IAAGA,OAAO,CAACC,MAAM,KAAKrR,eAAe,CAACmJ,YAAY,EAClD;YACE,OAAOiI,OAAO,CAACrC,IAAI,GAAG,GAAG,GAAGqC,OAAO,CAACE,KAAK,GAAG,GAAG,GAAGF,OAAO,CAACG,IAAI;UAChE;UAEA,OAAOH,OAAO,CAACrC,IAAI,GAAG,GAAG,GAAGqC,OAAO,CAACE,KAAK;QAC3C;QACA,OAAO1C,IAAI,CAACG,IAAI;IACpB;EACF;;EAEA;AACF;AACA;AACA;AACA;EACE,OAAOyC,oBAAoBA,CAAC5C,IAAI,EAChC;IACE,OAAOA,IAAI,CAAC6C,eAAe,GAAG7C,IAAI,CAAC6C,eAAe,GAAG,eAAe;EACtE;EAEA,OAAOC,cAAcA,CAACC,OAAO,EAC7B;IACE,IAAGA,OAAO,EACV;MACE,IAAGA,OAAO,CAAC5C,IAAI,EACf;QACE,OAAO4C,OAAO,CAAC5C,IAAI;MACrB;MAEA,IAAG4C,OAAO,CAACC,OAAO,EAClB;QACE,OAAOD,OAAO,CAACE,SAAS;MAC1B;;MAEA;MACA,IAAGF,OAAO,CAAC5B,OAAO,KAAKnQ,gBAAgB,CAACkS,IAAI,EAC5C;QACE,OAAOlS,gBAAgB,CAACmS,UAAU,CAACJ,OAAO,CAAC;MAC7C;IACF;EACF;;EAEA;AACF;AACA;AACA;AACA;EACE,OAAOK,sBAAsBA,CAACpD,IAAI,EAClC;IACE,IAAI5O,eAAe,CAAC8P,SAAS,CAAClB,IAAI,CAACmB,OAAO,CAAC,EAC3C;MACE,IAAInB,IAAI,EAAEqD,UAAU,EAAEC,MAAM,EAC5B;QACE,IAAItD,IAAI,CAACqD,UAAU,CAAC,CAAC,CAAC,IAAIrD,IAAI,CAACqD,UAAU,CAAC,CAAC,CAAC,CAACE,eAAe,EAC5D;UACE,IAAIR,OAAO,GAAG/R,gBAAgB,CAACwS,wBAAwB,CAACxD,IAAI,CAACqD,UAAU,CAAC,CAAC,CAAC,CAACE,eAAe,CAAC;UAE3F,OAAOnS,eAAe,CAAC0R,cAAc,CAACC,OAAO,CAAC;QAChD;MACF;MAEA,IAAI/C,IAAI,CAACyD,WAAW,EAAEH,MAAM,EAC5B;QACE,IAAItD,IAAI,CAACyD,WAAW,CAAC,CAAC,CAAC,IAAIzD,IAAI,CAACyD,WAAW,CAAC,CAAC,CAAC,CAACF,eAAe,EAC9D;UACE;UACA,IAAIvD,IAAI,CAACmB,OAAO,KAAK/P,eAAe,CAAC6D,QAAQ,EAC7C;YACE,IAAI8N,OAAO,GAAG/R,gBAAgB,CAACwS,wBAAwB,CAACxD,IAAI,CAACyD,WAAW,CAAC,CAAC,CAAC,CAACC,aAAa,CAAC;YAE1F,OAAOtS,eAAe,CAAC0R,cAAc,CAACC,OAAO,CAAC;UAChD,CAAC,MACD;YACE,IAAIA,OAAO,GAAG/R,gBAAgB,CAACwS,wBAAwB,CAACxD,IAAI,CAACyD,WAAW,CAAC,CAAC,CAAC,CAACF,eAAe,CAAC;YAE5F,OAAOnS,eAAe,CAAC0R,cAAc,CAACC,OAAO,CAAC;UAChD;QACF;MACF;IACF,CAAC,MACD;MACE,IAAI/C,IAAI,CAAC2D,cAAc,EACvB;QACE,IAAIZ,OAAO,GAAG/R,gBAAgB,CAACwS,wBAAwB,CAACxD,IAAI,CAAC2D,cAAc,CAAC;QAE5E,IAAIC,WAAW,GAAGxS,eAAe,CAAC0R,cAAc,CAACC,OAAO,CAAC;QAEzD,IAAGa,WAAW,KAAK,EAAE,EACrB;UACE,IAAIC,UAAU,GAAG7S,gBAAgB,CAAC8S,iBAAiB,CAAC9D,IAAI,CAAC2D,cAAc,CAAC;UAExE,IAAGE,UAAU,EACb;YACE,OAAOA,UAAU,CAAC1D,IAAI,IAAI,EAAE;UAC9B;QACF;QAEA,OAAOyD,WAAW;MACpB;IACF;IAEA,OAAO,EAAE;EACX;EAEA,OAAOG,oBAAoBA,CAAC/D,IAAI,EAChC;IACE;IACA,IAAIA,IAAI,EAAEqD,UAAU,EAAEC,MAAM,EAC5B;MACE,IAAItD,IAAI,CAACqD,UAAU,CAAC,CAAC,CAAC,IAAIrD,IAAI,CAACqD,UAAU,CAAC,CAAC,CAAC,CAACE,eAAe,EAC5D;QACE,OAAOvD,IAAI,CAACqD,UAAU,CAAC,CAAC,CAAC,CAACE,eAAe;MAC3C;IACF;IAEA,OAAO,EAAE;EACX;EAEA,OAAOrC,SAASA,CAAC8C,MAAM,EACvB;IACE,QAAQA,MAAM;MAEZ,KAAK5S,eAAe,CAACgD,IAAI;MACzB,KAAKhD,eAAe,CAACiD,KAAK;MAC1B,KAAKjD,eAAe,CAACkD,IAAI;MACzB,KAAKlD,eAAe,CAACmD,GAAG;MACxB,KAAKnD,eAAe,CAACoD,IAAI;MACzB,KAAKpD,eAAe,CAACqD,OAAO;MAC5B,KAAKrD,eAAe,CAACsD,OAAO;MAC5B,KAAKtD,eAAe,CAACuD,gBAAgB;MACrC,KAAKvD,eAAe,CAAC0D,IAAI;MACzB,KAAK1D,eAAe,CAACyD,OAAO;MAC5B,KAAKzD,eAAe,CAACwD,eAAe;MACpC,KAAKxD,eAAe,CAACsF,YAAY;QAC/B,OAAO,KAAK;MACd,KAAKtF,eAAe,CAAC4D,SAAS;MAC9B,KAAK5D,eAAe,CAACmE,cAAc;MACnC,KAAKnE,eAAe,CAAC6D,QAAQ;MAC7B,KAAK7D,eAAe,CAAC8D,MAAM;MAC3B,KAAK9D,eAAe,CAAC+D,GAAG;MACxB,KAAK/D,eAAe,CAACgE,GAAG;MACxB,KAAKhE,eAAe,CAACkE,IAAI;MACzB,KAAKlE,eAAe,CAACiE,UAAU;MAC/B,KAAKjE,eAAe,CAACoE,KAAK;MAC1B,KAAKpE,eAAe,CAAC4E,OAAO;MAC5B,KAAK5E,eAAe,CAAC2E,MAAM;MAC3B,KAAK3E,eAAe,CAAC0E,WAAW;MAChC,KAAK1E,eAAe,CAACqE,UAAU;MAC/B,KAAKrE,eAAe,CAACsE,iBAAiB;MACtC,KAAKtE,eAAe,CAACwE,aAAa;MAClC,KAAKxE,eAAe,CAACyE,eAAe;QAClC,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EACd;;EAEA;AACF;AACA;AACA;AACA;EACE,OAAOoO,WAAWA,CAAC/D,EAAE,EACrB;IACE,QAAQgE,QAAQ,CAAChE,EAAE,CAAC;MAElB,KAAK9O,eAAe,CAACiL,oBAAoB;QACvC,OAAO,MAAM;MACf,KAAKjL,eAAe,CAACkL,mBAAmB;QACtC,OAAO,OAAO;MAChB,KAAKlL,eAAe,CAACmL,uBAAuB;QAC1C,OAAO,oBAAoB;MAC7B,KAAKnL,eAAe,CAACoL,oBAAoB;QACvC,OAAO,OAAO;MAChB,KAAKpL,eAAe,CAACqL,uBAAuB;QAC1C,OAAO,YAAY;MACrB,KAAKrL,eAAe,CAACsL,8BAA8B;QACjD,OAAO,yBAAyB;MAClC,KAAKtL,eAAe,CAACuL,oBAAoB;QACvC,OAAO,QAAQ;MACjB,KAAKvL,eAAe,CAACwL,oCAAoC;QACvD,OAAO,6BAA6B;MACtC,KAAKxL,eAAe,CAACyL,2BAA2B;QAC9C,OAAO,mBAAmB;MAC5B,KAAKzL,eAAe,CAAC0L,+BAA+B;QAClD,OAAO,yBAAyB;MAClC,KAAK1L,eAAe,CAAC2L,8BAA8B;QACjD,OAAO,gBAAgB;MACzB,KAAK3L,eAAe,CAAC4L,4BAA4B;QAC/C,OAAO,iBAAiB;MAC1B,KAAK5L,eAAe,CAAC6L,+BAA+B;QAClD,OAAO,4BAA4B;MACrC,KAAK7L,eAAe,CAAC8L,8BAA8B;QACjD,OAAO,qBAAqB;MAC9B,KAAK9L,eAAe,CAAC+L,uBAAuB;QAC1C,OAAO,eAAe;MACxB,KAAK/L,eAAe,CAACgM,yBAAyB;QAC5C,OAAO,cAAc;MACvB,KAAKhM,eAAe,CAACiM,4BAA4B;QAC/C,OAAO,oBAAoB;MAC7B,KAAKjM,eAAe,CAACkM,uBAAuB;QAC1C,OAAO,WAAW;MACpB,KAAKlM,eAAe,CAACmM,wBAAwB;QAC3C,OAAO,cAAc;MACvB,KAAKnM,eAAe,CAACoM,6BAA6B;QAChD,OAAO,oCAAoC;MAC7C,KAAKpM,eAAe,CAACqM,wBAAwB;QAC3C,OAAO,eAAe;MACxB,KAAKrM,eAAe,CAACsM,uBAAuB;QAC1C,OAAO,QAAQ;MACjB,KAAKtM,eAAe,CAACuM,gCAAgC;QACnD,OAAO,6BAA6B;MACtC,KAAKvM,eAAe,CAACwM,uBAAuB;QAC1C,OAAO,mBAAmB;MAC5B,KAAKxM,eAAe,CAACyM,+BAA+B;QAClD,OAAO,iCAAiC;MAC1C,KAAKzM,eAAe,CAAC0M,4BAA4B;QAC/C,OAAO,sBAAsB;MAC/B,KAAK1M,eAAe,CAAC2M,2BAA2B;QAC9C,OAAO,eAAe;MACxB,KAAK3M,eAAe,CAAC4M,mCAAmC;QACtD,OAAO,6BAA6B;MACtC,KAAK5M,eAAe,CAAC6M,gCAAgC;QACnD,OAAO,cAAc;MACvB,KAAK7M,eAAe,CAAC8M,2BAA2B;QAC9C,OAAO,qBAAqB;MAC9B,KAAK9M,eAAe,CAAC+M,6BAA6B;QAChD,OAAO,kBAAkB;MAC3B,KAAK/M,eAAe,CAACgN,qBAAqB;QACxC,OAAO,QAAQ;MACjB,KAAKhN,eAAe,CAACiN,+BAA+B;QAClD,OAAO,sDAAsD;MAC/D,KAAKjN,eAAe,CAACkN,2BAA2B;QAC9C,OAAO,kBAAkB;MAC3B,KAAKlN,eAAe,CAACmN,wBAAwB;QAC3C,OAAO,YAAY;MACrB,KAAKnN,eAAe,CAACoN,iCAAiC;QACpD,OAAO,wCAAwC;MACjD,KAAKpN,eAAe,CAACqN,6BAA6B;QAChD,OAAO,4EAA4E;MACrF,KAAKrN,eAAe,CAACsN,kBAAkB;QACrC,OAAO,KAAK;MACd,KAAKtN,eAAe,CAACuN,uBAAuB;QAC1C,OAAO,UAAU;MACnB,KAAKvN,eAAe,CAACwN,kCAAkC;QACrD,OAAO,wBAAwB;MACjC,KAAKxN,eAAe,CAACyN,mCAAmC;QACtD,OAAO,mBAAmB;MAC5B,KAAKzN,eAAe,CAAC0N,+BAA+B;QAClD,OAAO,0CAA0C;MACnD,KAAK1N,eAAe,CAAC2N,0CAA0C;QAC7D,OAAO,4EAA4E;MACrF,KAAK3N,eAAe,CAAC4N,uCAAuC;QAC1D,OAAO,8EAA8E;MACvF,KAAK5N,eAAe,CAAC6N,mCAAmC;QACtD,OAAO,sHAAsH;MAC/H,KAAK7N,eAAe,CAAC8N,gCAAgC;QACnD,OAAO,wCAAwC;MACjD,KAAK9N,eAAe,CAAC+N,oCAAoC;QACvD,OAAO,8DAA8D;MACvE,KAAK/N,eAAe,CAACgO,oCAAoC;QACvD,OAAO,6CAA6C;MACtD,KAAKhO,eAAe,CAACqO,gCAAgC;QACnD,OAAO,oBAAoB;MAC7B,KAAKrO,eAAe,CAACsO,yBAAyB;QAC5C,OAAO,8BAA8B;MACvC,KAAKtO,eAAe,CAACuO,wBAAwB;QAC3C,OAAO,wBAAwB;MACjC,KAAKvO,eAAe,CAACwO,uBAAuB;QAC1C,OAAO,wBAAwB;MACjC,KAAKxO,eAAe,CAACyO,0BAA0B;QAC7C,OAAO,mEAAmE;MAC5E,KAAKzO,eAAe,CAAC0O,6BAA6B;QAChD,OAAO,6EAA6E;MACtF,KAAK1O,eAAe,CAACiO,kCAAkC;QACrD,OAAO,qCAAqC;MAC9C,KAAKjO,eAAe,CAACkO,sCAAsC;QACzD,OAAO,iCAAiC;MAC1C,KAAKlO,eAAe,CAACmO,2CAA2C;QAC9D,OAAO,qDAAqD;MAC9D,KAAKnO,eAAe,CAACoO,gCAAgC;QACnD,OAAO,iEAAiE;IAC5E;EACF;EAGA,OAAO2E,QAAQA,CAACnE,IAAI,EACpB;IACE,IAAIA,IAAI,EACR;MACE,QAAQA,IAAI,CAACmB,OAAO;QAElB,KAAK/P,eAAe,CAACgD,IAAI;UACvB,oBAAOrD,KAAA,CAAAqT,aAAA;YAAKC,SAAS,EAAC,MAAM;YAACC,GAAG,EAAEC,OAAO,CAAC,2BAA2B,CAAC,CAACC;UAAQ,CAAC,CAAC;QACnF,KAAKpT,eAAe,CAACiD,KAAK;UACxB,oBAAOtD,KAAA,CAAAqT,aAAA;YAAKC,SAAS,EAAC,OAAO;YAACC,GAAG,EAAEC,OAAO,CAAC,2BAA2B,CAAC,CAACC;UAAQ,CAAC,CAAC;QACpF,KAAKpT,eAAe,CAACmD,GAAG;UACtB,oBAAOxD,KAAA,CAAAqT,aAAA;YAAKC,SAAS,EAAC,KAAK;YAACC,GAAG,EAAEC,OAAO,CAAC,yBAAyB,CAAC,CAACC;UAAQ,CAAC,CAAC;QAChF,KAAKpT,eAAe,CAACoD,IAAI;QACzB,KAAKpD,eAAe,CAACkD,IAAI;QACzB,KAAKlD,eAAe,CAACqD,OAAO;QAC5B,KAAKrD,eAAe,CAACsD,OAAO;QAC5B,KAAKtD,eAAe,CAACuD,gBAAgB;QACrC,KAAKvD,eAAe,CAACwD,eAAe;UAClC,oBAAO7D,KAAA,CAAAqT,aAAA;YAAKC,SAAS,EAAC,MAAM;YAACC,GAAG,EAAEC,OAAO,CAAC,0BAA0B,CAAC,CAACC;UAAQ,CAAC,CAAC;QAClF,KAAKpT,eAAe,CAACiF,UAAU;UAC7B,oBAAOtF,KAAA,CAAAqT,aAAA;YAAKC,SAAS,EAAC,KAAK;YAACC,GAAG,EAAEC,OAAO,CAAC,yBAAyB,CAAC,CAACC;UAAQ,CAAC,CAAC;QAChF,KAAKpT,eAAe,CAACkF,WAAW;UAC9B,oBAAOvF,KAAA,CAAAqT,aAAA;YAAKC,SAAS,EAAC,MAAM;YAACC,GAAG,EAAEC,OAAO,CAAC,2BAA2B,CAAC,CAACC;UAAQ,CAAC,CAAC;QACnF,KAAKpT,eAAe,CAACmF,MAAM;QAC3B,KAAKnF,eAAe,CAACqF,IAAI;QACzB,KAAKrF,eAAe,CAACoF,OAAO;UAC1B,oBAAOzF,KAAA,CAAAqT,aAAA;YAAKC,SAAS,EAAC,MAAM;YAACC,GAAG,EAAEC,OAAO,CAAC,0BAA0B,CAAC,CAACC;UAAQ,CAAC,CAAC;QAClF,KAAKpT,eAAe,CAACgF,iBAAiB;UACpC,oBAAOrF,KAAA,CAAAqT,aAAA;YAAKC,SAAS,EAAC,MAAM;YAACC,GAAG,EAAEC,OAAO,CAAC,0BAA0B,CAAC,CAACC;UAAQ,CAAC,CAAC;QAClF,KAAKpT,eAAe,CAACgH,aAAa;QAClC,KAAKhH,eAAe,CAACiH,kBAAkB;QACvC,KAAKjH,eAAe,CAACkH,gBAAgB;QACrC,KAAKlH,eAAe,CAACmH,aAAa;QAClC,KAAKnH,eAAe,CAACoH,gBAAgB;QACrC,KAAKpH,eAAe,CAACqH,eAAe;QACpC,KAAKrH,eAAe,CAACsH,qBAAqB;QAC1C,KAAKtH,eAAe,CAACuH,kBAAkB;QACvC,KAAKvH,eAAe,CAACwH,wBAAwB;QAC7C,KAAKxH,eAAe,CAACyH,aAAa;QAClC,KAAKzH,eAAe,CAAC0H,gBAAgB;UACnC,oBAAO/H,KAAA,CAAAqT,aAAA;YAAKC,SAAS,EAAC,MAAM;YAACC,GAAG,EAAEC,OAAO,CAAC,4BAA4B,CAAC,CAACC;UAAQ,CAAC,CAAC;QACpF;UACE,oBAAOzT,KAAA,CAAAqT,aAAA;YAAKC,SAAS,EAAC,MAAM;YAACC,GAAG,EAAEC,OAAO,CAAC,0BAA0B,CAAC,CAACC;UAAQ,CAAC,CAAC;MACpF;IACF;EACF;AACF"}